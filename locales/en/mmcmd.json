{
	"languageCode": "en",
	"decimalSeparator": ",",
	"concatTableColumnMismatch": "Can't concat table values with different column counts",
	"dataTableDisplayName": "Data Table",
	"displayUnitTypeMismatch": "Unit type mismatch in setting display unit {{unitName}} on table value",
	"error": "Error",
	"exprDisplayName": "Expression",
	"formulaArgCountError": "Incorrect number of arguments\nin: {{path}}\nformula: {{formula}}",
	"formulaArrayInitError": "The intialization variable for the array function must be numeric or a string",
	"formulaBadUnit": "Unrecognized unit in formula",
	"formulaBraceMismatch": "Mismatched function brace",
	"formulaAngleNotDimensionless": "Angle value must be have dimensionless unit",
	"formulaComplexColumnCount": "Arguments for a complex function must have only 1 or 2 columns",
	"formulaException": "Error evaluating formula:\n{{formula}}\nin tool: {{path}}",
	"formulaFunctionError": "Error in function {{name}}\nin: {{path}}\nformula: {{formula}}",
	"formulaFunctionUnitsEqual": "Arguments must have the same type of units for function {{name}}",
	"formulaFunctionUnitsNone": "Arguments must have dimensionless units for function {{name}}",
	"formulaIndexMismatch": "Mismatched index operators []\nin: {{path}}\nformula: {{formula}}",
	"formulaJSError": "Javascript error:\n{{error}}",
	"formulaMissingTool": "Could not find tool {{name}}\nin formula {{formula}}\nin tool {{path}}",
	"formulaMonadicUnitNone": "function requires argument have dimensionless unit (e.g. Fraction)",
	"formulaInvalidNumber": "Invalid number in formula:\n{{formula}}\nin tool {{path}}",
	"formulaParenMismatch": "Mismatched parenthesis\nin: {{path}}\nformula: {{formula}}",
	"formulaPolarSingleError": "Single argument does not have two columns",
	"formulaRangeUnits": "Arguments to range operator must be dimensionless\nin: {{path}}\nformula: {{formula}}",
	"formulaRecursion": "Recursion Error\nSelf reference in formula {{formula}}\nTool path: {{path}}",
	"formulaSyntaxError": "Formula syntax Error\nin: {{path}}\nformula: {{formula}}",
	"formulaUnknownFunction": "Unknown function {{f}}",
	"jsonImportFailed": "Failed to initialize a session from the supplied json\n\n{{error}}",
	"matrixCellValueNotScalar": "Cell value is not a scalar\n\npath: {{path}}\nrow: {{row}}\ncolumn: {{column}}\nformula: {{formula}}",
	"matrixDisplayName": "Matrix",
	"matrixNestingError": "Matrix nesting error",
	"matrixRowColumnError": "Invalid matrix row or column\n\nPath: {{path}}\nArgs: {{args}}",
	"matrixSetCellError": "Error setting matrix cell\n\nPath: {{path}}\nArgs: {{args}}",
	"matrixRowCountHasUnit": "Matrix Row Count has unit",
	"matrixWrongUnitType": "Wrong unit type in matrix input\n\nPath: {{path}}\nInput: {{input}}",
	"modelDisplayName": "Model",
	"modelInvalidPosition": "Invalid position parameter {{pos}}\nfor tool {{name}}",
	"modelSetPosition": "Could not set position for {{tool}} in command\n{{command}}",
	"modelInvalidToolName": "{{name}} is not a valid name for an added tool",
	"modelInvalidToolType": "Cannot create {{name}} as there is no tool with type {{typeName}}",
	"noIndexedDB": "Browser does not support IndexedDB, necessary for session storage",
	"parseSessionError": "Could not parse the session information\n{{error}}",
	"sessionCopyFailed": "There was an error attempting to copy the session\n{{oldPath}} to\n{{newPath}}\n{{error}}",
	"sessionDeleteFailed": "There was an error attempting to delete the session\n{{path}}\n{{error}}",
	"sessionSaveFailed": "There was an error attempting to save the session to\n{{path}}\n{{error}}",
	"sessionLoadFailed": "There was an error attempting to load the session\n{{path}}\n{{error}}",
	"sessionRenameFailed": "There was an error attempting to rename the session\n{{oldPath}} to\n{{newPath}}\n{{error}}",
	"tableTableArithColumnCount": "Tables must have the same number of columns in arithmetic operations",
	"tableAddRowUnitMismatch": "Add row unit type mismatch for column {{name}}",
	"tableArithColumnMismatch": "Mismatch in table columns\n\nTable columns must conform in arithmetic operations",
	"tableArithNonscalarColumnCount": "Number values in arithmetic operation on table must have a single column",
	"tableArithRowCount": "Arithmetic operations on table must have matching row counts",
	"tableBadColumnName": "Could not find a column with name {{name}}\n\nIn table at: {{path}}",
	"tableBadCsvHeader": "the header section for a csv table was invalid for {{path}}",
	"tableBadUnit": "Unrecognized unit '{{unit}}' in table column {{name}}",
	"tableCsvExpectedString": "Expected string in csv table {{path}}\n\ntoken: {{token}}\ncolumn: {{column}}\nrow: {{row}}",
	"tableCsvRowCountsDiffer": "Row counts are all the same in csv table {{path}}",
	"tableCsvUnexpectedString": "Unexpected string in csv table {{path}}\n\ntoken: {{token}}\ncolumn: {{column}}\nrow: {{row}}",
	"tableCsvColumnCountsDiffer": "Different number of names and units in csv table {{path}}",
	"tableNumberValueUnits": "All columns of a table must have the same units when attempting to convert to a number value",
	"tableRowColumnError": "Invalid table row or column\n\nPath: {{path}}\nArgs: {{args}}",
	"tableSetCellError": "Error setting table cell\n\nPath: {{path}}\nArgs: {{args}}",
	"tableTypeMismatch": "Data table error\n\nString/Number type mismatch for row {{row}} of column {{column}} of {{table}}",
	"tableUnitTypeMismatch": "Data table error\n\nUnit type mismatch for row {{row}} of column {{column}} of {{table}}",
	"tableValueIndexError": "Illegal index in table value",
	"valueMatrixBoundsError": "Index [{{row}},{{column}}] out of bounds [{{rowCount}},{{columnCount}}]",
	"valuePowerHasUnits": "Exponent cannot have units",
	"valuePowerOfArrayWithUnits": "Exponent cannot be an array if the raised value has units",
	"valueRowBoundError": "Row index {{index}} not in bounds [{{rBound}},{{cBound}}]",
	"valueUnequalUnitDimensions": "Unit dimensions do not match",
	"viewError": "There was an error trying to show the view",
	"unimplemented": "{{feature}} is not yet implemented",
	"warning": "Warning",
	"?setColumnUnit": "set the display unit for a column\n\nusage: setcolumnunit columnNumber unitName",
	"?formulaRefresh": "reevaluate the formula\n\nusage: refresh",
	"?formulaValue": "return formula value as json\n\nusage: value",
	"?matrixSetCell": "set cell value\n\nusage: setcell row col input",
	"?matrixSetColumnCount": "set column count\n\nusage: setcolumncount countFormula",
	"?matrixSetRowCount": "set row count\n\nusage: setrowcount countFormula",
	"?modelAddTool": "usage: addTool typeName [name] [x y]\n\nif second argument is present and a number, it is assumed to be x",
	"?modelDgmInfo": "returns tool info used for diagram\n\nusage: dgmInfo",
	"?modelPaste": "Paste tool(s) into model\n\nusage: paste positionX positionY toolJson",
	"?modelRemoveTool": "removed the named tool(s) from the model\n\nusage: removetool toolName {toolName...}",
	"?modelRestoreTool": "used by undo to restore a deleted tool to a model\n\nusage restoretool recoveryJson",
	"?modelSetPositions": "usage: setpositions {series of toolname x y values",
	"?sessionCopy": "Create a copy of a session\n\nusage: copy fromPath toPath",
	"?sessionDelete": "Delete a session\n\nusage: delete path",
	"?sessionGetJson": "Returns the json of session suitable for storing.\nPath is only used for json case name\n\nusage: getjson {path}",
	"?sessionList": "List the local sessions\n\nusage: listsessions",
	"?sessionLoad": ":oads session at path\n\nusage: load path",
	"?sessionNew": "Create an empty session with name path or _unnamed if omitted\n\nusage: new {path}",
	"?sessionPopModel": "Switch current model to its parent\n\nusage popmodel",
	"?sessionPushModel": "Switch current model to the child model named modelName\n\nusage pushmodel modelName",
	"?sessionSave": "Save session to path or to current path if omitted\n\nusage: save {path}",
	"?tableAddColumn": "add a column to a data table\n\nusage: addcolumn",
	"?tableAddRow": "add a row to the data table\n\nusage addrow rowNumber\n\nif rowNumber is omitted or invalid, row is added to bottom",
	"?tableMoveColumn": "move column position\n\nusage: moveColumn fromNumber toNumber",
	"?tableRemoveColumn": "remove a column from the data table\n\nusage removecolumn columnName",
	"?tableRemoveRows": "remove a row from the data table\n\nusage removerows rowNumber(s)",
	"?tableRestoreColumn": "used by undo to restore a deleted table column\n\nusage restorecolumn columnNumber recoveryJson",
	"?tableRestoreRows": "used by undo to restore a deleted table row\n\nusage restorerows recoveryJson",
	"?tableSetCell": "sets value of cell\n\nusage: setcell rowNumber columnNumber value",
	"?toolViewInfo": "returns json information about tool used for info views\n\nusage: toolPath toolviewinfo",
	"?toolValue": "returns value as json\n\nusage: value"
}