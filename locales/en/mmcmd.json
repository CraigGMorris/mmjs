{
	"languageCode": "en",
	"decimalSeparator": ",",
	"alert": "Alert",
	"alertMessage": "{{msg}}",
	"appendTableRowMismatch": "Can't append table values with different row counts",
	"buttonDisplayName": "Button",
	"calculating": "Calculating",
	"concatColumnTypeMismatch": "Can't concat table values with different column types",
	"concatTableColumnMismatch": "Can't concat table values with different column counts",
	"concatTypeMismatch": "Can't concat differing types",
	"couchFromError": "There was an error syncing from CouchDB {{dest}}\n{{msg}}",
	"couchToError": "There was an error syncing to CouchDB {{dest}}\n{{msg}}",
	"crossProductNot3": "The number of values in cross product arguments must be divisible by 3",
	"dataTableDisplayName": "Data Table",
	"displayUnitTypeMismatch": "Unit type mismatch in setting display unit {{unitName}} on table value",
	"eigenQRIterations": "Too many iteratons in eigen value calculation",
	"emptyAlert": "Alert with no message",
	"error": "Error",
	"evaljsBadArg": "evaljs - invalid argument {{argNo}}\nin: {{path}}\nformula: {{formula}}",
	"evaljsBadColumnCount": "evaljs - column count {{columnCount}} does not divide evenly into the value count {{valueCount}}",
	"evaljsDisabled": "evaljs is disabled on this server",
	"evaljsNoColumnName": "evaljs - no name for column {{colNo}}\n\nin: {{path}}\nformula: {{formula}}",
	"evaljsNoValues": "evaljs - no value for column {{colNo}}\n\nin: {{path}}\nformula: {{formula}}",
	"evaljsNoObjValues": "evaljs - nno value in object return\n\nin: {{path}}\nformula: {{formula}}",
	"evaljsUnequalRowCount": "evaljs - all columns must have the same number of values\n\nin: {{path}}\nformula: {{formula}}",
	"exprDisplayName": "Expression",
	"formulaAndSizeMismatch": "All nonscalar arguments for the and function must be the same size",
	"formulaAndArgTypeError": "And function arguments must be strings or numbers",
	"formulaArgCountError": "Incorrect number of arguments\nin: {{path}}\nformula: {{formula}}",
	"formulaArrayInitError": "The intialization variable for the array function must be numeric or a string",
	"formulaBadJsonValue": "Error in JSON description\n\n{{msg}}",
	"formulaBadUnit": "Unrecognized unit in formula",
	"formulaBraceMismatch": "Mismatched function brace",
	"formulaAngleNotDimensionless": "Angle value must be have dimensionless unit",
	"formulaComplexColumnCount": "Arguments for a complex function must have only 1 or 2 columns",
	"formulaException": "Error evaluating formula in tool: {{path}}:\nFormula:\n{{formula}}",
	"formulaFunctionError": "Error in function {{name}}\nin: {{path}}\nformula: {{formula}}",
	"formulaFunctionUnitsEqual": "Arguments must have the same type of units for function {{name}}",
	"formulaFunctionUnitsNone": "Arguments must have dimensionless units for function {{name}}",
	"formulaGetBitTypeError": "Getbit function must be numbers",
	"formulaGroupArgs": "group{{action}} arguments must be a table value and column name\nin: {{path}}\nformula: {{formula}}",
	"formulaIndexMismatch": "Mismatched index operators []\nin: {{path}}\nformula: {{formula}}",
	"formulaJSError": "Javascript error:\n{{error}}",
	"formulaLookupSizeMismatch": "Different number of indexes and values in lookup function",
	"formulaLookupTooSmall": "Insufficient number of indexes and values in lookup function",
	"formulaMissingTool": "Could not find tool {{name}}\nin formula {{formula}}\nin tool {{path}}",
	"formulaMonadicUnitNone": "function requires argument have dimensionless unit (e.g. Fraction)",
	"formulaIndexOfTypeError": "parameters to the indexof function must both be numeric or both be string values",
	"formulaInvalidNumber": "Invalid number in formula:\n{{formula}}\nin tool {{path}}",
	"formulaOrArgTypeError": "Or function arguments must be strings or numbers",
	"formulaOrSizeMismatch": "All nonscalar arguments for the or function must be the same size",
	"formulaParenMismatch": "Mismatched parenthesis\nin: {{path}}\nformula: {{formula}}",
	"formulaPolarSingleError": "Single argument does not have two columns",
	"formulaRangeUnits": "Arguments to range operator must be dimensionless\nin: {{path}}\nformula: {{formula}}",
	"formulaRecursion": "Recursion Error\nSelf reference in formula {{formula}}\nTool path: {{path}}",
	"formulaRedimCountError": "New column count does not evenly divide in redim",
	"formulaScaleDimError": "Invalid scale argument dimensions",
	"formulaSelectColumns": "Select function selector can only have one column",
	"formulaSelectBadColumn": "Select function column number ({{number}}) invalid",
	"formulaSelectRowMismatch": "Select function selector has wrong number of rows",
	"formulaSortBadColumn": "Invalid column number for sort\nin: {{path}}\nformula: {{formula}}",
	"formulaSyntaxError": "Formula syntax Error\nin: {{path}}\nformula: {{formula}}",
	"formulaTptestSizeMismatch": "Arguments to tptest must have the same number of values.",
	"formulaTransformDimError": "Invalid argument dimensions in transform",
	"formulaTranslateDimError": "Translate argument must be array 3 long",
	"formulaFmtUnitError": "If present, a third fmt function argument must be a unit",
	"formulaUnknownFunction": "Unknown function {{f}}",
	"graphAddFail": "Could not add axis {{name}} to\n\n{{path}}",
	"graphCantDelete3DZ": "Can't delete Z value if there is another X value\n\nGraph: {{path}}",
	"graphCantDeleteLast": "Can't Delete Last {{vName}} in graph\n\n{{path}}",
	"graphDisplayName": "Graph",
	"graphRemoveFailed": "Count not remove axis {{name}}",
	"graphRestoreFail": "Could not restore {{name}}",
	"graphUnitError": "Graph {{type}} value unit dimensions mismatch in {{path}}\n\n:\nv: {{v}}\n{{type}}:{{vtype}}",
	"htmlBadAction": "Unrecognized request action {{action}} in html page {{path}}",
	"htmlBadActionJson": "Error in action JSON for Html page {{path}}\n\n{{msg}}",
	"htmlPageDisplayName": "Html Page",
	"iterDisplayName": "Iterator",
	"iterStatus": "{{name}} i: {{i}} x: {{x}}",
	"jsonImportFailed": "Failed to initialize a session from the supplied json\n\n{{error}}",
	"mathBrentIterating": "Brent iter: {{iter}} error: {{error}}",
	"mathBrentIterExceeded": "Maximum iterations of {{iter}} exceeded in Brent solution",
	"mathBrentNoBracket": "Root was not bracketed in Brent solution",
	"mathBrodenIterating": "Broyden iter: {{iter}} error: {{error}}",
	"mathBroydenIterExceeded": "Maximum iterations of {{iter}} exceeded in Broyden solution",
	"mathBroydenSpurious": "A spurious solution with a zero gradient occurred in Broyden",
	"mathJacobianCalc": "Jacobian Calc",
	"mathJacobianSingular": "Jacobian is singular",
	"mathLineSearchFailed": "Line search failed in Broyden",
	"mathLineSearchRoundOff": "Roundoff problem in line search",
	"matrixCellValueNotScalar": "Cell value is not a scalar\n\npath: {{path}}\nrow: {{row}}\ncolumn: {{column}}\nformula: {{formula}}",
	"matrixDisplayName": "Matrix",
	"matrixInvertNotSquare": "matrix not square in invert",
	"matrixLuBackSubNotSquare": "matrix not square in luBackSubstitute",
	"matrixLuDecompNotSquare": "matrix not square in luDecomp",
	"matrixLudecompSingular": "matrix is singular in luDecomp",
	"matrixMultiplyeColsNeRows": "Number of A columns is not equal to number of B rows B in matrix multiply",
	"matrixNestingError": "Matrix nesting error",
	"matrixNotSquare": "matrix not square in function {{f}}",
	"matrixRowColumnError": "Invalid matrix row or column\n\nPath: {{path}}\nArgs: {{args}}",
	"matrixSetCellError": "Error setting matrix cell\n\nPath: {{path}}\nArgs: {{args}}",
	"matrixRowCountHasUnit": "Matrix Row Count has unit",
	"matrixWrongUnitType": "Wrong unit type in matrix input\n\nPath: {{path}}\nInput: {{input}}",
	"menuDisplayName": "Menu",
	"modelDisplayName": "Model",
	"modelImportDisplayName": "Imported Model",
	"modelImportJsonError": "The imported model named {{name}} could not be interpreted\n\nin model {{path}}.\n\nIt has been placed in an expression as a string",
	"sessionImportNotFound": "The imported model named {{name}} could not be found\n\nin model {{path}}.",
	"modelInvalidPosition": "Invalid position parameter {{pos}}\nfor tool {{name}}",
	"modelInvalidToolName": "{{name}} is not a valid name for an added tool",
	"modelInvalidToolType": "Cannot create {{name}} as there is no tool with type {{typeName}}",
	"modelMissingToolName": "No tool name given",
	"modelRecursiveImport": "Recursive import of {{importName}} in {{path}}",
	"modelSetPosition": "Could not set position for {{tool}} in command\n{{command}}",
	"noIndexedDB": "Browser does not support IndexedDB, necessary for session storage",
	"odeAbsTolColumnCount": "Absolute error column count does not match Y column count in ODE {{path}}",
	"odeAbsTolNotNumber": "Absolute error value must be numeric in ODE {{path}}",
	"odeAbsTolUnitsMisMatch": "Absolute tolerances must have same units as Y for ODE {{path}}",
	"odeColumnNumberMismatch": "Should not happen\n\ncolumn number mismatch in ODE",
	"odeConvFailure": "Convergence test failures occurred too many times during one internal time step\nor minimum step size was reached in ODE {{path}}",
	"odeDisplayName": "ODE Solver",
	"odeDyCountMismatch": "dy count does not match y count in ODE {{path}}",
	"odeDyUnitMismatch": "dy units are not compatible with y * t units in ODE {{path}}",
	"odeErrFailure": "Error test failures occurred too many times during one internal time step\nor minimum step size was reached\nin ODE {{path}}",
	"odeJacobianError": "Could not calculate Jacobian in ODE {{path}}",
	"odeException": "ODE Solver Exception in {{path}}\n\n{{msg}}",
	"odeMissingDy": "Could not calculate dY in ODE {{path}}",
	"odeNextTEndTMismatch": "Next T must have same units as End T for ODE {{path}}",
	"odeNonumericDy": "Nonnumeric dy in ODE {{path}}",
	"odeRecordTimeError": "Could not calculate next reporting time in ODE {{path}}",
	"odeRelTolHasUnits": "Relative tolerance unit must be dimensionless in ODE {{path}}",
	"odeSetErrorWtFailed": "Set error weight failed in ODE {{path}}",
	"odeSizeMismatch": "dY has different number of elements than Y\n\nin ODE {{path}}",
	"odeStatusT": "ODE Solver: {{path}} T: {{t}}",
	"odeTooMuchAccuracy": "ODE took the maximum internal steps but could not reach the next T.\n{{path}}",
	"odeTooMuchWork": "Too many internal steps in ODE {{path}}",
	"odeZeroStepSize": "Zero step size in ODE {{path}}",
	"optBrentIter": "Max iterations exceeded in optimizer brent calc\n\n{{path}}",
	"optDisplayName": "Optimizer",
	"optError": "Optimizer error for {{path}}\n\n{{msg}}",
	"optException": "Optimizer Exception in {{path}}\n\n{{msg}}",
	"optPowellIterError": "Maximum itereations exceed in Powell optimization for {{path}}",
	"optStatus": "Optimizer {{iter}} {{error}} {{dimension}}",
	"parseSessionError": "Could not parse the session information\n{{error}}",
	"recordLengthError": "Not all recorded rows are the same size in {{path}}",
	"recordValueError": "Could not calculate recorded value {{number}}\n\nfor {{path}}",
	"recordTableError": "Recorded value {{number}} cannot be a table value\n\nfor {{path}}",
	"sessionAutoLoadFailed": "There was an error attempting to load the auto saved session\n{{error}}",
	"sessionCopyFailed": "There was an error attempting to copy the session\n{{oldPath}} to\n{{newPath}}\n{{error}}",
	"sessionDeleteFailed": "There was an error attempting to delete the session\n{{path}}\n{{error}}",
	"sessionInvalidImport": "The imported content isn't recognized as a session or folder archive",
	"sessionLoadUrlFailed": "Failed to load {{url}}\n\n{{error}}",
	"sessionSaveFailed": "There was an error attempting to save the session to\n{{path}}\n{{error}}",
	"sessionLoadFailed": "There was an error attempting to load the session\n{{path}}\n{{error}}",
	"sessionRenameFailed": "There was an error attempting to rename the session\n{{oldPath}} to\n{{newPath}}\n{{error}}",
	"solverCalcFailure": "fx could not be calculated in solver {{path}}",
	"solverCalcOverrun": "fx had more values than outputs in solver {{path}}",
	"solverCountLabel": "nx",
	"solverDisplayName": "Function Solver",
	"solverError": "Solver error for {{path}}\n\n{{msg}}",
	"solverFormulaLabel": "f{{n}}",
	"solverFxFail": "fx could not be calculated in solver {{path}}",
	"solverFxLabel": "fx{{n}}",
	"solverRestoreError": "Could not restore function for {{path}}\n\njson:\n{{json}}",
	"solverXLabel": "x{{n}}",
	"solverRemoveRowError": "Cannot remove equation\nInvalid number {{row}} in\n{{path}}",
	"tableTableArithColumnCount": "Tables must have the same number of columns in arithmetic operations",
	"tableAddRowUnitMismatch": "Add row unit type mismatch for column {{name}}",
	"tableArithColumnMismatch": "Mismatch in table columns\n\nTable columns must conform in arithmetic operations",
	"tableArithNonscalarColumnCount": "Number values in arithmetic operation on table must have a single column",
	"tableArithRowCount": "Arithmetic operations on table must have matching row counts",
	"tableBadColumnJson": "Error in JSON column description for {{path}}\n\n{{msg}}",
	"tableBadColumnName": "Could not find a column with name {{name}}\n\nIn table at: {{path}}",
	"tableBadCsvHeader": "the header section for a csv table was invalid for {{path}}",
	"tableBadUnit": "Unrecognized unit '{{unit}}' in table column {{name}}",
	"tableDuplicateColumnName": "A column already has the name {{name}} in {{path}}",
	"tableCsvExpectedString": "Expected string in csv table {{path}}\n\ntoken: {{token}}\ncolumn: {{column}}\nrow: {{row}}",
	"tableCsvRowCountsDiffer": "Row counts aren't all the same in csv table {{path}}\n\ncolumn {{column}} {{ilength}} != {{rowcount}}",
	"tableCsvUnexpectedString": "Unexpected string in csv table {{path}}\n\ntoken: {{token}}\ncolumn: {{column}}\nrow: {{row}}",
	"tableCsvColumnCountsDiffer": "Different number of names and units in csv table {{path}}",
	"tableNameNotString": "Invalid name argument in\n\n{{path}}\n{{formula}}",
	"tableNumberValueUnits": "All columns of a table must have the same units when attempting to convert to a number value",
	"tableRowColumnError": "Invalid table row or column\n\nPath: {{path}}\nArgs: {{args}}",
	"tableSelectSyntax": "Syntax error in select function term \"{{term}}\"",
	"tableSelectUnitMismatch": "The column and value don't have the same unit types in select term {{term}}",
	"tableSelectBadColumn": "Could not find column name {{name}} in table select function",
	"tableSetCellError": "Error setting table cell\n\nPath: {{path}}\nArgs: {{args}}",
	"tableTypeMismatch": "Data table error\n\nString/Number type mismatch for row {{row}} of column {{column}} of {{table}}",
	"tableUnitTypeMismatch": "Data table error\n\nUnit type mismatch for row {{row}} of column {{column}} of {{table}}",
	"tableUpdateNoName": "Could not find a column named '{{name}}' in {{path}}",
	"tableValueIndexError": "Illegal index in table value",
	"toolBadName": "Illegal name {{name}}",
	"unitIgnoreUserUnit": "Ignoring user unit {{unit}}\nIs already a master unit",
	"unitTypeMismatch": "Unit types don't match",
	"valueMatrixBoundsError": "Index [{{row}},{{column}}] out of bounds [{{rowCount}},{{columnCount}}]",
	"valuePowerHasUnits": "Exponent cannot have units",
	"valuePowerOfArrayWithUnits": "Exponent cannot be an array if the raised value has units",
	"valueRowBoundError": "Row index {{index}} not in bounds [{{rBound}},{{cBound}}]",
	"valueUnequalUnitDimensions": "Unit dimensions do not match",
	"viewError": "There was an error trying to show the view",
	"unimplemented": "{{feature}} is not yet implemented",
	"warning": "Warning",
	"_exprSetColumnUnit": "set the display unit for a column\n\nusage: setcolumnunit columnNumber unitName",
	"_exprSetColumnFormat": "set the display format for a column\n\nusage: setcolumnformat columnNumber formatString",
	"_formulaRefresh": "reevaluate the formula\n\nusage: refresh",
	"_formulaValue": "return formula value as json\n\nusage: value",
	"_fpreview": "evaluate arbitrary formula and return value\n\nusage: tool fpreview namespace formula",
	"_graphAddAxis": "Add an axis to the graph\n\nusage: addaxis axisName\n\nwhere axisName is of form x, y, z, y2, y2_3, z2 etc",
	"_graphPlotInfo": "returns information needed to draw plot",
	"_graphRemoveAxis": "removes the named axis\n\nusage removeaxis axisName",
	"_graphRestoreAxis": "used by undo to restore graph axis\n\nusage: restoreaxis recoveryJson",
	"_graphSetLineType": "set the line type to line, scatter, bar or bar+dot\n\nusage: setlinetype lineName type",
	"_graphSetUnit": "set the display unit for an axis\n\nusage: setunit axisName unitName",
	"_graphSvg": "returns svg representation\n\noptional argument specifying axes can be given\n\nusage: svg {axisName}  e.g. y2_3",
	"_htmlAction": "processes the action in the json message argument\nused internally by html page\n\nusage:htmlaction jsonMessage",
	"_iterAddRecorded": "Add a recording formula\n\nusage addrecorded",
	"_iterRemoveRecorded": "Remove a recording formula\n\nremoverecorded n\n\nwhere n is one based",
	"_iterReset": "reset the iterator to the initial state\n\nusage: reset",
	"_iterRestoreRecorded":  "used by undo to restore recorded value definition\n\nusage: restorerecorded recoveryJson",
	"_matrixSetCell": "set cell value\n\nusage: setcell row col input",
	"_matrixSetColumnCount": "set column count\n\nusage: setcolumncount countFormula",
	"_matrixSetRowCount": "set row count\n\nusage: setrowcount countFormula",
	"_modelAddTool": "usage: addTool typeName [name] [x y]\n\nif second argument is present and a number, it is assumed to be x",
	"_modelCopyAsTable": "usage: copyAsTable toolName",
	"_modelCopyTool": "usage: copyTool toolName",
	"_modelDgmInfo": "returns tool info used for diagram\n\nusage: dgmInfo",
	"_modelImport": "import a session as an imported model\n\nusage: import sessionPath",
	"_modelMakeLocal": "make an imported model and normal local model\n\nusage: makelocal",
	"_modelPaste": "Paste tool(s) into model\n\nusage: paste positionX positionY toolJson",
	"_modelRemoveTool": "remove the named tool(s) from the model\n\nusage: removetool toolName {toolName...}",
	"_modelRestoreImport": "used by undo to restore a import information to a model\n\nusage restoreimport recoveryJson",
	"_modelRestoreTool": "used by undo to restore a deleted tool to a model\n\nusage restoretool recoveryJson",
	"_modelSetPositions": "usage: setpositions {series of toolname x y values}",
	"_odeAddRecorded": "Add a recording formula\n\nusage addrecorded",
	"_odeRemoveRecorded": "Remove a recording formula\n\nremoverecorded n\n\nwhere n is one based",
	"_odeRestoreRecorded":  "used by undo to restore recorded value definition\n\nusage: restorerecorded recoveryJson",
	"_odeReset": "reset the ODE to the initial state\n\nusage: reset",
	"_odeRun": "usage: run",
	"_optReset": "Reset the optimizer outputs to 0 and disable\n\nusage: reset",
	"_sessionCopy": "Create a copy of a session\n\nusage: copy fromPath toPath",
	"_sessionDelete": "Delete a session\n\nusage: delete path",
	"_sessionDeleteAll": "Delete ALL!!! sessions. Be sure about this",
	"_sessionGetJson": "Returns the json of session suitable for storing.\nIf path is supplied, that session will be returned\n\nusage: getjson {path}",
	"_sessionImport": "creates session from the json argument\n\nusage import json",
	"_sessionList": "List the local sessions\n\nusage: listsessions",
	"_sessionLoad": "loads session at path\n\nusage: load path",
	"_sessionLoadUrl": "loads session at url\n\nusage: load url",
	"_sessionNew": "Create an empty session with name path or (unnamed) if omitted\n\nusage: new {path}",
	"_sessionPopModel": "Switch current model to its parent\n\nusage popmodel",
	"_sessionPushModel": "Switch current model to the child model named modelName\n\nusage pushmodel modelName",
	"_sessionRemote": "Set the url for CouchDB syncing\n\nusage: remote url",
	"_sessionSave": "Save session to path or to current path if omitted\n\nusage: save {path}",
	"_solverAddFunction": "Add a function to the solver - can optionally include function number\n\nusage: reset {number}",
	"_solverRemoveFunction": "Remove function number\n\nusage: removefunction fNumber",
	"_solverReset": "Reset the solver outputs to 0 and disable\n\nusage: reset",
	"_tableAddColumn": "add a column to a data table\n\nusage: addcolumn",
	"_tableAddRow": "add a row to the data table\n\nusage addrow rowNumber columnValues\n\nif rowNumber is omitted or invalid, row is added to bottom\n\nif supplied columnValues must be json with column names and values\n\nColumns not included will be filled as normal",
	"_tableMoveColumn": "move column position\n\nusage: moveColumn fromNumber toNumber",
	"_tableRemoveColumn": "remove a column from the data table\n\nusage removecolumn columnName",
	"_tableRemoveRows": "remove a row from the data table\n\nusage removerows rowNumber(s)",
	"_tableRestoreColumn": "used by undo to restore a deleted table column\n\nusage restorecolumn columnNumber recoveryJson",
	"_tableRestoreRows": "used by undo to restore a deleted table row\n\nusage restorerows recoveryJson",
	"_tableUndoAddRow": "used by undo to remove added row - uses unfiltered row number",
	"_tableSetCell": "sets value of cell\n\nusage: setcell rowNumber columnNumber value",
	"_toolViewInfo": "returns json information about tool used for info views\n\nusage: toolviewinfo",
	"_toolValue": "returns value as json\n\nusage: value",
	"_valueJson": "returns json for tool value described by description\n\nusage: value description"
}