{
	"Program": "Rtm",
	"Version": 3,
	"DetailWidth": 320,
	"DeviceWidth": 1024,
	"UserUnitSets": {},
	"UserUnits": [
		"squash = 1e8 N/acre",
		"lp100km = 0.01 l/km"
	],
	"CaseName": "Getting Started",
	"DefaultUnitSet": "SI",
	"SelectedObject": "Welcome",
	"ModelPath": "/.root",
	"RootModel": {
		"name": "root",
		"Notes": "",
		"DiagramX": -12321,
		"DiagramY": -12321,
		"HideInfo": "n",
		"DiagramNotes": "n",
		"Type": "Model",
		"diagramScale": 1,
		"Objects": [
			{
				"name": "Models",
				"Notes": "The icons on this diagram that are labeled 'Model\" have their own tools and diagram. Tap on the one above to open it.",
				"DiagramX": 145,
				"DiagramY": -40,
				"HideInfo": "n",
				"DiagramNotes": "y",
				"Type": "Model",
				"diagramScale": 1,
				"indexTool": "Models",
				"Objects": [
					{
						"name": "square",
						"Notes": "This expression calculates the square of the \"Length\" expression.\n\nTap on the icon to have the result calculated.  If “Expression” hasn’t already been calculated, it automatically will be.\n\nNote that a line connects this icon to the \"Expression\" icon.  Icons are automatically connected from the middle of a vertical side to a corner of the icons of any inputs they use.\n\nTap on:\n\n< root\n\nat the upper left of diagram to return to the root model.",
						"DiagramX": 200,
						"DiagramY": 5,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "length ^ 2"
						}
					},
					{
						"name": "Length",
						"Notes": "Math Minion tools, such as these expressions, are displayed on their parent model's diagram as rectangular icons.\n\nThese are automatically connected from one of their corners corners to the middle of a vertical side of every tool that uses their value.\n\nThe input for this expression is just\n\n2 m + 200 in\n\nwhich adds 200 inches to 2 metres.\n\nThe calculated result will appear at the bottom of the information view.\n\nOnce calculated a representation of the result will appear in the icon for an expression.",
						"DiagramX": 120,
						"DiagramY": 5,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "2 m + 200 in"
						}
					},
					{
						"name": "Speed",
						"Notes": "A stand alone, unconnected expression.",
						"DiagramX": 40,
						"DiagramY": 40,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "100 m / 3 s 'comment:\njust a dummy expression for note.  Everything after the ' is just a comment\n"
						},
						"displayUnit": "mph"
					},
					{
						"name": "Models",
						"Notes": "Overview",
						"DiagramX": 40,
						"DiagramY": 5,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "HTML Form",
						"Formula": {
							"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Models</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tYou are now in a model contained within the root model. It has its own diagram and tools and these tools can have the same names as other tools in other models. In this case all the tools are just expressions.\n\t\t</p>\n\t\t<p>\n\t\t\tTo return to the parent model, click on\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\t< root\n\t\t</p>\n\t\t<p>\n\t\t\tat the upper left of the diagram.\n\t\t</p>\n\t\t<p>\n\t\t\tTapping on a tool icon will result in a view containing information about the tool being presented.\n\t\t</p>\n\t\t<p>\n\t\t\tIf the window is wide enough, this will be in the panel on the right, otherwise it will replace the diagram, in which case use the <b>diagram</b> button at the lower right to return to the diagram.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
						}
					}
				]
			},
			{
				"name": "Tools",
				"DiagramX": 145,
				"DiagramY": 50,
				"HideInfo": "n",
				"DiagramNotes": "n",
				"Type": "Model",
				"diagramScale": 1,
				"indexTool": "Tools",
				"Objects": [
					{
						"name": "Graph",
						"Notes": "",
						"DiagramX": 45,
						"DiagramY": 70,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "plot2d",
								"Notes": "A 2 dimension X-Y graph.\n\nIf Z values are not added, a Graph tool will plot one or more lines of y values against a common x array.\n\nThere can be multiple x arrays, with corresponding y lines.\n\nBecause the graphs in this model are already defined, you will see the plots when you tap on their icons.\n\nTap the Edit button at the top right of the plot to see the graph definition.",
								"DiagramX": 65,
								"DiagramY": 255,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Graph",
								"X1": {
									"v": "angles",
									"vmin": "",
									"vmax": "",
									"unit": "degree",
									"Y1": {
										"v": "3 ft * {sin angles} 'sin",
										"vmin": "-1 m",
										"vmax": "1 m",
										"lineType": 0
									},
									"Y2": {
										"v": "3 ft * {cos angles} 'cos",
										"vmin": "",
										"vmax": "",
										"lineType": 0
									}
								}
							},
							{
								"name": "HalfRun",
								"Notes": "The x and y values can be extracted as the parameters x, y1, y2 etc.  The <o> button on the toolbar is useful for finding what parameters you can reference from an object.",
								"DiagramX": 60,
								"DiagramY": 390,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "plot2d.y2"
								}
							},
							{
								"name": "angles",
								"Notes": "",
								"DiagramX": 150,
								"DiagramY": 245,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "(0:72) * 10 degree"
								}
							},
							{
								"name": "graph3D",
								"Notes": "When a Z value is added to a graph, a 3 dimensional plot is produced.\n\nIf the X, Y and Z arrays all have the same number of values, as in this case, a 3D line will be plotted.\n\nOnce a Z value has been added, only the “Add X” button will be enabled and adding an X value will automatically add a Y and Z value for it.\n\nEach X value can only have one Y and Z.\n\nIf there is more than one X, you will not be able to delete a Z value, but you can still delete an entire X set.",
								"DiagramX": 150,
								"DiagramY": 290,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Graph",
								"X1": {
									"v": "{sin angles}'sin",
									"vmin": "",
									"vmax": "",
									"Y1": {
										"v": "{cos angles}'cos",
										"vmin": "",
										"vmax": "",
										"lineType": 0
									},
									"Z1": {
										"v": "0:({nrows $.x1}-1) * 1 m 'Height",
										"vmin": "0 m",
										"vmax": "100 m",
										"lineType": 0
									}
								},
								"X2": {
									"v": "$.x1'sin",
									"vmin": "",
									"vmax": "",
									"Y1": {
										"v": "$.y1'cos",
										"vmin": "",
										"vmax": "",
										"lineType": 0
									},
									"Z1": {
										"v": "$.z1 + 20 m",
										"vmin": "",
										"vmax": "",
										"lineType": 0
									}
								}
							},
							{
								"name": "table",
								"Notes": "As with 2 dimensional plots, you can extract the x, y and now z value arrays.\n\nYou can also get tables from the graph tool.  Here a table representing the second X set is displayed.\n",
								"DiagramX": 230,
								"DiagramY": 415,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "graph3d.table2"
								}
							},
							{
								"name": "xy",
								"Notes": "      Angles for Surface3D\n",
								"DiagramX": 150,
								"DiagramY": 205,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "(-18:18) * 10 degree"
								}
							},
							{
								"name": "Surface3D",
								"Notes": "When the number of elements in a Z value is equal to the number of X value elements times the number of Y value elements, a 3D mesh is plotted.\n\nIn this case Z is calculated from:\n\n{cos $.x1} * {sin {tr $.y1}} 'z\n\nwhere the “$.” refers to the graph itself.  Transposing the y value produces a row array and when the sin of that is multiplied by the column cos x array, a matrix is produced.\n\nA second x section draws a circle above the surface.",
								"DiagramX": 235,
								"DiagramY": 205,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Graph",
								"X1": {
									"v": "xy 'x",
									"vmin": "",
									"vmax": "",
									"unit": "degree",
									"Y1": {
										"v": "xy + 90 degree 'y",
										"vmin": "",
										"vmax": "",
										"unit": "degree",
										"lineType": 0
									},
									"Z1": {
										"v": "{cos $.x1} * {sin {tr $.y1}} 'z",
										"vmin": "",
										"vmax": "",
										"lineType": 0
									}
								},
								"X2": {
									"v": "{cos xy}",
									"vmin": "",
									"vmax": "",
									"Y1": {
										"v": "{sin xy}",
										"vmin": "",
										"vmax": "",
										"lineType": 0
									},
									"Z1": {
										"v": "{array {nrows xy}, 1.1} 'Const Z",
										"vmin": "",
										"vmax": "",
										"lineType": 0
									}
								}
							},
							{
								"name": "Surface3dHTML",
								"Notes": "This HTML page shows how a graph can be inserted into a it and styled using CSS.",
								"DiagramX": 230,
								"DiagramY": 365,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'<html>\n\t<head>\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tbackground-color: rgb(255, 253, 225);\n\t\t\t}\n\t\t\t#svg_surface3d {\n\t\t\t\tbackground-color: #efe;\n\t\t\t\theight: 300px;\n\t\t\t\twidth: 300px;\n\t\t\t}\n\t\t\t.svg_line_1 {\n\t\t\t\tstroke: orange;\n\t\t\t\topacity: 0.3;\n\t\t\t}\n\t\t\t.svg_gridx {\n\t\t\t\tstroke: blue;\n\t\t\t}\n\t\t\t.svg_gridy,\n\t\t\t.svg_gridy .svg_label,\n\t\t\t.svg_gridy .svg_title,\n\t\t\t.svg_gridy .svg_unit {\n\t\t\t\tstroke: red;\n\t\t\t}\n\t\t\t.svg_gridz,\n\t\t\t.svg_gridz .svg_label,\n\t\t\t.svg_gridz .svg_title,\n\t\t\t.svg_gridz .svg_unit {\n\t\t\t\tstroke: green;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<p>Below the Surface3d graph is inserted into this HTML page tool by including <b>surface3d.svg</b> in a &lt;mm&gt; tag.</p>\n\t\t<p>  Check the source formula to see how styles are used to change the grids and labels to different, albeit rather gaudy, colors.</p>\n\t\t<p>Click on the graph below to switch the actual <b>Surface3D</b> graph.\n\t\t</p>\n\t\t<a onclick=\"mmpost([], {mm_push: 'surface3d'})\">\n\t\t<mm>surface3d.svg</mm>\n\t\t</a>\n\t</body>\n</html>"
								},
								"inputs": {},
								"f0": "surface3d.svg"
							},
							{
								"name": "Note",
								"Notes": "When viewing one of the graphs, tap the Help button to get information on how to interact with it.",
								"DiagramX": 70,
								"DiagramY": 205,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "'Check the help"
								}
							}
						]
					},
					{
						"name": "Iterator",
						"Notes": "",
						"DiagramX": 120,
						"DiagramY": 90,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "overview",
						"Objects": [
							{
								"name": "Dice",
								"Notes": "A table of all possible outcomes of rolling two dice is calculated in the expression \"rolls\".\n\nThe \"sumn\" expression calculates the total number of outcomes equaling a given value.  That value is the current \"x\" value of the iterator \"counts\".\n\nThe iterator \"count\" initializes it's \"x\" parameter to 2 and loops until it is equal to 12, incrementing \"x\" on each loop.\n\nThe value of \"x\" and \"sumn\" are recorded for each loop.\n\nThe recorded number of occurrences is divided by 36 in \"Probability\" and the results presented in table form in \"nTable\".",
								"DiagramX": 205,
								"DiagramY": -50,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "rolls",
										"Notes": "A simple addition of a range  from 1 to 6 to the transpose of another range from 1 to 6 produces a matrix of all possible outcomes of rolling two dice.",
										"DiagramX": 45,
										"DiagramY": 50,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1:6+{transpose 1:6}"
										}
									},
									{
										"name": "sumn",
										"Notes": "Using the \"eq\" function to compare \"rolls\" with a scalar, in this case the iterator's loop variable, will return a matrix with a 1 in positions that match and 0 in the other positions.\n\nBy summing this matrix, we get a count of the number of matches.",
										"DiagramX": 40,
										"DiagramY": 120,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{sum {eq rolls, count.x}}"
										}
									},
									{
										"name": "count",
										"Notes": "Initializes \"x\" to 2 and then loops while it is less than or equal to 12, incrementing \"x\" on each loop.\n\nThe values for \"x\" and \"sumn\" are recorded for each loop.",
										"DiagramX": 135,
										"DiagramY": 115,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Iterator",
										"whileFormula": {
											"Formula": "{le $.x, 12}"
										},
										"initXFormula": {
											"Formula": "2"
										},
										"nextXFormula": {
											"Formula": "$.x + 1"
										},
										"recFormulas": [
											{
												"Formula": "$.x 'Roll"
											},
											{
												"Formula": "sumn"
											}
										],
										"AutoRun": "y"
									},
									{
										"name": "Probability",
										"Notes": "The probability of any outcome is the number of ways that outcome can be achieved, divided by all the possible roll combinations.",
										"DiagramX": 135,
										"DiagramY": 50,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "count.r2 / (6*6)"
										}
									},
									{
										"name": "plot",
										"Notes": "The results are displayed in this rather dull graph.",
										"DiagramX": 225,
										"DiagramY": 75,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Graph",
										"X1": {
											"v": "count.roll'Roll",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "count.sumn'Count",
												"vmin": "",
												"vmax": "",
												"lineType": 1
											},
											"Y2": {
												"v": "Probability",
												"vmin": "0",
												"vmax": "0.2",
												"lineType": 0
											}
										}
									},
									{
										"name": "table",
										"Notes": "and also displayed in this table.",
										"DiagramX": 225,
										"DiagramY": 115,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "plot.table\n"
										}
									}
								]
							},
							{
								"name": "XArray",
								"Notes": "An iterator is used to create a matrix of lengths and a matrix of its values squared.  This can be easily accomplished in a single expression, without an iterator, as shown in \"No_Loop\". However the iterator illustrates the use of a non-scalar loop variable.",
								"DiagramX": 290,
								"DiagramY": -50,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "n",
										"Notes": "Number of values.",
										"DiagramX": 135,
										"DiagramY": 15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "6"
										}
									},
									{
										"name": "iter",
										"Notes": "The iterator initializes its \"x\" variable to an array ranging from 1 m to 6 m.\n\nOn each loop, this array is incremented by 1 m and the result is recorded, along with the \"i\" variable and the square of the \"x\" variable.  In this case it would be more sensible to just square the recorded value array outside of the iterator, but this is just for illustration.\n\nThe \"while\" expression just uses the count variable \"i\", to loop over the first \"n\" values.",
										"DiagramX": 135,
										"DiagramY": 55,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Iterator",
										"whileFormula": {
											"Formula": "{le $.i, n}"
										},
										"initXFormula": {
											"Formula": "1:n*1\"m\""
										},
										"nextXFormula": {
											"Formula": "$.x + 1\"m\""
										},
										"recFormulas": [
											{
												"Formula": "$.i"
											},
											{
												"Formula": "$.x"
											},
											{
												"Formula": "$.x^2"
											}
										],
										"AutoRun": "y"
									},
									{
										"name": "r1",
										"Notes": "The recorded \"i\" values",
										"DiagramX": 220,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "iter.r1"
										}
									},
									{
										"name": "r2",
										"Notes": "The recorded x values.  Each value is an array, so the result is a matrix.",
										"DiagramX": 220,
										"DiagramY": 55,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "iter.r2"
										}
									},
									{
										"name": "r3",
										"Notes": "The recorded x squared values.",
										"DiagramX": 220,
										"DiagramY": 95,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "iter.r3"
										}
									},
									{
										"name": "No_Loop",
										"Notes": "This calculates the equivalent of the \"x\" squared matrix, as represented by \"r3\", but does it much more efficiently and simply in a single expression.\n\nMost problems that would require a loop in a programming language, can be solved with simple expressions in Math Minion.",
										"DiagramX": 220,
										"DiagramY": 130,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(\n\t1:6 * 1\"m\" +\n\t{transpose 0:5*1\"m\"}\n)^2"
										}
									}
								]
							},
							{
								"name": "Overview",
								"Notes": "",
								"DiagramX": 245,
								"DiagramY": -80,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tMath Minion's array and matrix tools, including the range operator and it's solvers, make conventional loops largely unnecessary.  However they can still be occasionally useful, particularly for case study type problems.\n\t\t</p>\n\t\t<p>\n\t\t\tThe iterator tool provides this capability.  It has a loop variable (parameter X) and a loop counter (parameter i) and also allows values to be recorded for each iteration.\n\t\t</p>\n\t\t<p>\t\t\t\n\t\t\tThere are two simple examples presented here.  The Dice model calculates the likelihood of a given outcome of rolling two dice.  This is done in a brute force manner to illustrate iterator use.\n\t\t</p>\n\t\t<p>\t\t\t\n\t\t\tThe XArray model doesn't really do anything, other than illustrate that the loop variable does not have to be a scalar.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
								}
							}
						]
					},
					{
						"name": "Expressions",
						"Notes": "",
						"DiagramX": 45,
						"DiagramY": -10,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "introduction",
						"Objects": [
							{
								"name": "ScalarNumber",
								"Notes": "Expressions are often used to represent scalar values or constants, such as the density in this expression.",
								"DiagramX": 20,
								"DiagramY": 40,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "1 g/cm^3"
								}
							},
							{
								"name": "ColumnArray",
								"Notes": "Here the range operator is used to create an array of numbers between 1 and 50, which is then multiplied by 1\"m\" to convert the values into lengths.\n\nYou can drag the results table up or down to see more. Dragging on the row and column headers will scroll quickly.",
								"DiagramX": 95,
								"DiagramY": 10,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "1:50 * 1\"m\""
								}
							},
							{
								"name": "RowArray",
								"Notes": "Here the transpose function (which can be abbreviated as just tr) is used to create a row array.\n\nIn this case the display unit has been changed to \"cm\".  You can tap on the unit name to select a different unit from the unit browser.",
								"DiagramX": 100,
								"DiagramY": 105,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{transpose 1:10 * 1\"m\"}"
								},
								"displayUnit": "cm"
							},
							{
								"name": "matrix",
								"Notes": "Multiplying the ColumnArray by the RowArray creates a matrix.\n\nTapping on the info button beside the unit name will bring up a unit browser where you can choose a display unit.  \n\nIf a specific display unit is used, rather than the default, the unit type and name are displayed in blue.\n\nSee the dot function for matrix multiplication (inner product).",
								"DiagramX": 185,
								"DiagramY": 10,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "ColumnArray * RowArray"
								},
								"displayUnit": "ft^2"
							},
							{
								"name": "StringArray",
								"Notes": "Arrays can have string values as well",
								"DiagramX": 95,
								"DiagramY": 190,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "\"Row \" + {fmt \"%3.0f\", 1:50}"
								}
							},
							{
								"name": "TableValue",
								"Notes": "Expressions can also display table values.  These often result from operations on a DataTable tool, but can also be created with functions as in this example.\n\nIf you tap on the column header titled \"Value\", the unit browser will be displayed and you can select another\ndisplay unit for the column.\n\nChanging the display unit never effects the actual calculations, only how the results are displayed.",
								"DiagramX": 185,
								"DiagramY": 140,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{table {cc \"Name\", \"Value\"}\n\tStringArray, ColumnArray\n}"
								}
							},
							{
								"name": "Complex",
								"Notes": "Any two column array can be used as a complex number, with the first column representing the real component and the second the imaginary one.\n\nAll the complex value functions use table values to represent their results, with column 1 being labeled \"r\" and column 2 \"i\".",
								"DiagramX": 20,
								"DiagramY": 95,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{complex 1, 2}"
								}
							},
							{
								"name": "Strings",
								"Notes": "Expressions can also contain strings",
								"DiagramX": 15,
								"DiagramY": 190,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "LongerString2",
										"Notes": "Normally a single quote is used to add a comment to the end of a formula, but if the entire formula consists of a comment, it is interpreted as a string value.\n\nThis is handy for long strings as you just need to start them with a single quote.",
										"DiagramX": 125,
										"DiagramY": -70,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "'This string has several lines,\nsuch as this one,\nand this one\nand yet another one."
										}
									},
									{
										"name": "ScalarString",
										"Notes": "A string constant can be defined by including the desired text in double quotes.",
										"DiagramX": 45,
										"DiagramY": -115,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "\"Hello World\""
										}
									},
									{
										"name": "LongerString",
										"Notes": "By using the expanded formula editor, you can create strings with more than one line, by enclosing the whole thing in double quotes.\n\nYou will notice that the string no longer fits completely in the display cell at the bottom, but if you click on that cell, a view will open that displays the entire string.\n\nHowever you can only change the value of the expression by editing the formula, not the displayed string.",
										"DiagramX": 45,
										"DiagramY": -70,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "\"This string has two\nlines.\""
										}
									}
								]
							},
							{
								"name": "Introduction",
								"Notes": "",
								"DiagramX": 20,
								"DiagramY": 10,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Introduction</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tAn expression is the simplest Math Minion object - just a formula and the display of a result.  But like equations in a math problem, they are the work horse of any problem.\n\t\t</p>\n\t\t<p>\n\t\t\tYou will probably use expressions more than any other Math Minion tool.  This model has more examples and information about using them.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
								}
							}
						]
					},
					{
						"name": "DataTable",
						"Notes": "",
						"DiagramX": 45,
						"DiagramY": 20,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "DataTables",
						"Objects": [
							{
								"name": "Records",
								"Notes": "This is a data table with columns recording the minimum and maximum temperature and rainfall amounts from my deck weather station over a few years, back when we lived in Fernie BC.\n\nAs values might not have been available for some rows, I have arbitrarily assigned the value -12321 to mean not available and this is used in  the default value formulas for the temperature columns, as well as a number of the expressions that manipulate this data.\n\nThe default value for the date is the current date, while the default value for the rainfall column simply replicates the value of the previous last row, as this often does not change.\n\nNote that even though the default value formulas reference the EmptyT expression, there is no line drawn on the model diagram from that expression to this data table.  That is because the connection is not dynamic.\n\nThe formula is only evaluated when a new row is added and changing the value of EmptyT afterwards would not change any of the current table values.",
								"DiagramX": 45,
								"DiagramY": 5,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Data Table",
								"Columns": [
									{
										"name": "Date",
										"displayUnit": "date",
										"format": "%.0f",
										"nValues": [
											1179964800,
											1180051200,
											1180137600,
											1180224000,
											1180310400,
											1180396800,
											1180483200,
											1180569600,
											1180656000,
											1180742400,
											1180828800,
											1180915200,
											1181001600,
											1181088000,
											1181174400,
											1181260800,
											1181347200,
											1181433600,
											1181520000,
											1181606400,
											1181692800,
											1181779200,
											1181865600,
											1181952000,
											1182038400,
											1182124800,
											1182211200,
											1182297600,
											1182384000,
											1182470400,
											1182556800,
											1182643200,
											1182729600,
											1182816000,
											1182902400,
											1182988800,
											1183075200,
											1183161600,
											1183248000,
											1183334400,
											1183420800,
											1183507200,
											1183593600,
											1183680000,
											1183766400,
											1183852800,
											1183939200,
											1184025600,
											1184112000,
											1184198400,
											1184284800,
											1184371200,
											1184457600,
											1184544000,
											1184630400,
											1184716800,
											1184803200,
											1184889600,
											1184976000,
											1185062400,
											1185148800,
											1185235200,
											1185321600,
											1185408000,
											1185494400,
											1185580800,
											1185667200,
											1185753600,
											1185840000,
											1185926400,
											1186012800,
											1186099200,
											1186185600,
											1186272000,
											1186358400,
											1186444800,
											1186531200,
											1186617600,
											1186704000,
											1186790400,
											1186876800,
											1186963200,
											1187049600,
											1187136000,
											1187222400,
											1187308800,
											1187395200,
											1187481600,
											1187568000,
											1187654400,
											1187740800,
											1187827200,
											1187913600,
											1188000000,
											1188086400,
											1188172800,
											1188259200,
											1188345600,
											1188432000,
											1188518400,
											1188604800,
											1188691200,
											1188777600,
											1188864000,
											1188950400,
											1189036800,
											1189123200,
											1189209600,
											1189296000,
											1189382400,
											1189468800,
											1189555200,
											1189641600,
											1189728000,
											1189814400,
											1189900800,
											1189987200,
											1190073600,
											1190160000,
											1190246400,
											1190332800,
											1190419200,
											1190505600,
											1190592000,
											1190678400,
											1190764800,
											1190851200,
											1190937600,
											1191024000,
											1191110400,
											1191196800,
											1191283200,
											1191369600,
											1191456000,
											1191542400,
											1191628800,
											1191715200,
											1191801600,
											1191888000,
											1191974400,
											1192060800,
											1192147200,
											1192233600,
											1192320000,
											1192406400,
											1192492800,
											1192579200,
											1192665600,
											1192752000,
											1192838400,
											1192924800,
											1193011200,
											1193097600,
											1193184000,
											1193270400,
											1193356800,
											1193443200,
											1193529600,
											1193616000,
											1193702400,
											1193788800,
											1193875200,
											1193961600,
											1194048000,
											1194134400,
											1194220800,
											1194307200,
											1194393600,
											1194480000,
											1194566400,
											1194652800,
											1194739200,
											1194825600,
											1194912000,
											1194998400,
											1195084800,
											1195171200,
											1195257600,
											1195344000,
											1195430400,
											1195516800,
											1195603200,
											1195689600,
											1195776000,
											1195862400,
											1195948800,
											1196035200,
											1196121600,
											1196208000,
											1196294400,
											1196380800,
											1196467200,
											1196553600,
											1196640000,
											1196726400,
											1196812800,
											1196899200,
											1196985600,
											1197072000,
											1197158400,
											1197244800,
											1197331200,
											1197417600,
											1197504000,
											1197590400,
											1197676800,
											1197763200,
											1197849600,
											1197936000,
											1198022400,
											1198108800,
											1198195200,
											1198281600,
											1198368000,
											1198454400,
											1198540800,
											1198627200,
											1198713600,
											1198800000,
											1198886400,
											1198972800,
											1199059200,
											1199145600,
											1199232000,
											1199318400,
											1199404800,
											1199491200,
											1199577600,
											1199664000,
											1199750400,
											1199836800,
											1199923200,
											1200009600,
											1200096000,
											1200182400,
											1200268800,
											1200355200,
											1200441600,
											1200528000,
											1200614400,
											1200700800,
											1200787200,
											1200873600,
											1200960000,
											1201046400,
											1201132800,
											1201219200,
											1201305600,
											1201392000,
											1201478400,
											1201564800,
											1201651200,
											1201737600,
											1201824000,
											1201910400,
											1201996800,
											1202083200,
											1202169600,
											1202256000,
											1202342400,
											1202428800,
											1202515200,
											1202601600,
											1202688000,
											1202774400,
											1202860800,
											1202947200,
											1203033600,
											1203120000,
											1203206400,
											1203292800,
											1203379200,
											1203465600,
											1203552000,
											1203638400,
											1203724800,
											1203811200,
											1203897600,
											1203984000,
											1204070400,
											1204156800,
											1204243200,
											1204329600,
											1204416000,
											1204502400,
											1204588800,
											1204675200,
											1204761600,
											1204848000,
											1204934400,
											1205020800,
											1205107200,
											1205193600,
											1205280000,
											1205366400,
											1205452800,
											1205539200,
											1205625600,
											1205712000,
											1205798400,
											1205884800,
											1205971200,
											1206057600,
											1206144000,
											1206230400,
											1206316800,
											1206403200,
											1206489600,
											1206576000,
											1206662400,
											1206748800,
											1206835200,
											1206921600,
											1207008000,
											1207094400,
											1207180800,
											1207267200,
											1207353600,
											1207440000,
											1207526400,
											1207612800,
											1207699200,
											1207785600,
											1207872000,
											1207958400,
											1208044800,
											1208131200,
											1208217600,
											1208304000,
											1208390400,
											1208476800,
											1208563200,
											1208649600,
											1208736000,
											1208822400,
											1208908800,
											1208995200,
											1209081600,
											1209168000,
											1209254400,
											1209340800,
											1209427200,
											1209513600,
											1209600000,
											1209686400,
											1209772800,
											1209859200,
											1209945600,
											1210032000,
											1210118400,
											1210204800,
											1210291200,
											1210377600,
											1210464000,
											1210550400,
											1210636800,
											1210723200,
											1210809600,
											1210896000,
											1210982400,
											1211068800,
											1211155200,
											1211241600,
											1211328000,
											1211414400,
											1211500800,
											1211587200,
											1211673600,
											1211760000,
											1211846400,
											1211932800,
											1212019200,
											1212105600,
											1212192000,
											1212278400,
											1212364800,
											1212451200,
											1212537600,
											1212624000,
											1212710400,
											1212796800,
											1212883200,
											1212969600,
											1213056000,
											1213142400,
											1213228800,
											1213315200,
											1213401600,
											1213488000,
											1213574400,
											1213660800,
											1213747200,
											1213833600,
											1213920000,
											1214006400,
											1214092800,
											1214179200,
											1214265600,
											1214352000,
											1214438400,
											1214524800,
											1214611200,
											1214697600,
											1214784000,
											1214870400,
											1214956800,
											1215043200,
											1215129600,
											1215216000,
											1215302400,
											1215388800,
											1215475200,
											1215561600,
											1215648000,
											1215734400,
											1215820800,
											1215907200,
											1215993600,
											1216080000,
											1216166400,
											1216252800,
											1216339200,
											1216425600,
											1216512000,
											1216598400,
											1216684800,
											1216771200,
											1216857600,
											1216944000,
											1217030400,
											1217116800,
											1217203200,
											1217289600,
											1217376000,
											1217462400,
											1217548800,
											1217635200,
											1217721600,
											1217808000,
											1217894400,
											1217980800,
											1218067200,
											1218153600,
											1218240000,
											1218326400,
											1218412800,
											1218499200,
											1218585600,
											1218672000,
											1218758400,
											1218844800,
											1218931200,
											1219017600,
											1219104000,
											1219190400,
											1219276800,
											1219363200,
											1219449600,
											1219536000,
											1219622400,
											1219708800,
											1219795200,
											1219881600,
											1219968000,
											1220054400,
											1220140800,
											1220227200,
											1220313600,
											1220400000,
											1220486400,
											1220572800,
											1220659200,
											1220745600,
											1220832000,
											1220918400,
											1221004800,
											1221091200,
											1221177600,
											1221264000,
											1221350400,
											1221436800,
											1221523200,
											1221609600,
											1221696000,
											1221782400,
											1221868800,
											1221955200,
											1222041600,
											1222128000,
											1222214400,
											1222300800,
											1222387200,
											1222473600,
											1222560000,
											1222646400,
											1222732800,
											1222819200,
											1222905600,
											1222992000,
											1223078400,
											1223164800,
											1223251200,
											1223337600,
											1223424000,
											1223510400,
											1223596800,
											1223683200,
											1223769600,
											1223856000,
											1223942400,
											1224028800,
											1224115200,
											1224201600,
											1224288000,
											1224374400,
											1224460800,
											1224547200,
											1224633600,
											1224720000,
											1224806400,
											1224892800,
											1224979200,
											1225065600,
											1225152000,
											1225238400,
											1225324800,
											1225411200,
											1225497600,
											1225584000,
											1225670400,
											1225756800,
											1225843200,
											1225929600,
											1226016000,
											1226102400,
											1226188800,
											1226275200,
											1226361600,
											1226448000,
											1226534400,
											1226620800,
											1226707200,
											1226793600,
											1226880000,
											1226966400,
											1227052800,
											1227139200,
											1227225600,
											1227312000,
											1227398400,
											1227484800,
											1227571200,
											1227657600,
											1227744000,
											1227830400,
											1227916800,
											1228003200,
											1228089600,
											1228176000,
											1228262400,
											1228348800,
											1228435200,
											1228521600,
											1228608000,
											1228694400,
											1228780800,
											1228867200,
											1228953600,
											1229040000,
											1229126400,
											1229212800,
											1229299200,
											1229385600,
											1229472000,
											1229558400,
											1229644800,
											1229731200,
											1229817600,
											1229904000,
											1229990400,
											1230076800,
											1230163200,
											1230249600,
											1230336000,
											1230422400,
											1230508800,
											1230595200,
											1230681600,
											1230768000,
											1230854400,
											1230940800,
											1231027200,
											1231113600,
											1231200000,
											1231286400,
											1231372800,
											1231459200,
											1231545600,
											1231632000,
											1231718400,
											1231804800,
											1231891200,
											1231977600,
											1232064000,
											1232150400,
											1232236800,
											1232323200,
											1232409600,
											1232496000,
											1232582400,
											1232668800,
											1232755200,
											1232841600,
											1232928000,
											1233014400,
											1233100800,
											1233187200,
											1233273600,
											1233360000,
											1233446400,
											1233532800,
											1233619200,
											1233705600,
											1233792000,
											1233878400,
											1233964800,
											1234051200,
											1234137600,
											1234224000,
											1234310400,
											1234396800,
											1234483200,
											1234569600,
											1234656000,
											1234742400,
											1234828800,
											1234915200,
											1235001600,
											1235088000,
											1235174400,
											1235260800,
											1235347200,
											1235433600,
											1235520000,
											1235606400,
											1235692800,
											1235779200,
											1235865600,
											1235952000,
											1236038400,
											1236124800,
											1236211200,
											1236297600,
											1236384000,
											1236470400,
											1236556800,
											1236643200,
											1236729600,
											1236816000,
											1236902400,
											1236988800,
											1237075200,
											1237161600,
											1237248000,
											1237334400,
											1237420800,
											1237507200,
											1237593600,
											1237680000,
											1237766400,
											1237852800,
											1237939200,
											1238025600,
											1238112000,
											1238198400,
											1238284800,
											1238371200,
											1238457600,
											1238544000,
											1238630400,
											1238716800,
											1238803200,
											1238889600,
											1238976000,
											1239062400,
											1239148800,
											1239235200,
											1239321600,
											1239408000,
											1239494400,
											1239580800,
											1239667200,
											1239753600,
											1239840000,
											1239926400,
											1240012800,
											1240099200,
											1240185600,
											1240272000,
											1240358400,
											1240444800,
											1240531200,
											1240617600,
											1240704000,
											1240790400,
											1240876800,
											1240963200,
											1241049600,
											1241136000,
											1241222400,
											1241308800,
											1241395200,
											1241481600,
											1241568000,
											1241654400,
											1241740800,
											1241827200,
											1241913600,
											1242000000,
											1242086400,
											1242172800,
											1242259200,
											1242345600,
											1242432000,
											1242518400,
											1242604800,
											1242691200,
											1242777600,
											1242864000,
											1242950400,
											1243036800,
											1243123200,
											1243209600,
											1243296000,
											1243382400,
											1243468800,
											1243555200,
											1243641600,
											1243728000,
											1243814400,
											1243900800,
											1243987200,
											1244073600,
											1244160000,
											1244246400,
											1244332800,
											1244419200,
											1244505600,
											1244592000,
											1244678400,
											1244764800,
											1244851200,
											1244937600,
											1245024000,
											1245110400,
											1245196800,
											1245283200,
											1245369600,
											1245456000,
											1245542400,
											1245628800,
											1245715200,
											1245801600,
											1245888000,
											1245974400,
											1246060800,
											1246147200,
											1246233600,
											1246320000,
											1246406400,
											1246492800,
											1246579200,
											1246665600,
											1246752000,
											1246838400,
											1246924800,
											1247011200,
											1247097600,
											1247184000,
											1247270400,
											1247356800,
											1247443200,
											1247529600,
											1247616000,
											1247702400,
											1247788800,
											1247875200,
											1247961600,
											1248048000,
											1248134400,
											1248220800,
											1248307200,
											1248393600,
											1248480000,
											1248566400,
											1248652800,
											1248739200,
											1248825600,
											1248912000,
											1248998400,
											1249084800,
											1249171200,
											1249257600,
											1249344000,
											1249430400,
											1249516800,
											1249603200,
											1249689600,
											1249776000,
											1249862400,
											1249948800,
											1250035200,
											1250121600,
											1250208000,
											1250294400,
											1250380800,
											1250467200,
											1250553600,
											1250640000,
											1250726400,
											1250812800,
											1250899200,
											1250985600,
											1251072000,
											1251158400,
											1251244800,
											1251331200,
											1251417600,
											1251504000,
											1251590400,
											1251676800,
											1251763200,
											1251849600,
											1251936000,
											1252022400,
											1252108800,
											1252195200,
											1252281600,
											1252368000,
											1252454400,
											1252540800,
											1252627200,
											1252713600,
											1252800000,
											1252886400,
											1252972800,
											1253059200,
											1253145600,
											1253232000,
											1253318400,
											1253404800,
											1253491200,
											1253577600,
											1253664000,
											1253750400,
											1253836800,
											1253923200,
											1254009600,
											1254096000,
											1254182400,
											1254268800,
											1254355200,
											1254441600,
											1254528000,
											1254614400,
											1254700800,
											1254787200,
											1254873600,
											1254960000,
											1255046400,
											1255132800,
											1255219200,
											1255305600,
											1255392000,
											1255478400,
											1255564800,
											1255651200,
											1255737600,
											1255824000,
											1255910400,
											1255996800,
											1256083200,
											1256169600,
											1256256000,
											1256342400,
											1256428800,
											1256515200,
											1256601600,
											1256688000,
											1256774400,
											1256860800,
											1256947200,
											1257033600,
											1257120000,
											1257206400,
											1257292800,
											1257379200,
											1257465600,
											1257552000,
											1257638400,
											1257724800,
											1257811200,
											1257897600,
											1257984000,
											1258070400,
											1258156800,
											1258243200,
											1258329600,
											1258416000,
											1258502400,
											1258588800,
											1258675200,
											1258761600,
											1258848000,
											1258934400,
											1259020800,
											1259107200,
											1259193600,
											1259280000,
											1259366400,
											1259452800,
											1259539200,
											1259625600,
											1259712000,
											1259798400,
											1259884800,
											1259971200,
											1260057600,
											1260144000,
											1260230400,
											1260316800,
											1260403200,
											1260489600,
											1260576000,
											1260662400,
											1260748800,
											1260835200,
											1260921600,
											1261008000,
											1261094400,
											1261180800,
											1261267200,
											1261353600,
											1261440000,
											1261526400,
											1261612800,
											1261699200,
											1261785600,
											1261872000,
											1261958400,
											1262044800,
											1262131200,
											1262217600,
											1262304000,
											1262390400,
											1262476800,
											1262563200,
											1262649600,
											1262736000,
											1262822400,
											1262908800,
											1262995200,
											1263081600,
											1263168000,
											1263254400,
											1263340800,
											1263427200,
											1263513600,
											1263600000,
											1263686400,
											1263772800,
											1263859200,
											1263945600,
											1264032000,
											1264118400,
											1264204800,
											1264291200,
											1264377600,
											1264464000,
											1264550400,
											1264636800,
											1264723200,
											1264809600,
											1264896000,
											1264982400,
											1265068800,
											1265155200,
											1265241600,
											1265328000,
											1265414400,
											1265500800,
											1265587200,
											1265673600,
											1265760000,
											1265846400,
											1265932800,
											1266019200,
											1266105600,
											1266192000,
											1266278400,
											1266364800,
											1266451200,
											1266537600,
											1266624000,
											1266710400,
											1266796800,
											1266883200,
											1266969600,
											1267056000,
											1267142400,
											1267228800,
											1267315200,
											1267401600,
											1267488000,
											1267574400,
											1267660800,
											1267747200,
											1267833600,
											1267920000,
											1268006400,
											1268092800,
											1268179200,
											1268265600,
											1268352000,
											1268438400,
											1268524800,
											1268611200,
											1268697600,
											1268784000,
											1268870400,
											1268956800,
											1269043200,
											1269129600,
											1269216000,
											1269302400,
											1269388800,
											1269475200,
											1269561600,
											1269648000,
											1269734400,
											1269820800,
											1269907200,
											1269993600,
											1270080000,
											1270166400,
											1270252800,
											1270339200,
											1270425600,
											1270512000,
											1270598400,
											1270684800,
											1270771200,
											1270857600,
											1270944000,
											1271030400,
											1271116800,
											1271203200,
											1271289600,
											1271376000,
											1271462400,
											1271548800,
											1271635200,
											1271721600,
											1271808000,
											1271894400,
											1271980800,
											1272067200,
											1272153600,
											1272240000,
											1272326400,
											1272412800,
											1272499200,
											1272585600,
											1272672000,
											1272758400,
											1272844800,
											1272931200,
											1273017600,
											1273104000,
											1273190400,
											1273276800,
											1273363200,
											1273449600,
											1273536000,
											1273622400,
											1273708800,
											1273795200,
											1273881600,
											1273968000,
											1274054400,
											1274140800,
											1274227200,
											1274313600,
											1274400000,
											1274486400,
											1274572800,
											1274659200,
											1274745600,
											1274832000,
											1274918400,
											1275004800,
											1275091200,
											1275177600,
											1275264000,
											1275350400,
											1275436800,
											1275523200,
											1275609600,
											1275696000,
											1275782400,
											1275868800,
											1275955200,
											1276041600,
											1276128000,
											1276214400,
											1276300800,
											1276387200,
											1276473600,
											1276560000,
											1276646400,
											1276732800,
											1276819200,
											1276905600,
											1276992000,
											1277078400,
											1277164800,
											1277251200,
											1277337600,
											1277424000,
											1277510400,
											1277596800,
											1277683200,
											1277769600,
											1277856000,
											1277942400,
											1278028800,
											1278115200,
											1278201600,
											1278288000,
											1278374400,
											1278460800,
											1278547200,
											1278633600,
											1278720000,
											1278806400,
											1278892800,
											1278979200,
											1279065600,
											1279152000,
											1279238400,
											1279324800,
											1279411200,
											1279497600,
											1279584000,
											1279670400,
											1279756800,
											1279843200,
											1279929600,
											1280016000,
											1280102400,
											1280188800,
											1280275200,
											1280361600,
											1280448000,
											1280534400,
											1280620800,
											1280707200,
											1280793600,
											1280880000,
											1280966400,
											1281052800,
											1281139200,
											1281225600,
											1281312000,
											1281398400,
											1281484800,
											1281571200,
											1281657600,
											1281744000,
											1281830400,
											1281916800,
											1282003200,
											1282089600,
											1282176000,
											1282262400,
											1282348800,
											1282435200,
											1282521600,
											1282608000,
											1282694400,
											1282780800,
											1282867200,
											1282953600,
											1283040000,
											1283126400,
											1283212800,
											1283299200,
											1283385600,
											1283472000,
											1283558400,
											1283644800,
											1283731200,
											1283817600,
											1283904000,
											1283990400,
											1284076800,
											1284163200,
											1284249600,
											1284336000,
											1284422400,
											1284508800,
											1284595200,
											1284681600,
											1284768000,
											1284854400,
											1284940800,
											1285027200,
											1285113600,
											1285200000,
											1285286400,
											1285372800,
											1285459200,
											1285545600,
											1285632000,
											1285718400,
											1285804800,
											1285891200,
											1285977600,
											1286064000,
											1286150400,
											1286236800,
											1286323200,
											1286409600,
											1286496000,
											1286582400,
											1286668800,
											1286755200,
											1286841600,
											1286928000,
											1287014400,
											1287100800,
											1287187200,
											1287273600,
											1287360000,
											1287446400,
											1287532800,
											1287619200,
											1287705600,
											1287792000,
											1287878400,
											1287964800,
											1288051200,
											1288137600,
											1288224000,
											1288310400,
											1288396800,
											1288483200,
											1288569600,
											1288656000,
											1288742400,
											1288828800,
											1288915200,
											1289001600,
											1289088000,
											1289174400,
											1289260800,
											1289347200,
											1289433600,
											1289520000,
											1289606400,
											1289692800,
											1289779200,
											1289865600,
											1289952000,
											1290038400,
											1290124800,
											1290211200,
											1290297600,
											1290384000,
											1290470400,
											1290556800,
											1290643200,
											1290729600,
											1290816000,
											1290902400,
											1290988800,
											1291075200,
											1291161600,
											1291248000,
											1291334400,
											1291420800,
											1291507200,
											1291593600,
											1291680000,
											1291766400,
											1291852800,
											1291939200,
											1292025600,
											1292112000,
											1292198400,
											1292284800,
											1292371200,
											1292457600,
											1292544000,
											1292630400,
											1292716800,
											1292803200,
											1292889600,
											1292976000,
											1293062400,
											1293148800,
											1293235200,
											1293321600,
											1293408000,
											1293494400,
											1293580800,
											1293667200,
											1293753600,
											1293840000,
											1293926400,
											1294012800,
											1294099200,
											1294185600,
											1294272000,
											1294358400,
											1294444800,
											1294531200,
											1294617600,
											1294704000,
											1294790400,
											1294876800,
											1294963200,
											1295049600,
											1295136000,
											1295222400,
											1295308800,
											1295395200,
											1295481600,
											1295568000,
											1295654400,
											1295740800,
											1295827200,
											1295913600,
											1296000000,
											1296086400,
											1296172800,
											1296259200,
											1296345600,
											1296432000,
											1296518400,
											1296604800,
											1296691200,
											1296777600,
											1296864000,
											1296950400,
											1297036800,
											1297123200,
											1297209600,
											1297296000,
											1297382400,
											1297468800,
											1297555200,
											1297641600,
											1297728000,
											1297814400,
											1297900800,
											1297987200,
											1298073600,
											1298160000,
											1298246400,
											1298332800,
											1298419200,
											1298505600,
											1298592000,
											1298678400,
											1298764800,
											1298851200,
											1298937600,
											1299024000,
											1299110400,
											1299196800,
											1299283200,
											1299369600,
											1299456000,
											1299542400,
											1299628800,
											1299715200,
											1299801600,
											1299888000,
											1299974400,
											1300060800,
											1300147200,
											1300233600,
											1300320000,
											1300406400,
											1300492800,
											1300579200,
											1300665600,
											1300752000,
											1300838400,
											1300924800,
											1301011200,
											1301097600,
											1301184000,
											1301270400,
											1301356800,
											1301443200,
											1301529600,
											1301616000,
											1301702400,
											1301788800,
											1301875200,
											1301961600,
											1302048000,
											1302134400,
											1302220800,
											1302307200,
											1302393600,
											1302480000,
											1302566400,
											1302652800,
											1302739200,
											1302825600,
											1302912000,
											1302998400,
											1303084800,
											1303171200,
											1303257600,
											1303344000,
											1303430400,
											1303516800,
											1303603200,
											1303689600,
											1303776000,
											1303862400,
											1303948800,
											1304035200,
											1304121600,
											1304208000,
											1304294400,
											1304380800,
											1304467200,
											1304553600,
											1304640000,
											1304726400,
											1304812800,
											1304899200,
											1304985600,
											1305072000,
											1305158400,
											1305244800,
											1305331200,
											1305417600,
											1305504000,
											1305590400,
											1305676800,
											1305763200,
											1305849600,
											1305936000,
											1306022400,
											1306108800,
											1306195200,
											1306281600,
											1306368000,
											1306454400,
											1306540800,
											1306627200,
											1306713600,
											1306800000,
											1306886400,
											1306972800,
											1307059200,
											1307145600,
											1307232000,
											1307318400,
											1307404800,
											1307491200,
											1307577600,
											1307664000,
											1307750400,
											1307836800,
											1307923200,
											1308009600,
											1308096000,
											1308182400,
											1308268800,
											1308355200,
											1308441600,
											1308528000,
											1308614400,
											1308700800,
											1308787200,
											1308873600,
											1308960000,
											1309046400,
											1309132800,
											1309219200,
											1309305600,
											1309392000,
											1309478400,
											1309564800,
											1309651200,
											1309737600,
											1309824000,
											1309910400,
											1309996800,
											1310083200,
											1310169600,
											1310256000,
											1310342400,
											1310428800,
											1310515200,
											1310601600,
											1310688000,
											1310774400,
											1310860800,
											1310947200,
											1311033600,
											1311120000,
											1311206400,
											1311292800,
											1311379200,
											1311465600,
											1311552000,
											1311638400,
											1311724800,
											1311811200,
											1311897600,
											1311984000,
											1312070400,
											1312156800,
											1312243200,
											1312329600,
											1312416000,
											1312502400,
											1312588800,
											1312675200,
											1312761600,
											1312848000,
											1312934400,
											1313020800,
											1313107200,
											1313193600,
											1313280000,
											1313366400,
											1313452800,
											1313539200,
											1313625600,
											1313712000,
											1313798400,
											1313884800,
											1313971200,
											1314057600,
											1314144000,
											1314230400,
											1314316800,
											1314403200,
											1314489600,
											1314576000,
											1314662400,
											1314748800,
											1314835200,
											1314921600,
											1315008000,
											1315094400,
											1315180800,
											1315267200,
											1315353600,
											1315440000,
											1315526400,
											1315612800,
											1315699200,
											1315785600,
											1315872000,
											1315958400,
											1316044800,
											1316131200,
											1316217600,
											1316304000,
											1316390400,
											1316476800,
											1316563200,
											1316649600,
											1316736000,
											1316822400,
											1316908800,
											1316995200,
											1317081600,
											1317168000,
											1317254400,
											1317340800,
											1317427200,
											1317513600,
											1317600000,
											1317686400,
											1317772800,
											1317859200,
											1317945600,
											1318032000,
											1318118400,
											1318204800,
											1318291200,
											1318377600,
											1318464000,
											1318550400,
											1318636800,
											1318723200,
											1318809600,
											1318896000,
											1318982400,
											1319068800,
											1319155200,
											1319241600,
											1319328000,
											1319414400,
											1319500800,
											1319587200,
											1319673600,
											1319760000,
											1319846400,
											1319932800,
											1320019200,
											1320105600,
											1320192000,
											1320278400,
											1320364800,
											1320451200,
											1320537600,
											1320624000,
											1320710400,
											1320796800,
											1320883200,
											1320969600,
											1321056000,
											1321142400,
											1321228800,
											1321315200,
											1321401600,
											1321488000,
											1321574400,
											1321660800,
											1321747200,
											1321833600,
											1321920000,
											1322006400,
											1322092800,
											1322179200,
											1322265600,
											1322352000,
											1322438400,
											1322524800,
											1322611200,
											1322697600,
											1322784000,
											1322870400,
											1322956800,
											1323043200,
											1323129600,
											1323216000,
											1323302400,
											1323388800,
											1323475200,
											1323561600,
											1323648000,
											1323734400,
											1323820800,
											1323907200,
											1323993600,
											1324080000,
											1324166400,
											1324252800,
											1324339200,
											1324425600,
											1324512000,
											1324598400,
											1324684800,
											1324771200,
											1324857600,
											1324944000,
											1325030400,
											1325116800,
											1325203200,
											1325289600,
											1325376000,
											1325462400,
											1325548800,
											1325635200,
											1325721600,
											1325808000,
											1325894400,
											1325980800,
											1326067200,
											1326153600,
											1326240000,
											1326326400,
											1326412800,
											1326499200,
											1326585600,
											1326672000,
											1326758400,
											1326844800,
											1326931200,
											1327017600,
											1327104000,
											1327190400,
											1327276800,
											1327363200,
											1327449600,
											1327536000,
											1327622400,
											1327708800,
											1327795200,
											1327881600,
											1327968000,
											1328054400,
											1328140800,
											1328227200,
											1328313600,
											1328400000,
											1328486400,
											1328572800,
											1328659200,
											1328745600,
											1328832000,
											1328918400,
											1329004800,
											1329091200,
											1329177600,
											1329264000,
											1329350400,
											1329436800,
											1329523200,
											1329609600,
											1329696000,
											1329782400,
											1329868800,
											1329955200,
											1330041600,
											1330128000,
											1330214400,
											1330300800,
											1330387200,
											1330473600,
											1330560000,
											1330646400,
											1330732800,
											1330819200,
											1330905600,
											1330992000,
											1331078400,
											1331164800,
											1331251200,
											1331337600,
											1331424000,
											1331510400,
											1331596800,
											1331683200,
											1331769600,
											1331856000,
											1331942400,
											1332028800,
											1332115200,
											1332201600,
											1332288000,
											1332374400,
											1332460800,
											1332547200,
											1332633600,
											1332720000,
											1332806400,
											1332892800,
											1332979200,
											1333065600,
											1333152000,
											1333238400,
											1333324800,
											1333411200,
											1333497600,
											1333584000,
											1333670400,
											1333756800,
											1333843200,
											1333929600,
											1334016000,
											1334102400,
											1334188800,
											1334275200,
											1334361600,
											1334448000,
											1334534400,
											1334620800,
											1334707200,
											1334793600,
											1334880000,
											1334966400,
											1335052800,
											1335139200,
											1335225600,
											1335312000,
											1335398400,
											1335484800,
											1335571200,
											1335657600,
											1335744000,
											1335830400,
											1335916800,
											1336003200,
											1336089600,
											1336176000,
											1336262400,
											1336348800,
											1336435200,
											1336521600,
											1336608000,
											1336694400,
											1336780800,
											1336867200,
											1336953600,
											1337040000,
											1337126400,
											1337212800,
											1337299200,
											1337385600,
											1337472000,
											1337558400,
											1337644800,
											1337731200,
											1337817600,
											1337904000,
											1337990400,
											1338076800,
											1338163200,
											1338249600,
											1338336000,
											1338422400,
											1338508800,
											1338595200,
											1338681600,
											1338768000,
											1338854400,
											1338940800,
											1339027200,
											1339113600,
											1339200000,
											1339286400,
											1339372800,
											1339459200,
											1339545600,
											1339632000,
											1339718400,
											1339804800,
											1339891200,
											1339977600,
											1340064000,
											1340150400,
											1340236800,
											1340323200,
											1340409600,
											1340496000,
											1340582400,
											1340668800,
											1340755200,
											1340841600,
											1340928000,
											1341014400,
											1341100800,
											1341187200,
											1341273600,
											1341360000,
											1341446400,
											1341532800,
											1341619200,
											1341705600,
											1341792000,
											1341878400,
											1341964800,
											1342051200,
											1342137600,
											1342224000,
											1342310400,
											1342396800,
											1342483200,
											1342569600,
											1342656000,
											1342742400,
											1342828999,
											1342915200,
											1343001600,
											1343088000,
											1343174400,
											1343260800,
											1343347200,
											1343433600,
											1343520000,
											1343606400,
											1343692800,
											1343779200,
											1343865600,
											1343952000,
											1344038400,
											1344124800,
											1344211200,
											1344470400,
											1344556800,
											1344643200,
											1344729600,
											1344816000,
											1344902400,
											1344988800,
											1345075200,
											1345161600,
											1345248000
										],
										"unitDimensions": "0 0 1 0 0 0 0",
										"defaultValue": "{mktime {int {date {now}}}}"
									},
									{
										"name": "MinT",
										"displayUnit": "degC",
										"format": "%.1f",
										"nValues": [
											276.25,
											271.25,
											271.55,
											268.15,
											278.25,
											278.25,
											275.25,
											275.65,
											278.25,
											281.25,
											281.65,
											284.25,
											281.25,
											281.25,
											273.15,
											280.25,
											-12047.85,
											-12047.85,
											277.75,
											273.15,
											275.25,
											278.25,
											268.15,
											278.25,
											277.65,
											279.25,
											277.75,
											278.25,
											280.25,
											280.25,
											281.35,
											280.25,
											268.05,
											271.55,
											268.05,
											282.25,
											285.25,
											285.25,
											-12047.85,
											277.25,
											282.25,
											282.25,
											281.25,
											281.25,
											287.25,
											281.25,
											283.25,
											282.25,
											281.25,
											286.25,
											281.25,
											281.25,
											281.25,
											286.25,
											281.25,
											281.25,
											287.25,
											281.25,
											281.25,
											281.35,
											281.75,
											289.25,
											281.25,
											281.85,
											281.25,
											285.25,
											282.25,
											281.25,
											282.25,
											280.25,
											281.25,
											281.25,
											281.25,
											282.25,
											281.35,
											281.25,
											284.25,
											-12047.85,
											280.45,
											275.25,
											275.25,
											280.25,
											280.25,
											277.75,
											281.35,
											281.35,
											-12047.85,
											280.35,
											284.25,
											281.25,
											276.25,
											277.25,
											279.25,
											279.25,
											281.45,
											279.25,
											275.25,
											276.25,
											274.65,
											277.95,
											281.75,
											274.85,
											280.25,
											282.25,
											279.25,
											277.85,
											-12047.85,
											274.25,
											275.25,
											273.25,
											274.25,
											276.25,
											271.55,
											271.25,
											273.25,
											273.25,
											276.25,
											273.25,
											274.25,
											271.65,
											275.25,
											275.75,
											266.45,
											271.25,
											271.25,
											275.65,
											272.25,
											274.05,
											277.25,
											277.25,
											275.75,
											276.05,
											271.65,
											271.65,
											271.65,
											266.65,
											273.25,
											278.25,
											275.25,
											275.25,
											277.25,
											271.75,
											271.75,
											271.25,
											270.35,
											271.25,
											267.15,
											275.25,
											275.25,
											271.25,
											272.05,
											273.25,
											275.25,
											277.25,
											265.45,
											264.85,
											264.85,
											265.25,
											270.25,
											272.25,
											265.15,
											270.25,
											264.85,
											265.25,
											275.25,
											264.85,
											264.45,
											269.25,
											265.95,
											266.05,
											275.25,
											272.35,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											273.15,
											258.25,
											258.25,
											-12047.85,
											-12047.85,
											-12047.85,
											261.85,
											259.75,
											251.25,
											251.25,
											257.25,
											255.75,
											271.75,
											274.25,
											270.25,
											264.25,
											256.25,
											254.25,
											256.25,
											255.65,
											259.25,
											262.25,
											259.75,
											261.25,
											265.25,
											266.15,
											266.15,
											266.15,
											272.15,
											258.85,
											255.65,
											258.25,
											266.15,
											264.85,
											264.65,
											250.85,
											261.25,
											264.25,
											264.25,
											267.25,
											259.25,
											250.95,
											259.25,
											264.25,
											271.75,
											265.45,
											265.45,
											264.25,
											264.65,
											264.65,
											268.25,
											271.25,
											271.25,
											271.25,
											266.05,
											253.25,
											252.25,
											261.95,
											258.95,
											259.55,
											245.25,
											245.25,
											254.25,
											251.25,
											250.25,
											250.25,
											264.25,
											250.85,
											247.25,
											247.25,
											259.25,
											264.25,
											264.25,
											258.85,
											262.25,
											250.95,
											267.25,
											264.25,
											264.25,
											257.25,
											256.25,
											259.25,
											271.25,
											272.25,
											266.15,
											265.55,
											270.25,
											261.25,
											250.85,
											259.25,
											260.25,
											260.25,
											261.25,
											262.25,
											261.95,
											265.35,
											264.25,
											271.25,
											275.25,
											271.25,
											273.25,
											270.65,
											270.25,
											269.25,
											265.45,
											266.15,
											265.35,
											-12047.85,
											266.15,
											268.25,
											266.75,
											271.25,
											265.25,
											266.15,
											266.15,
											271.25,
											271.25,
											271.85,
											265.25,
											265.25,
											265.45,
											265.45,
											264.25,
											265.25,
											261.25,
											250.95,
											261.85,
											267.75,
											269.25,
											264.65,
											-12047.85,
											-12047.85,
											250.55,
											264.35,
											266.25,
											272.25,
											271.25,
											271.75,
											271.25,
											267.25,
											266.15,
											266.15,
											268.25,
											270.25,
											271.25,
											271.65,
											270.25,
											265.55,
											273.25,
											266.65,
											263.25,
											264.25,
											266.05,
											266.05,
											269.25,
											272.25,
											267.25,
											265.95,
											270.25,
											272.25,
											271.25,
											269.25,
											269.25,
											265.95,
											271.25,
											272.25,
											272.15,
											271.25,
											271.65,
											274.65,
											271.25,
											274.25,
											271.65,
											275.25,
											275.75,
											271.65,
											271.65,
											276.25,
											277.65,
											274.75,
											281.45,
											274.65,
											274.75,
											274.55,
											280.25,
											278.25,
											279.25,
											274.95,
											277.85,
											275.25,
											266.45,
											-12047.85,
											274.85,
											281.55,
											279.25,
											279.85,
											277.25,
											277.25,
											274.85,
											279.75,
											274.75,
											277.25,
											274.25,
											273.25,
											276.25,
											279.85,
											271.65,
											276.25,
											275.65,
											277.75,
											275.05,
											275.65,
											280.25,
											280.25,
											280.25,
											280.25,
											278.25,
											278.25,
											277.25,
											277.95,
											280.55,
											281.45,
											286.25,
											281.45,
											281.45,
											281.55,
											281.45,
											286.25,
											280.25,
											277.85,
											280.55,
											288.25,
											277.25,
											274.75,
											280.05,
											281.25,
											-12047.85,
											281.25,
											279.95,
											279.25,
											280.55,
											280.05,
											280.25,
											283.25,
											281.45,
											281.45,
											280.05,
											280.25,
											280.25,
											281.45,
											280.05,
											280.25,
											275.65,
											277.85,
											281.55,
											280.25,
											277.25,
											279.85,
											277.95,
											281.55,
											-12047.85,
											-12047.85,
											-12047.85,
											280.55,
											279.25,
											280.25,
											281.25,
											281.25,
											280.25,
											281.55,
											281.55,
											288.25,
											285.25,
											282.25,
											277.45,
											277.25,
											279.85,
											280.35,
											280.25,
											277.55,
											274.85,
											-12047.85,
											281.65,
											282.25,
											279.25,
											275.75,
											277.25,
											275.25,
											275.25,
											277.25,
											277.25,
											271.25,
											-12047.85,
											275.25,
											273.25,
											273.25,
											275.25,
											271.75,
											-12047.85,
											-12047.85,
											275.25,
											-12047.85,
											274.75,
											-12047.85,
											280.25,
											-12047.85,
											275.75,
											272.15,
											272.25,
											274.75,
											271.75,
											271.75,
											272.25,
											273.25,
											274.25,
											-12047.85,
											275.65,
											280.25,
											274.95,
											274.25,
											-12047.85,
											275.65,
											-12047.85,
											-12047.85,
											269.65,
											264.25,
											266.15,
											271.45,
											268.45,
											268.25,
											-12047.85,
											280.15,
											271.25,
											271.25,
											271.85,
											266.15,
											264.25,
											264.25,
											266.95,
											264.65,
											264.65,
											266.25,
											267.25,
											268.25,
											271.85,
											273.25,
											276.25,
											274.85,
											-12047.85,
											270.25,
											268.35,
											268.25,
											271.25,
											273.25,
											275.85,
											275.25,
											271.95,
											275.25,
											266.25,
											267.25,
											274.75,
											276.25,
											274.65,
											264.35,
											264.35,
											264.45,
											272.05,
											269.25,
											264.65,
											264.45,
											264.85,
											263.25,
											263.25,
											266.25,
											270.35,
											270.35,
											270.25,
											266.25,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											270.25,
											-12047.85,
											258.25,
											249.25,
											248.25,
											245.25,
											245.25,
											256.25,
											251.25,
											244.25,
											243.25,
											248.25,
											253.25,
											255.25,
											251.15,
											260.25,
											259.85,
											264.85,
											264.25,
											264.65,
											261.85,
											264.65,
											262.35,
											246.35,
											246.25,
											254.25,
											264.25,
											271.25,
											271.85,
											271.85,
											271.85,
											271.35,
											264.25,
											-12047.85,
											271.85,
											266.15,
											269.25,
											271.25,
											268.25,
											264.65,
											250.95,
											250.95,
											251.05,
											256.65,
											254.25,
											252.25,
											247.25,
											247.25,
											249.25,
											261.25,
											270.25,
											271.25,
											264.25,
											264.25,
											269.25,
											268.25,
											271.25,
											264.35,
											268.25,
											265.25,
											250.85,
											263.25,
											250.95,
											272.15,
											264.25,
											264.25,
											261.95,
											261.95,
											-12047.85,
											-12047.85,
											264.25,
											266.25,
											261.85,
											261.85,
											263.25,
											271.85,
											258.65,
											256.05,
											257.25,
											260.25,
											264.25,
											268.25,
											271.85,
											272.25,
											270.85,
											252.25,
											252.25,
											259.75,
											255.15,
											251.25,
											251.25,
											251.25,
											251.05,
											264.25,
											272.25,
											271.25,
											270.25,
											264.25,
											267.45,
											271.85,
											271.85,
											271.25,
											271.35,
											271.85,
											271.25,
											250.85,
											263.25,
											271.35,
											271.25,
											264.25,
											264.25,
											271.25,
											264.25,
											269.25,
											267.25,
											266.15,
											266.15,
											269.25,
											270.25,
											271.25,
											271.25,
											266.05,
											270.25,
											271.75,
											272.25,
											271.75,
											266.05,
											269.25,
											269.25,
											271.25,
											274.25,
											271.65,
											275.95,
											268.25,
											-12047.85,
											265.05,
											270.25,
											271.25,
											271.25,
											272.15,
											266.05,
											271.25,
											270.25,
											271.25,
											276.25,
											275.35,
											275.25,
											273.25,
											272.25,
											273.25,
											271.25,
											271.25,
											275.25,
											274.25,
											271.75,
											266.75,
											272.25,
											277.25,
											277.45,
											277.75,
											275.25,
											271.65,
											271.65,
											277.25,
											277.75,
											277.75,
											276.25,
											277.95,
											277.25,
											266.55,
											274.95,
											280.25,
											280.15,
											273.25,
											276.25,
											277.75,
											281.25,
											274.75,
											274.25,
											277.25,
											274.55,
											271.25,
											273.25,
											277.25,
											281.25,
											281.25,
											280.25,
											281.55,
											280.25,
											281.25,
											280.25,
											282.25,
											280.25,
											279.25,
											274.75,
											275.75,
											277.85,
											282.25,
											275.25,
											278.25,
											274.75,
											274.75,
											274.75,
											277.95,
											280.25,
											-12047.85,
											284.25,
											289.25,
											280.25,
											277.25,
											277.95,
											-12047.85,
											277.65,
											281.25,
											281.55,
											281.85,
											280.25,
											280.25,
											281.25,
											282.25,
											285.25,
											281.25,
											281.25,
											281.25,
											281.55,
											281.55,
											281.55,
											281.55,
											284.25,
											281.35,
											281.25,
											279.25,
											281.25,
											281.55,
											281.55,
											281.55,
											286.25,
											280.25,
											281.55,
											281.55,
											280.25,
											281.55,
											284.25,
											-12047.85,
											281.55,
											281.65,
											280.25,
											-12047.85,
											-12047.85,
											280.25,
											-12047.85,
											280.25,
											280.25,
											281.55,
											281.55,
											-12047.85,
											278.25,
											276.25,
											277.25,
											-12047.85,
											275.75,
											277.25,
											280.25,
											281.25,
											281.55,
											280.25,
											280.55,
											281.65,
											274.85,
											281.25,
											280.25,
											-12047.85,
											275.75,
											277.25,
											274.85,
											274.75,
											276.25,
											274.85,
											277.25,
											274.75,
											280.25,
											-12047.85,
											274.85,
											276.25,
											270.25,
											271.25,
											274.25,
											277.25,
											277.95,
											278.25,
											271.75,
											271.75,
											274.25,
											275.25,
											-12047.85,
											274.85,
											271.85,
											276.25,
											275.25,
											269.25,
											269.25,
											266.15,
											265.25,
											259.75,
											258.85,
											257.25,
											258.35,
											264.35,
											270.25,
											271.25,
											271.85,
											-12047.85,
											-12047.85,
											-12047.85,
											275.25,
											275.25,
											275.25,
											275.25,
											267.25,
											264.35,
											272.25,
											264.25,
											270.25,
											272.25,
											271.25,
											270.25,
											266.05,
											-12047.85,
											266.15,
											264.35,
											268.25,
											272.25,
											272.25,
											272.25,
											272.25,
											270.25,
											264.25,
											264.25,
											264.35,
											269.25,
											270.25,
											274.25,
											274.25,
											272.25,
											270.25,
											266.15,
											269.25,
											264.25,
											271.85,
											271.85,
											271.25,
											271.25,
											266.15,
											268.25,
											271.85,
											266.25,
											250.85,
											255.25,
											255.25,
											259.85,
											258.25,
											252.25,
											246.25,
											246.25,
											253.25,
											249.35,
											261.75,
											254.25,
											249.25,
											250.25,
											249.85,
											264.35,
											271.85,
											271.85,
											264.25,
											268.25,
											267.25,
											260.25,
											252.25,
											253.25,
											248.25,
											248.25,
											250.25,
											253.25,
											249.35,
											249.35,
											259.85,
											262.15,
											270.25,
											270.25,
											264.25,
											251.05,
											246.25,
											246.25,
											251.25,
											262.35,
											-12047.85,
											270.25,
											272.25,
											273.25,
											271.85,
											270.35,
											268.25,
											268.25,
											264.25,
											264.35,
											264.25,
											264.25,
											265.25,
											265.25,
											264.35,
											260.55,
											259.25,
											259.55,
											258.85,
											264.35,
											264.35,
											264.35,
											268.25,
											271.75,
											271.25,
											266.25,
											264.35,
											270.25,
											270.45,
											264.35,
											264.35,
											270.25,
											271.25,
											271.95,
											270.25,
											271.85,
											271.85,
											270.25,
											270.25,
											264.65,
											264.25,
											250.95,
											251.05,
											262.25,
											264.25,
											268.25,
											271.35,
											270.25,
											268.25,
											268.25,
											268.25,
											264.25,
											264.25,
											267.25,
											267.25,
											264.65,
											267.25,
											264.25,
											269.25,
											264.25,
											271.25,
											273.25,
											269.95,
											264.25,
											264.35,
											269.25,
											267.25,
											264.25,
											264.65,
											264.35,
											266.35,
											264.25,
											270.25,
											264.25,
											270.25,
											274.25,
											270.25,
											271.25,
											271.25,
											271.85,
											270.25,
											271.25,
											272.25,
											268.25,
											264.65,
											269.25,
											271.85,
											272.25,
											266.15,
											264.65,
											269.25,
											272.15,
											271.25,
											266.25,
											-12047.85,
											-12047.85,
											270.45,
											272.25,
											272.25,
											273.25,
											-12047.85,
											274.25,
											274.95,
											274.75,
											271.25,
											266.05,
											266.05,
											-12047.85,
											271.75,
											270.25,
											271.25,
											271.25,
											274.85,
											271.75,
											272.25,
											271.25,
											271.85,
											271.25,
											271.75,
											265.25,
											271.75,
											271.25,
											272.25,
											274.25,
											271.75,
											277.25,
											266.65,
											280.25,
											-12047.85,
											-12047.85,
											271.75,
											270.25,
											271.25,
											271.25,
											271.75,
											275.75,
											279.25,
											-12047.85,
											274.75,
											-12047.85,
											-12047.85,
											277.25,
											274.95,
											279.25,
											-12047.85,
											276.25,
											274.75,
											278.25,
											277.25,
											274.35,
											-12047.85,
											275.75,
											275.25,
											275.75,
											280.25,
											275.75,
											277.75,
											279.25,
											-12047.85,
											274.65,
											-12047.85,
											281.65,
											280.25,
											277.65,
											280.25,
											280.25,
											-12047.85,
											-12047.85,
											-12047.85,
											281.25,
											281.55,
											277.25,
											280.25,
											274.85,
											-12047.85,
											277.25,
											274.55,
											278.25,
											-12047.85,
											-12047.85,
											281.65,
											284.25,
											281.65,
											274.75,
											277.25,
											-12047.85,
											280.25,
											280.25,
											280.55,
											281.65,
											277.25,
											-12047.85,
											-12047.85,
											275.05,
											281.25,
											283.25,
											283.25,
											285.25,
											285.25,
											281.65,
											283.25,
											281.65,
											281.65,
											282.25,
											281.65,
											280.25,
											283.25,
											284.25,
											281.65,
											283.35,
											281.75,
											280.25,
											282.25,
											281.25,
											280.25,
											-12047.85,
											279.25,
											-12047.85,
											-12047.85,
											280.25,
											281.65,
											281.25,
											278.25,
											-12047.85,
											276.25,
											276.25,
											276.25,
											274.95,
											-12047.85,
											274.65,
											-12047.85,
											277.25,
											275.25,
											276.25,
											271.85,
											-12047.85,
											-12047.85,
											279.25,
											274.85,
											276.25,
											277.25,
											280.25,
											277.65,
											280.25,
											275.85,
											277.95,
											277.25,
											276.25,
											277.25,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											271.85,
											272.15,
											273.25,
											264.25,
											264.35,
											267.25,
											269.25,
											271.25,
											270.35,
											270.25,
											272.25,
											272.05,
											272.05,
											273.25,
											272.15,
											271.25,
											271.25,
											272.25,
											270.25,
											277.25,
											-12047.85,
											-12047.85,
											268.25,
											269.25,
											277.65,
											-12047.85,
											274.25,
											-12047.85,
											267.25,
											264.25,
											268.25,
											271.25,
											272.25,
											271.25,
											271.25,
											264.65,
											-12047.85,
											-12047.85,
											258.25,
											252.25,
											253.25,
											252.25,
											-12047.85,
											-12047.85,
											-12047.85,
											265.35,
											264.35,
											264.35,
											266.25,
											267.85,
											269.25,
											261.95,
											263.25,
											258.25,
											251.25,
											252.25,
											258.25,
											269.25,
											270.25,
											264.35,
											264.35,
											-12047.85,
											271.95,
											270.25,
											266.25,
											261.25,
											255.25,
											249.35,
											257.25,
											257.25,
											257.25,
											249.45,
											259.25,
											257.25,
											257.25,
											258.25,
											264.35,
											264.35,
											257.25,
											246.25,
											247.25,
											253.25,
											258.25,
											260.25,
											261.25,
											264.45,
											272.25,
											270.25,
											259.55,
											254.25,
											246.25,
											246.25,
											255.25,
											264.45,
											274.25,
											271.95,
											272.25,
											272.25,
											259.25,
											258.95,
											268.25,
											266.25,
											266.25,
											-12047.85,
											264.25,
											271.25,
											271.25,
											272.25,
											271.25,
											-12047.85,
											247.25,
											245.25,
											245.25,
											250.25,
											257.25,
											264.55,
											267.25,
											264.35,
											260.25,
											255.25,
											254.25,
											264.75,
											271.95,
											272.25,
											264.35,
											270.25,
											271.25,
											266.25,
											261.25,
											253.25,
											255.25,
											260.25,
											266.25,
											259.25,
											253.25,
											242.25,
											243.35,
											256.25,
											261.35,
											254.25,
											254.25,
											258.25,
											270.25,
											267.85,
											261.75,
											259.55,
											258.85,
											270.25,
											270.35,
											271.95,
											264.35,
											269.25,
											271.95,
											272.35,
											271.95,
											270.25,
											268.25,
											268.25,
											270.25,
											264.35,
											264.35,
											270.25,
											269.25,
											270.35,
											270.25,
											264.35,
											270.25,
											271.25,
											271.85,
											271.95,
											-12047.85,
											272.25,
											264.55,
											267.25,
											270.25,
											270.25,
											270.25,
											264.35,
											266.25,
											268.25,
											271.95,
											270.25,
											264.35,
											271.25,
											271.95,
											272.25,
											271.25,
											266.25,
											264.35,
											264.35,
											271.25,
											270.25,
											264.25,
											269.25,
											271.25,
											274.25,
											271.85,
											271.85,
											271.95,
											264.25,
											264.25,
											270.35,
											275.25,
											272.25,
											274.45,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											273.15,
											275.15,
											280.15,
											279.15,
											274.15,
											271.15,
											274.15,
											278.15,
											-12047.85,
											-12047.85,
											-12047.85,
											279.15,
											279.15,
											280.15,
											274.15,
											275.15,
											273.15,
											273.15,
											274.15,
											276.15,
											276.15,
											278.15,
											277.15,
											276.15,
											279.15,
											281.15,
											281.15,
											280.15,
											281.15,
											280.15,
											279.15,
											278.15,
											281.15,
											280.15,
											280.15,
											280.15,
											281.15,
											282.15,
											282.15,
											281.15,
											-12047.85,
											-12047.85,
											284.15,
											278.15,
											275.15,
											278.15,
											281.15,
											281.15,
											-12047.85,
											283.15,
											277.15,
											279.15,
											281.15,
											278.15,
											280.15,
											283.15,
											285.15,
											281.15,
											277.15,
											279.15,
											281.15,
											286.15,
											283.15,
											282.15,
											278.15,
											278.15,
											284.15,
											286.15,
											284.15,
											281.15,
											282.15,
											279.15,
											278.15,
											278.15,
											283.15,
											284.15,
											279.15,
											280.15,
											279.15,
											282.15,
											286.15,
											279.15,
											279.15,
											281.15,
											281.15,
											282.15,
											282.15,
											283.15,
											281.15,
											280.15,
											280.15,
											280.15,
											280.15,
											281.15,
											280.15,
											278.15,
											278.15,
											278.15,
											276.15,
											276.15,
											276.15,
											278.15,
											285.15,
											282.15,
											282.15,
											281.15,
											281.15,
											281.15,
											281.15,
											281.15,
											283.15,
											279.15,
											279.15,
											273.15,
											273.15,
											274.15,
											276.15,
											277.15,
											277.15,
											277.15,
											277.15,
											277.15,
											277.15,
											282.15,
											281.15,
											278.15,
											278.15,
											281.15,
											279.15,
											282.15,
											272.15,
											272.15,
											278.15,
											279.15,
											284.15,
											278.15,
											278.15,
											283.15,
											280.15,
											272.15,
											272.15,
											273.15,
											280.15,
											277.15,
											277.15,
											275.15,
											277.15,
											279.15,
											278.15,
											276.15,
											276.15,
											276.15,
											277.15,
											273.15,
											271.15,
											271.15,
											-12047.85,
											-12047.85,
											270.15,
											270.15,
											270.15,
											275.15,
											275.15,
											279.15,
											269.15,
											269.15,
											267.15,
											269.15,
											268.15,
											270.15,
											275.15,
											274.15,
											268.15,
											268.15,
											268.15,
											269.15,
											269.15,
											265.15,
											265.15,
											271.15,
											270.15,
											270.15,
											275.15,
											273.15,
											272.15,
											272.15,
											262.15,
											259.15,
											259.15,
											264.15,
											253.15,
											254.15,
											256.15,
											267.15,
											275.15,
											273.15,
											273.15,
											266.15,
											269.15,
											274.15,
											274.15,
											272.15,
											266.15,
											266.15,
											263.15,
											263.15,
											260.15,
											260.15,
											264.15,
											262.15,
											260.15,
											260.15,
											260.15,
											262.15,
											260.15,
											263.15,
											266.15,
											268.15,
											271.15,
											277.15,
											269.15,
											272.15,
											266.15,
											264.15,
											265.15,
											266.15,
											272.15,
											273.15,
											271.15,
											272.15,
											275.15,
											272.15,
											272.15,
											264.15,
											263.15,
											266.15,
											277.15,
											277.15,
											272.15,
											270.15,
											270.15,
											273.15,
											273.15,
											261.15,
											260.15,
											260.15,
											263.15,
											263.15,
											255.15,
											251.15,
											246.15,
											247.15,
											255.15,
											258.15,
											265.15,
											268.15,
											265.15,
											267.15,
											272.15,
											266.15,
											267.15,
											269.15,
											273.15,
											274.15,
											272.15,
											271.15,
											268.15,
											-12047.85,
											-12047.85,
											260.15,
											260.15,
											256.15,
											256.15,
											267.15,
											268.15,
											268.15,
											270.15,
											266.15,
											258.15,
											258.15,
											263.15,
											269.15,
											271.15,
											270.15,
											270.15,
											273.15,
											264.15,
											263.15,
											264.15,
											265.15,
											258.15,
											257.15,
											258.15,
											262.15,
											262.15,
											264.15,
											274.15,
											276.15,
											269.15,
											265.15,
											267.15,
											270.15,
											274.15,
											274.15,
											272.15,
											272.15,
											270.15,
											271.15,
											273.15,
											271.15,
											269.15,
											269.15,
											269.15,
											-12047.85,
											271.15,
											270.15,
											271.15,
											269.15,
											270.15,
											273.15,
											273.15,
											273.15,
											274.15,
											274.15,
											274.15,
											273.15,
											268.15,
											269.15,
											271.15,
											267.15,
											269.15,
											267.15,
											268.15,
											272.15,
											275.15,
											276.15,
											278.15,
											272.15,
											272.15,
											273.15,
											274.15,
											274.15,
											272.15,
											273.15,
											272.15,
											273.15,
											273.15,
											273.15,
											278.15,
											-12047.85,
											-12047.85,
											271.15,
											272.15,
											272.15,
											-12047.85,
											275.15,
											271.15,
											274.15,
											276.15,
											272.15,
											272.15,
											274.15,
											279.15,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											279.15,
											278.15,
											283.15,
											279.15,
											276.15,
											278.15,
											284.15,
											281.15,
											281.15,
											282.15,
											279.15,
											281.15,
											286.15,
											286.15,
											281.15,
											281.15,
											279.15,
											276.15,
											280.15,
											283.15,
											286.15,
											282.15,
											284.15,
											281.15,
											277.15,
											278.15,
											282.15,
											285.15,
											285.15,
											285.15,
											283.15,
											285.15,
											288.15,
											288.15,
											288.15,
											286.15,
											287.15,
											286.15,
											286.15,
											288.15,
											287.15,
											282.15,
											285.15,
											285.15,
											279.15,
											284.15,
											283.15,
											283.15,
											281.15,
											282.15,
											291.15,
											281.15,
											282.15,
											279.15,
											279.15,
											282.15,
											285.15,
											283.15,
											280.15,
											281.15,
											284.15,
											281.15,
											282.15,
											284.15,
											277.15,
											279.15,
											280.15
										],
										"unitDimensions": "0 0 0 0 1 0 0",
										"defaultValue": "EmptyT"
									},
									{
										"name": "MaxT",
										"displayUnit": "degC",
										"format": "%.1f",
										"nValues": [
											294.15,
											278.15,
											292.15,
											297.15,
											288.15,
											286.15,
											295.15,
											300.15,
											303.15,
											305.05,
											305.05,
											306.05,
											303.15,
											298.75,
											287.05,
											287.15,
											-12047.85,
											-12047.85,
											293.15,
											287.15,
											289.15,
											290.15,
											290.15,
											294.15,
											295.15,
											283.15,
											289.15,
											298.15,
											303.15,
											303.15,
											302.15,
											298.15,
											298.15,
											284.15,
											298.15,
											303.15,
											306.15,
											301.15,
											-12047.85,
											302.15,
											303.15,
											304.15,
											307.15,
											309.15,
											311.05,
											306.15,
											304.15,
											301.15,
											304.15,
											307.15,
											308.15,
											310.15,
											310.15,
											309.15,
											307.15,
											306.15,
											305.15,
											299.05,
											302.05,
											297.15,
											305.15,
											309.15,
											305.15,
											306.15,
											308.05,
											307.95,
											309.15,
											309.15,
											306.15,
											305.15,
											305.15,
											306.15,
											307.05,
											301.15,
											303.15,
											304.15,
											302.15,
											302.15,
											301.05,
											298.15,
											301.05,
											303.15,
											302.15,
											305.15,
											307.15,
											302.15,
											306.15,
											303.15,
											295.15,
											290.15,
											298.15,
											300.15,
											300.15,
											302.15,
											302.15,
											291.05,
											292.15,
											298.05,
											304.15,
											297.15,
											299.95,
											300.15,
											302.15,
											304.15,
											303.15,
											303.15,
											300.15,
											297.15,
											295.15,
											297.05,
											300.15,
											293.15,
											288.15,
											297.15,
											300.15,
											303.15,
											301.15,
											294.15,
											287.15,
											285.15,
											280.15,
											288.15,
											287.15,
											283.15,
											286.15,
											289.05,
											289.05,
											294.15,
											289.15,
											284.15,
											282.15,
											280.15,
											279.15,
											279.15,
											280.15,
											281.15,
											284.05,
											282.15,
											284.15,
											293.15,
											288.15,
											285.15,
											288.15,
											288.15,
											289.15,
											290.15,
											284.15,
											286.05,
											280.15,
											279.15,
											280.05,
											279.15,
											284.15,
											291.15,
											294.15,
											283.15,
											281.15,
											282.15,
											286.15,
											285.15,
											284.15,
											283.15,
											282.15,
											280.15,
											283.15,
											284.15,
											280.15,
											281.15,
											283.15,
											284.15,
											283.15,
											279.15,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											275.15,
											270.15,
											268.15,
											-12047.85,
											-12047.85,
											-12047.85,
											271.15,
											271.15,
											270.15,
											262.15,
											261.15,
											274.15,
											278.15,
											279.15,
											277.15,
											274.15,
											270.15,
											265.15,
											264.15,
											267.15,
											270.15,
											272.15,
											271.15,
											268.15,
											273.15,
											274.15,
											274.15,
											274.15,
											275.15,
											274.15,
											269.15,
											270.15,
											273.15,
											273.15,
											271.15,
											271.15,
											265.55,
											269.15,
											271.15,
											271.15,
											271.15,
											266.15,
											271.15,
											274.15,
											276.05,
											276.15,
											273.15,
											270.25,
											270.15,
											271.15,
											273.15,
											276.15,
											275.15,
											276.15,
											277.15,
											270.15,
											265.15,
											268.15,
											269.15,
											271.15,
											264.15,
											259.15,
											267.15,
											265.15,
											264.15,
											271.15,
											274.15,
											274.15,
											254.15,
											261.15,
											269.25,
											272.15,
											273.15,
											272.15,
											272.15,
											270.15,
											272.15,
											273.15,
											273.15,
											275.15,
											262.15,
											274.15,
											275.15,
											277.15,
											276.15,
											275.15,
											276.15,
											276.15,
											274.15,
											275.15,
											276.15,
											277.15,
											277.15,
											278.15,
											278.15,
											277.15,
											279.15,
											278.15,
											280.15,
											281.15,
											283.15,
											279.15,
											281.05,
											284.15,
											279.15,
											280.15,
											282.15,
											280.15,
											281.15,
											282.15,
											282.15,
											278.15,
											280.15,
											284.15,
											278.15,
											277.15,
											280.15,
											277.15,
											277.15,
											280.15,
											281.15,
											282.15,
											282.05,
											277.15,
											278.15,
											281.15,
											280.15,
											279.15,
											278.15,
											275.15,
											-12047.85,
											-12047.85,
											279.15,
											282.05,
											281.15,
											284.15,
											282.15,
											279.15,
											283.05,
											283.05,
											284.15,
											284.15,
											288.15,
											292.15,
											297.15,
											279.15,
											279.15,
											284.15,
											287.15,
											282.15,
											271.15,
											277.15,
											276.15,
											282.15,
											277.15,
											280.15,
											283.15,
											289.15,
											290.15,
											293.15,
											279.15,
											286.15,
											288.15,
											291.15,
											290.15,
											295.15,
											291.15,
											294.15,
											290.15,
											283.15,
											284.15,
											286.15,
											279.15,
											289.15,
											283.15,
											291.15,
											299.05,
											302.15,
											302.15,
											300.15,
											299.05,
											295.15,
											286.15,
											286.15,
											286.15,
											286.15,
											289.15,
											287.15,
											287.15,
											297.15,
											297.15,
											-12047.85,
											300.15,
											290.15,
											293.15,
											294.15,
											292.15,
											293.15,
											286.15,
											-12047.85,
											289.15,
											283.15,
											281.15,
											285.15,
											296.15,
											294.05,
											295.15,
											298.15,
											301.15,
											302.15,
											297.15,
											297.15,
											298.15,
											304.15,
											292.15,
											297.15,
											297.05,
											298.95,
											297.15,
											301.15,
											306.15,
											309.05,
											308.15,
											304.15,
											299.05,
											305.15,
											299.05,
											298.15,
											297.15,
											300.35,
											302.15,
											304.05,
											300.15,
											295.15,
											301.15,
											304.15,
											303.05,
											301.05,
											303.15,
											301.15,
											302.15,
											301.15,
											305.15,
											308.15,
											302.15,
											299.05,
											302.15,
											305.15,
											303.15,
											302.15,
											297.15,
											301.15,
											286.15,
											299.05,
											292.15,
											299.05,
											291.15,
											301.15,
											303.15,
											306.15,
											-12047.85,
											-12047.85,
											-12047.85,
											305.15,
											297.15,
											301.15,
											304.15,
											304.15,
											307.15,
											307.15,
											309.15,
											309.05,
											300.15,
											288.15,
											288.15,
											295.15,
											298.15,
											303.15,
											293.15,
											290.05,
											284.15,
											-12047.85,
											293.15,
											296.15,
											287.15,
											291.15,
											295.15,
											295.15,
											296.05,
											287.15,
											289.15,
											294.15,
											295.15,
											297.15,
											295.15,
											296.15,
											297.15,
											295.15,
											298.15,
											298.95,
											298.15,
											300.15,
											300.15,
											301.15,
											299.05,
											287.15,
											283.15,
											286.15,
											290.15,
											288.15,
											290.15,
											291.15,
											295.15,
											294.15,
											297.15,
											296.15,
											295.15,
											292.15,
											284.15,
											286.15,
											287.15,
											284.15,
											-12047.85,
											-12047.85,
											282.15,
											283.15,
											284.15,
											284.15,
											285.15,
											284.15,
											281.15,
											286.15,
											289.15,
											287.05,
											279.15,
											283.15,
											284.15,
											287.15,
											286.15,
											-12047.85,
											281.15,
											282.15,
											284.15,
											290.15,
											289.15,
											283.15,
											286.15,
											283.15,
											280.15,
											276.15,
											275.15,
											276.15,
											277.15,
											278.15,
											281.15,
											280.15,
											277.15,
											280.15,
											279.15,
											277.15,
											282.15,
											284.15,
											285.15,
											285.15,
											279.15,
											276.15,
											278.15,
											277.15,
											277.15,
											276.15,
											277.15,
											278.15,
											272.15,
											275.15,
											279.15,
											281.15,
											283.15,
											272.15,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											282.75,
											-12047.85,
											273.15,
											259.15,
											255.15,
											255.15,
											258.15,
											261.15,
											257.15,
											256.15,
											249.15,
											255.15,
											266.15,
											264.15,
											265.15,
											267.15,
											267.15,
											274.15,
											274.15,
											270.15,
											271.15,
											272.15,
											267.15,
											263.15,
											255.15,
											267.15,
											273.15,
											275.15,
											276.15,
											276.15,
											276.15,
											275.15,
											278.15,
											277.15,
											280.15,
											278.15,
											276.15,
											276.15,
											274.15,
											271.15,
											269.15,
											268.15,
											268.15,
											270.15,
											261.15,
											263.15,
											263.15,
											263.15,
											266.15,
											274.15,
											276.15,
											278.15,
											274.15,
											274.15,
											277.15,
											280.15,
											283.15,
											282.15,
											277.15,
											277.15,
											277.15,
											277.15,
											273.15,
											273.05,
											273.15,
											272.15,
											272.15,
											273.15,
											277.15,
											-12047.85,
											278.15,
											277.15,
											279.15,
											280.15,
											279.15,
											277.15,
											275.15,
											264.15,
											268.15,
											273.15,
											277.15,
											277.15,
											277.15,
											277.15,
											279.15,
											273.15,
											274.15,
											270.15,
											266.15,
											261.15,
											264.15,
											272.15,
											276.15,
											283.15,
											275.15,
											275.15,
											275.15,
											276.15,
											280.15,
											279.15,
											284.15,
											286.15,
											282.15,
											285.15,
											279.15,
											277.15,
											281.15,
											284.15,
											280.15,
											277.15,
											278.15,
											279.15,
											278.15,
											279.15,
											282.15,
											285.15,
											288.15,
											290.15,
											293.15,
											293.15,
											290.15,
											291.15,
											291.15,
											283.15,
											282.15,
											283.15,
											282.05,
											289.15,
											290.15,
											289.15,
											290.15,
											295.15,
											299.05,
											287.05,
											-12047.85,
											283.15,
											282.15,
											286.15,
											277.15,
											279.15,
											280.15,
											287.15,
											291.15,
											295.15,
											286.05,
											289.15,
											283.15,
											286.15,
											277.15,
											289.15,
											291.15,
											294.15,
											290.15,
											281.15,
											284.15,
											284.15,
											291.15,
											296.15,
											298.15,
											302.15,
											288.15,
											284.15,
											291.15,
											295.15,
											299.05,
											301.15,
											293.15,
											294.15,
											295.15,
											299.05,
											303.15,
											303.15,
											301.15,
											291.15,
											298.15,
											302.15,
											304.15,
											293.15,
											287.05,
											291.15,
											287.15,
											286.15,
											298.15,
											301.15,
											304.15,
											303.15,
											303.15,
											301.15,
											298.95,
											296.15,
											298.15,
											291.15,
											295.15,
											300.15,
											281.15,
											292.15,
											298.15,
											293.15,
											295.05,
											299.05,
											299.05,
											302.15,
											302.15,
											300.15,
											303.15,
											-12047.85,
											306.15,
											302.05,
											290.15,
											291.15,
											293.15,
											297.15,
											300.15,
											304.15,
											302.15,
											291.15,
											297.15,
											301.15,
											304.15,
											306.15,
											306.15,
											304.15,
											303.25,
											306.15,
											307.15,
											306.15,
											301.15,
											305.25,
											298.15,
											301.15,
											295.15,
											295.15,
											303.15,
											301.15,
											306.15,
											304.15,
											303.15,
											292.15,
											294.15,
											299.05,
											298.95,
											302.15,
											301.15,
											-12047.85,
											301.15,
											291.15,
											285.15,
											288.15,
											294.15,
											294.15,
											298.15,
											302.15,
											302.15,
											304.05,
											304.15,
											302.15,
											302.15,
											301.15,
											302.05,
											301.15,
											302.15,
											303.15,
											303.15,
											304.05,
											303.15,
											304.05,
											305.15,
											297.15,
											298.15,
											298.95,
											289.15,
											283.15,
											290.15,
											292.15,
											298.15,
											298.15,
											300.15,
											302.15,
											302.15,
											302.15,
											303.15,
											291.15,
											299.05,
											298.05,
											289.15,
											291.15,
											298.15,
											300.15,
											301.15,
											301.15,
											299.25,
											294.15,
											293.15,
											290.15,
											289.15,
											284.15,
											278.15,
											280.15,
											280.15,
											284.15,
											284.15,
											280.15,
											281.15,
											275.15,
											272.15,
											272.15,
											276.15,
											276.15,
											274.15,
											282.15,
											279.15,
											-12047.85,
											-12047.85,
											-12047.85,
											283.15,
											280.15,
											286.05,
											280.15,
											285.15,
											280.15,
											275.15,
											278.15,
											276.15,
											274.15,
											281.15,
											280.15,
											281.15,
											-12047.85,
											281.15,
											277.15,
											284.15,
											282.15,
											275.15,
											274.15,
											279.15,
											278.15,
											275.15,
											275.15,
											274.15,
											273.15,
											275.15,
											281.15,
											282.15,
											277.15,
											274.15,
											276.15,
											274.15,
											275.15,
											276.15,
											278.15,
											277.15,
											280.15,
											276.15,
											275.15,
											277.15,
											278.15,
											272.15,
											268.15,
											264.15,
											266.15,
											270.15,
											262.15,
											260.15,
											256.15,
											262.15,
											265.15,
											268.15,
											267.15,
											256.15,
											256.15,
											266.15,
											274.15,
											276.15,
											276.15,
											276.15,
											273.15,
											274.15,
											273.15,
											263.15,
											259.55,
											262.15,
											259.15,
											260.15,
											263.15,
											265.15,
											269.15,
											263.15,
											275.15,
											277.15,
											274.15,
											272.15,
											268.15,
											261.15,
											257.15,
											263.15,
											270.15,
											275.15,
											275.15,
											278.15,
											278.25,
											276.15,
											277.15,
											276.15,
											274.15,
											276.15,
											273.15,
											276.15,
											271.15,
											275.15,
											274.15,
											271.15,
											271.15,
											273.15,
											271.15,
											273.15,
											276.15,
											275.15,
											272.15,
											275.15,
											276.15,
											277.15,
											277.15,
											275.15,
											275.15,
											276.15,
											275.15,
											275.15,
											277.15,
											277.15,
											276.15,
											281.15,
											280.15,
											279.15,
											277.15,
											279.15,
											279.15,
											279.15,
											279.15,
											277.15,
											279.15,
											281.15,
											275.15,
											280.15,
											282.05,
											278.15,
											285.15,
											284.15,
											282.15,
											286.15,
											286.15,
											286.15,
											284.15,
											286.15,
											284.15,
											277.15,
											281.15,
											277.15,
											277.15,
											283.15,
											283.05,
											286.15,
											286.15,
											280.15,
											280.15,
											284.15,
											285.15,
											281.15,
											284.15,
											286.05,
											288.15,
											285.15,
											285.15,
											286.15,
											283.15,
											278.15,
											278.15,
											279.15,
											284.15,
											280.15,
											276.15,
											281.15,
											286.15,
											286.15,
											278.15,
											276.15,
											276.15,
											284.15,
											279.15,
											278.15,
											281.15,
											-12047.85,
											-12047.85,
											298.15,
											297.15,
											294.15,
											298.15,
											298.15,
											302.15,
											293.05,
											291.15,
											281.15,
											290.15,
											290.15,
											281.15,
											277.15,
											279.15,
											288.05,
											286.15,
											288.15,
											278.15,
											281.15,
											279.15,
											283.15,
											286.15,
											281.15,
											288.55,
											292.05,
											291.15,
											296.15,
											298.15,
											298.15,
											299.05,
											300.05,
											303.15,
											302.15,
											297.15,
											280.15,
											284.15,
											292.15,
											292.15,
											293.15,
											291.15,
											290.15,
											284.15,
											287.15,
											282.15,
											282.15,
											289.15,
											287.15,
											284.15,
											288.15,
											285.15,
											292.15,
											294.15,
											293.15,
											295.15,
											284.15,
											288.15,
											292.15,
											300.15,
											303.15,
											297.15,
											298.15,
											283.15,
											283.15,
											287.15,
											296.05,
											300.15,
											294.15,
											295.15,
											300.15,
											302.05,
											-12047.85,
											-12047.85,
											-12047.85,
											304.05,
											304.15,
											297.15,
											297.15,
											285.15,
											291.05,
											287.15,
											295.15,
											294.95,
											302.25,
											305.15,
											309.05,
											304.15,
											303.05,
											294.15,
											288.15,
											298.15,
											303.05,
											304.15,
											304.15,
											305.05,
											298.95,
											-12047.85,
											-12047.85,
											303.05,
											299.05,
											303.05,
											306.15,
											307.15,
											302.15,
											305.15,
											302.15,
											304.15,
											300.15,
											298.95,
											295.15,
											297.15,
											299.05,
											303.15,
											301.05,
											300.15,
											292.85,
											299.05,
											298.85,
											298.95,
											298.15,
											290.15,
											299.05,
											-12047.85,
											-12047.85,
											304.15,
											306.15,
											304.15,
											301.15,
											297.15,
											293.15,
											295.05,
											300.15,
											305.05,
											305.05,
											290.15,
											293.15,
											281.15,
											294.15,
											286.15,
											289.15,
											295.15,
											297.15,
											298.95,
											282.15,
											286.15,
											288.15,
											287.15,
											288.15,
											289.05,
											287.15,
											287.15,
											294.15,
											294.15,
											294.15,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											287.15,
											289.15,
											292.15,
											286.15,
											284.05,
											284.15,
											286.95,
											288.15,
											288.15,
											289.15,
											284.15,
											279.15,
											279.15,
											279.15,
											277.15,
											279.15,
											277.15,
											278.15,
											279.15,
											280.15,
											282.15,
											283.15,
											283.15,
											281.15,
											283.15,
											283.15,
											281.15,
											-12047.85,
											278.15,
											274.15,
											276.15,
											278.15,
											276.15,
											280.15,
											281.05,
											273.15,
											-12047.85,
											267.15,
											263.15,
											262.15,
											261.15,
											259.15,
											-12047.85,
											-12047.85,
											266.15,
											270.15,
											273.15,
											273.15,
											270.15,
											270.15,
											275.15,
											274.15,
											272.15,
											268.15,
											266.15,
											263.15,
											270.15,
											275.15,
											275.15,
											275.15,
											274.15,
											276.15,
											276.15,
											275.15,
											274.15,
											270.15,
											267.15,
											265.15,
											263.15,
											263.25,
											268.15,
											266.15,
											270.15,
											266.15,
											266.15,
											274.15,
											273.15,
											276.15,
											267.15,
											263.15,
											257.15,
											262.15,
											263.15,
											264.15,
											269.15,
											274.15,
											276.05,
											275.15,
											272.15,
											265.15,
											263.15,
											257.15,
											271.15,
											276.15,
											277.15,
											279.15,
											278.15,
											279.15,
											275.15,
											270.15,
											273.15,
											274.15,
											275.15,
											278.15,
											276.15,
											278.15,
											276.15,
											280.25,
											279.05,
											272.15,
											263.15,
											261.15,
											261.15,
											265.15,
											271.15,
											277.15,
											278.15,
											273.15,
											269.15,
											270.15,
											270.15,
											278.15,
											277.15,
											279.15,
											278.15,
											280.15,
											276.15,
											275.15,
											272.15,
											268.15,
											273.15,
											274.15,
											273.15,
											269.15,
											262.15,
											257.15,
											262.15,
											266.15,
											272.15,
											273.15,
											262.15,
											274.15,
											276.15,
											278.05,
											281.15,
											273.15,
											276.15,
											275.15,
											276.15,
											277.15,
											275.15,
											281.15,
											281.15,
											277.15,
											277.15,
											277.15,
											279.85,
											282.15,
											280.15,
											282.15,
											275.15,
											280.15,
											282.15,
											282.15,
											282.15,
											281.15,
											278.05,
											283.05,
											276.15,
											281.15,
											279.15,
											281.05,
											274.15,
											282.15,
											279.15,
											279.05,
											278.15,
											280.05,
											284.15,
											285.15,
											-12047.85,
											277.15,
											283.15,
											285.05,
											277.15,
											278.15,
											277.15,
											275.15,
											280.15,
											280.15,
											281.15,
											286.15,
											284.15,
											287.15,
											290.15,
											285.15,
											284.15,
											280.15,
											278.15,
											282.15,
											286.05,
											290.15,
											290.15,
											284.15,
											291.15,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											290.15,
											290.15,
											291.15,
											288.15,
											283.15,
											281.15,
											292.15,
											288.15,
											-12047.85,
											-12047.85,
											-12047.85,
											293.15,
											285.15,
											287.15,
											281.15,
											279.15,
											279.15,
											288.15,
											290.15,
											293.15,
											292.15,
											289.15,
											289.15,
											295.15,
											299.15,
											292.15,
											290.15,
											284.15,
											291.15,
											292.15,
											290.15,
											293.15,
											285.15,
											-12047.85,
											284.15,
											282.15,
											286.15,
											290.15,
											288.15,
											293.15,
											-12047.85,
											-12047.85,
											291.15,
											286.15,
											289.15,
											293.15,
											298.15,
											300.15,
											-12047.85,
											290.15,
											293.15,
											298.15,
											295.15,
											298.15,
											301.15,
											303.15,
											304.15,
											290.15,
											295.15,
											297.15,
											299.15,
											299.15,
											295.15,
											294.15,
											290.15,
											298.15,
											302.15,
											305.15,
											299.15,
											289.15,
											288.15,
											285.15,
											293.15,
											300.15,
											296.15,
											291.15,
											292.15,
											297.15,
											298.15,
											301.15,
											302.15,
											301.15,
											301.15,
											300.15,
											301.15,
											303.15,
											299.15,
											300.15,
											299.15,
											302.15,
											300.15,
											298.15,
											299.15,
											301.15,
											300.15,
											292.15,
											295.15,
											298.15,
											296.15,
											297.15,
											299.15,
											303.15,
											303.15,
											296.15,
											302.15,
											302.15,
											302.15,
											303.15,
											303.15,
											302.15,
											299.15,
											286.15,
											287.15,
											289.15,
											292.15,
											297.15,
											299.15,
											300.15,
											300.15,
											300.15,
											300.15,
											301.15,
											302.15,
											300.15,
											290.15,
											296.15,
											288.15,
											291.15,
											287.15,
											287.15,
											288.15,
											290.15,
											294.15,
											295.15,
											300.15,
											302.15,
											296.15,
											289.15,
											287.15,
											289.15,
											290.15,
											298.15,
											288.15,
											289.15,
											289.15,
											284.15,
											282.15,
											281.15,
											281.15,
											283.15,
											285.15,
											280.15,
											280.15,
											281.15,
											282.15,
											280.15,
											-12047.85,
											-12047.85,
											283.15,
											283.15,
											285.15,
											282.15,
											283.15,
											283.15,
											284.15,
											278.15,
											278.15,
											278.15,
											280.15,
											279.15,
											279.15,
											279.15,
											279.15,
											278.15,
											279.15,
											278.15,
											275.15,
											273.15,
											273.15,
											275.15,
											278.15,
											277.15,
											280.15,
											278.15,
											274.15,
											275.15,
											274.15,
											270.15,
											270.15,
											273.15,
											264.15,
											261.15,
											268.15,
											275.15,
											278.15,
											278.15,
											275.15,
											274.15,
											276.15,
											279.15,
											277.15,
											277.15,
											275.15,
											273.15,
											275.15,
											271.15,
											269.15,
											268.15,
											271.15,
											267.15,
											269.15,
											267.15,
											269.15,
											270.15,
											266.15,
											267.15,
											270.15,
											272.15,
											277.15,
											279.15,
											279.15,
											274.15,
											275.15,
											270.15,
											270.15,
											274.15,
											276.15,
											276.15,
											274.15,
											277.15,
											279.15,
											277.15,
											275.15,
											272.15,
											269.15,
											277.15,
											279.15,
											283.15,
											278.15,
											272.15,
											274.15,
											277.15,
											279.15,
											274.15,
											266.15,
											266.15,
											270.15,
											273.15,
											265.15,
											257.15,
											252.15,
											255.15,
											259.15,
											266.15,
											274.15,
											272.15,
											273.15,
											275.15,
											275.15,
											275.15,
											271.15,
											275.15,
											276.15,
											277.15,
											276.15,
											274.15,
											276.15,
											-12047.85,
											-12047.85,
											270.15,
											272.15,
											272.15,
											269.15,
											271.15,
											274.15,
											273.15,
											275.15,
											277.15,
											273.15,
											273.15,
											272.15,
											273.15,
											274.15,
											275.15,
											274.15,
											278.15,
											277.15,
											276.15,
											271.15,
											274.15,
											267.15,
											270.15,
											271.15,
											271.15,
											274.15,
											275.15,
											278.15,
											280.15,
											277.15,
											272.15,
											274.15,
											280.15,
											284.15,
											283.15,
											276.15,
											277.15,
											277.15,
											275.15,
											279.15,
											278.15,
											274.15,
											276.15,
											277.15,
											-12047.85,
											276.15,
											276.15,
											276.15,
											278.15,
											284.15,
											279.15,
											281.15,
											280.15,
											277.15,
											277.15,
											276.15,
											280.15,
											280.15,
											285.15,
											278.15,
											278.15,
											281.15,
											268.15,
											283.15,
											286.15,
											290.15,
											292.15,
											281.15,
											285.15,
											283.15,
											281.15,
											280.15,
											282.15,
											283.15,
											282.15,
											285.15,
											287.15,
											295.15,
											297.15,
											287.15,
											-12047.85,
											-12047.85,
											282.15,
											287.15,
											288.15,
											-12047.85,
											280.15,
											283.15,
											281.15,
											281.15,
											280.15,
											287.15,
											291.15,
											295.15,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											-12047.85,
											289.15,
											294.15,
											296.15,
											288.15,
											289.15,
											293.15,
											292.15,
											288.15,
											283.15,
											291.15,
											292.15,
											298.15,
											293.15,
											292.15,
											295.15,
											296.15,
											284.15,
											288.15,
											298.15,
											294.15,
											296.15,
											293.15,
											297.15,
											287.15,
											294.15,
											299.15,
											300.15,
											304.15,
											306.15,
											305.15,
											302.15,
											305.15,
											305.15,
											303.15,
											291.15,
											291.15,
											299.15,
											298.15,
											300.15,
											304.15,
											301.15,
											297.15,
											302.15,
											291.15,
											295.15,
											300.15,
											301.15,
											303.15,
											301.15,
											302.15,
											301.15,
											301.15,
											300.15,
											295.15,
											295.15,
											301.15,
											304.15,
											300.15,
											302.15,
											303.15,
											301.15,
											301.15,
											304.15,
											302.15,
											292.15,
											298.15,
											301.15
										],
										"unitDimensions": "0 0 0 0 1 0 0",
										"defaultValue": "EmptyT"
									},
									{
										"name": "Rain_Fall",
										"displayUnit": "cm",
										"format": "%.1f",
										"nValues": [
											0.061,
											0.067,
											0.067,
											0.06799999999999998,
											0.092,
											0.097,
											0.097,
											0.097,
											0.097,
											0.097,
											0.097,
											0.097,
											0.106,
											0.116,
											0.12,
											0.121,
											-123.21,
											-123.21,
											0.147,
											0.149,
											0.15,
											0.16,
											0.168,
											0.168,
											0.186,
											0.193,
											0.197,
											0.197,
											0.197,
											0.197,
											0.197,
											0.197,
											0.198,
											0.202,
											0.202,
											0.202,
											0.202,
											0.204,
											-123.21,
											0.205,
											0.205,
											0.205,
											0.205,
											0.205,
											0.205,
											0.205,
											0.205,
											0.205,
											0.205,
											0.205,
											0.205,
											0.205,
											0.205,
											0.205,
											0.205,
											0.21,
											0.213,
											0.213,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.222,
											0.223,
											0.223,
											0.223,
											0.223,
											0.223,
											0.223,
											0.223,
											0.223,
											0.223,
											0.225,
											0.234,
											0.234,
											0.234,
											0.234,
											0.234,
											0.234,
											0.239,
											0.24,
											0.24,
											0.24,
											0.24,
											0.241,
											0.241,
											0.241,
											0.241,
											0.241,
											0.241,
											0.241,
											0.241,
											0.241,
											0.241,
											0.241,
											0.241,
											0.242,
											0.242,
											0.242,
											0.242,
											0.245,
											0.245,
											0.248,
											0.248,
											0.257,
											0.267,
											0.268,
											0.268,
											0.268,
											0.268,
											0.268,
											0.268,
											0.273,
											0.277,
											0.298,
											0.326,
											0.379,
											0.3820000000000001,
											0.386,
											0.378,
											0.378,
											0.393,
											0.396,
											0.396,
											0.4,
											0.4,
											0.4,
											0.4,
											0.4,
											0.4,
											0.4,
											0.4,
											0.407,
											0.4279999999999998,
											0.4279999999999998,
											0.4349999999999999,
											0.444,
											0.444,
											0.449,
											0.449,
											0.449,
											0.449,
											0.449,
											0.449,
											0.449,
											0.449,
											0.449,
											0.449,
											0.454,
											0.458,
											0.458,
											0.458,
											0.463,
											0.463,
											0.466,
											0.474,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											0,
											0.012,
											0.014,
											0.015,
											0.015,
											0.015,
											0.015,
											0.015,
											0.015,
											0.015,
											0.015,
											0.02,
											0.029,
											0.029,
											0.029,
											0.034,
											0.04099999999999999,
											0.04099999999999999,
											0.04099999999999999,
											0.04099999999999999,
											0.04099999999999999,
											0.04099999999999999,
											0.04099999999999999,
											0.04099999999999999,
											0.052,
											0.05400000000000003,
											0.05400000000000003,
											0.063,
											0.08900000000000002,
											0.09,
											0.099,
											0.099,
											0.099,
											0.099,
											0.099,
											0.099,
											0.099,
											0.119,
											0.12,
											0.121,
											0.124,
											0.125,
											0.125,
											0.125,
											0.125,
											0.125,
											0.125,
											-123.21,
											0.125,
											0.129,
											0.133,
											0.135,
											0.135,
											0.151,
											0.164,
											0.167,
											0.172,
											0.182,
											0.184,
											0.184,
											0.186,
											0.196,
											0.196,
											0.196,
											0.196,
											0.196,
											0.196,
											0.196,
											0.196,
											0.208,
											0.213,
											0.218,
											0.218,
											0.218,
											0.218,
											0.218,
											0.218,
											0.218,
											0.221,
											0.239,
											0.239,
											0.241,
											0.242,
											0.244,
											0.246,
											0.246,
											0.246,
											0.246,
											0.251,
											0.251,
											0.251,
											0.251,
											0.251,
											0.251,
											0.252,
											0.252,
											0.253,
											0.253,
											0.253,
											0.253,
											0.253,
											0.254,
											0.254,
											0.254,
											0.254,
											0.254,
											0.254,
											0.262,
											0.276,
											0.276,
											0.277,
											0.277,
											0.281,
											0.281,
											0.281,
											0.281,
											-123.21,
											-123.21,
											-123.21,
											0.297,
											0.297,
											0.297,
											0.297,
											0.297,
											0.297,
											0.297,
											0.297,
											0.297,
											0.299,
											0.337,
											0.345,
											0.345,
											0.345,
											0.345,
											0.355,
											0.369,
											0.381,
											-123.21,
											0.386,
											0.386,
											0.386,
											0.388,
											0.388,
											0.388,
											0.388,
											0.388,
											0.389,
											0.389,
											0.389,
											0.389,
											0.389,
											0.389,
											0.391,
											0.391,
											0.391,
											0.391,
											0.391,
											0.391,
											0.391,
											0.391,
											0.391,
											0.401,
											0.411,
											0.411,
											0.411,
											0.42,
											0.42,
											0.42,
											0.42,
											0.42,
											0.42,
											0.42,
											0.42,
											0.424,
											0.4389999999999999,
											0.441,
											0.455,
											0.46,
											-123.21,
											-123.21,
											0.46,
											0.46,
											0.46,
											0.47,
											0.47,
											0.47,
											0.47,
											0.47,
											0.47,
											0.47,
											0.48,
											0.48,
											0.48,
											0.48,
											0.48,
											0.48,
											0.48,
											0.48,
											0.48,
											0.48,
											0.48,
											0.481,
											0.485,
											0.4970000000000002,
											0.4970000000000002,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											0.004,
											0.004,
											0.004,
											0.004,
											0.004,
											0.004,
											0.004,
											0.004,
											0.006999999999999998,
											0.011,
											0.024,
											0.038,
											0.05599999999999998,
											0.05599999999999998,
											0.05599999999999998,
											0.058,
											0.08,
											0.08500000000000003,
											0.08699999999999998,
											0.098,
											0.098,
											0.098,
											0.098,
											0.098,
											0.105,
											0.112,
											0.112,
											0.112,
											0.112,
											0.112,
											0.112,
											0.112,
											0.112,
											0.112,
											0.112,
											0.112,
											0.112,
											0.112,
											0.112,
											0.112,
											0.112,
											0.117,
											0.117,
											0.117,
											0.119,
											0.119,
											0.119,
											0.119,
											0.119,
											0.119,
											0.119,
											0.122,
											0.123,
											0.124,
											0.127,
											0.132,
											0.132,
											0.149,
											0.172,
											0.172,
											0.172,
											0.172,
											0.172,
											0.172,
											0.172,
											0.172,
											0.172,
											0.172,
											0.172,
											-123.21,
											0.172,
											0.172,
											0.184,
											0.185,
											0.185,
											0.186,
											0.186,
											0.186,
											0.186,
											0.204,
											0.206,
											0.206,
											0.206,
											0.206,
											0.206,
											0.206,
											0.206,
											0.206,
											0.206,
											0.209,
											0.209,
											0.209,
											0.219,
											0.228,
											0.228,
											0.228,
											0.24,
											0.24,
											0.24,
											0.24,
											0.24,
											0.244,
											0.244,
											0.244,
											0.244,
											0.244,
											0.244,
											-123.21,
											0.25,
											0.26,
											0.269,
											0.272,
											0.272,
											0.275,
											0.275,
											0.275,
											0.275,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.277,
											0.282,
											0.29,
											0.29,
											0.29,
											0.29,
											0.29,
											0.29,
											0.29,
											0.29,
											0.29,
											0.29,
											0.292,
											0.292,
											0.295,
											0.295,
											0.295,
											0.295,
											0.295,
											0.295,
											0.295,
											0.295,
											0.295,
											0.295,
											0.295,
											0.295,
											0.295,
											0.305,
											0.305,
											0.305,
											0.305,
											0.307,
											-123.21,
											0.3110000000000001,
											0.3110000000000001,
											0.3110000000000001,
											0.3110000000000001,
											0.3110000000000001,
											0.3110000000000001,
											0.316,
											0.32,
											0.32,
											-123.21,
											-123.21,
											0.338,
											0.338,
											0.347,
											0.347,
											0.352,
											0.352,
											0.352,
											0.365,
											0.3729999999999999,
											0.374,
											0.374,
											0.394,
											0.404,
											0,
											0,
											0,
											0,
											0,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											0,
											0,
											0,
											0,
											0,
											0,
											0,
											-123.21,
											-123.21,
											0,
											0,
											0,
											0.001,
											0.001,
											0.001,
											0.002,
											0.002,
											0.006,
											0.006,
											0.006,
											0.013,
											0.025,
											0.03,
											0.03,
											0.031,
											0.038,
											0.045,
											0.05,
											0.051,
											0.051,
											0.051,
											0.051,
											0.052,
											0.052,
											0.052,
											0.052,
											0.052,
											0.052,
											0.052,
											0.052,
											0.052,
											0.05300000000000003,
											0.058,
											0.07200000000000004,
											0.073,
											0.073,
											0.073,
											0.073,
											0.073,
											0.073,
											0.07400000000000004,
											0.075,
											0.09,
											0.102,
											0.11,
											0.122,
											0.144,
											0.146,
											0.147,
											0.148,
											0.152,
											0.152,
											0.152,
											0.169,
											0.171,
											0.172,
											0.172,
											0.172,
											0.172,
											0.172,
											0.178,
											0.185,
											0.185,
											0.185,
											0.186,
											0.188,
											0.188,
											0.189,
											0.19,
											-123.21,
											-123.21,
											-123.21,
											0.191,
											0.191,
											0.191,
											0.191,
											0.197,
											0.197,
											0.209,
											0.213,
											0.213,
											0.213,
											0.213,
											0.213,
											0.216,
											0.219,
											0.233,
											0.233,
											0.233,
											0.233,
											0.233,
											0.233,
											0.235,
											0.235,
											-123.21,
											-123.21,
											0.247,
											0.247,
											0.247,
											0.247,
											0.247,
											0.247,
											0.247,
											0.247,
											0.248,
											0.25,
											0.251,
											0.255,
											0.255,
											0.255,
											0.257,
											0.26,
											0.267,
											0.271,
											0.271,
											0.271,
											0.271,
											0.278,
											0.278,
											0.278,
											-123.21,
											-123.21,
											0.278,
											0.278,
											0.278,
											0.278,
											0.278,
											0.28,
											0.28,
											0.28,
											0.315,
											0.315,
											0.32,
											0.324,
											0.331,
											0.331,
											0.344,
											0.354,
											0.354,
											0.4420000000000002,
											0.4420000000000002,
											0.448,
											0.449,
											0.45,
											0.4560000000000001,
											0.462,
											0.463,
											0.464,
											0,
											0,
											0,
											0.016,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											0.14,
											0.14,
											0.14,
											0.14,
											0.14,
											0.14,
											0.14,
											0.14,
											0.14,
											0.14,
											0.14,
											0.14,
											0.146,
											0.178,
											0.184,
											0.185,
											0.185,
											0.191,
											0.196,
											0.199,
											0.2,
											0.224,
											0.225,
											0.225,
											0.225,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											0.001,
											0.001,
											0.015,
											0.017,
											0.017,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											0.0014,
											0.0014,
											0.0014,
											0.0014,
											0.0166,
											0.0258,
											0.0258,
											0.0258,
											-123.21,
											-123.21,
											-123.21,
											0.0274,
											0.0326,
											0.034,
											0.07780000000000002,
											0.09019999999999999,
											0.09419999999999999,
											0.09419999999999999,
											0.09419999999999999,
											0.09419999999999999,
											0.0968,
											0.0984,
											0.0984,
											0.0984,
											0.0984,
											0.0984,
											0.1002,
											0.1012,
											0.1012,
											0.1014,
											0.1018,
											0.102,
											0.1098,
											0.1116,
											0.1136,
											0.1224,
											0.1228,
											0.1272,
											0.1324,
											0.1332,
											-123.21,
											-123.21,
											0.138,
											0.1416,
											0.1416,
											0.1416,
											0.1416,
											0.1416,
											-123.21,
											0.1478,
											0.1478,
											0.1478,
											0.1478,
											0.1478,
											0.1478,
											0.1478,
											0.1504,
											0.1508,
											0.1508,
											0.1508,
											0.1544,
											0.1582,
											0.16,
											0.167,
											0.167,
											0.1686,
											0.1688,
											0.1688,
											0.1832,
											0.1926,
											0.2032,
											0.2178,
											0.2178,
											0.2178,
											0.2378,
											0.242,
											0.2424,
											0.2424,
											0.2424,
											0.2424,
											0.2424,
											0.2424,
											0.2424,
											0.2424,
											0.2424,
											0.2462,
											0.2462,
											0.2462,
											0.2462,
											0.2462,
											0.2462,
											0.2464,
											0.2464,
											0.2464,
											0.2464,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2498,
											0.2644,
											0.2646,
											0.2656,
											0.2656,
											0.2656,
											0.2656,
											0.2656,
											0.2656,
											0.2656,
											0.2656,
											0.2656,
											0.2656,
											0.2656,
											0.2656,
											0.2656,
											0.2668,
											0.2668,
											0.2692000000000001,
											0.2696,
											0.2754,
											0.2754,
											0.2754,
											0.2754,
											0.2754,
											0.2754,
											0.2754,
											0.3088,
											0.3138,
											0.3139999999999999,
											0.3139999999999999,
											0.3139999999999999,
											0.3188,
											0.3206000000000001,
											0.3222,
											0.3234,
											0.3404,
											0.347,
											0.3562,
											0.3562,
											0.358,
											0.3848,
											0.4486,
											0.4514,
											0.4514,
											0.4514,
											-123.21,
											-123.21,
											0.4514,
											0.4514,
											0.4518,
											0.4586,
											0.4642000000000001,
											0.4798,
											0.4798,
											0.4798,
											0.4798,
											0.4798,
											0.4798,
											0.489,
											0.489,
											0.5078,
											0.5096000000000002,
											0.5096000000000002,
											0.5096000000000002,
											0.5096000000000002,
											0.5096000000000002,
											0.5096000000000002,
											0.5096000000000002,
											0.5096000000000002,
											0.5098,
											0.5098,
											0.5098,
											0.5122000000000002,
											0.5125999999999997,
											0.5125999999999997,
											0.5125999999999997,
											0.5125999999999997,
											0.5125999999999997,
											0.5125999999999997,
											0.5125999999999997,
											0.5125999999999997,
											0.5125999999999997,
											0.5226000000000001,
											0.6003999999999998,
											0.6476000000000002,
											0.6476000000000002,
											0.6476000000000002,
											0.6476000000000002,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.657,
											0.6659999999999998,
											0.6702000000000002,
											0.6702000000000002,
											0.6702000000000002,
											0.6702000000000002,
											0.6702000000000002,
											0.6702000000000002,
											0.6702000000000002,
											0.6704000000000003,
											0.672,
											0.672,
											0.6850000000000003,
											0.7034,
											0.7034,
											0.7058,
											0,
											0,
											0.0005,
											0.0092,
											0.009600000000000001,
											0.009600000000000001,
											0.009600000000000001,
											0.009600000000000001,
											0.0124,
											0.018,
											0.0184,
											0.0184,
											0.0184,
											0.0184,
											0.0184,
											0.0184,
											0.0184,
											0.0184,
											0.0184,
											0.0184,
											0.0184,
											0.0186,
											0.0186,
											0.0186,
											0.0186,
											0.0186,
											0.0186,
											0.0186,
											0.0186,
											0.0318,
											0.0408,
											0.0414,
											0.043,
											0.043,
											-123.21,
											-123.21,
											0.043,
											0.043,
											0.043,
											0.043,
											0.043,
											0.043,
											0.043,
											0.0432,
											0.0442,
											0.0442,
											0.0442,
											0.0442,
											0.0442,
											0.0442,
											0.0442,
											0.0442,
											0.0578,
											0.0614,
											0.0614,
											0.0614,
											0.0616,
											0.0616,
											0.0616,
											0.0616,
											0.0616,
											0.0616,
											0.0616,
											0.07459999999999997,
											0.077,
											0.094,
											0.094,
											0.094,
											0.1002,
											0.1022,
											0.1064,
											0.1148,
											0.1204,
											0.1304,
											0.1308,
											0.1636,
											0.1684,
											0.1684,
											0.17,
											0.1724,
											-123.21,
											0.1732,
											0.1742,
											0.1756,
											0.1838,
											0.1968,
											0.2182,
											0.2236,
											0.2368,
											0.2774,
											0.2854,
											0.3012,
											0.303,
											0.3168,
											0.3186,
											0.3270000000000001,
											0.3334,
											0.3344,
											0.335,
											0.3352000000000002,
											0.3352000000000002,
											0.3352000000000002,
											0.3372,
											0.3392000000000002,
											0.3392000000000002,
											0.3398,
											0.3406,
											0.359,
											0.3594,
											0.3604,
											0.3732,
											0.3842,
											0.3842,
											0.3842,
											0.3944,
											0.401,
											-123.21,
											-123.21,
											0.4362,
											0.4362,
											0.444,
											-123.21,
											0.4762,
											0.4766,
											0.4952,
											0.5025999999999998,
											0.505,
											0.505,
											0.505,
											0.505,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											-123.21,
											0.6315999999999998,
											0.6315999999999998,
											0.6337999999999998,
											0.6424,
											0.6424,
											0.6426000000000002,
											0.6596000000000002,
											0.6776000000000002,
											0.6842,
											0.6851999999999997,
											0.6851999999999997,
											0.6851999999999997,
											0.6879999999999998,
											0.6981999999999997,
											0.701,
											0.7026000000000001,
											0.7996000000000002,
											0.7996000000000002,
											0.8002,
											0.8002,
											0.8023999999999998,
											0.8054000000000003,
											0.8214,
											0.8268000000000004,
											0.8268000000000004,
											0.8268000000000004,
											0.8268000000000004,
											0.8273999999999997,
											0.8273999999999997,
											0.8273999999999997,
											0.8273999999999997,
											0.8273999999999997,
											0.8273999999999997,
											0.8480000000000004,
											0.8538,
											0.865,
											0.865,
											0.8682000000000004,
											0.8684000000000003,
											0.8690000000000003,
											0.8752000000000004,
											0.8752000000000004,
											0.8804000000000004,
											0.8804000000000004,
											0.8804000000000004,
											0.8804000000000004,
											0.8804000000000004,
											0.8804000000000004,
											0.8804000000000004,
											0.8804000000000004,
											0.8806,
											0.8806,
											0.8806,
											0.8664000000000003,
											0.8664000000000003,
											0.8664000000000003,
											0.8664000000000003,
											0.8664000000000003,
											0.8664000000000003,
											0.8664000000000003,
											0.8664000000000003,
											0.8664000000000003,
											0.8664000000000003,
											0.8668000000000002,
											0.8668000000000002,
											0.8668000000000002,
											0.8668000000000002
										],
										"unitDimensions": "1 0 0 0 0 0 0",
										"defaultValue": "Records[ records.nrows, \"Rain_Fall\"] "
									}
								]
							},
							{
								"name": "EmptyT",
								"Notes": "An arbitrary value that would never occur naturally in the data set and is used to designate no data is available for that cell.\n\nThe result of this expression is used in temperature fields, so it is defined with a unit.\n",
								"DiagramX": -50,
								"DiagramY": -30,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "-12321 degC"
								}
							},
							{
								"name": "BothTYM",
								"Notes": "Convert the time into a date value and divide by 100 and take the integer to get just the year and month numbers.",
								"DiagramX": -55,
								"DiagramY": 95,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "{int {date bothT.date} / 100}"
								}
							},
							{
								"name": "MonthTotals",
								"Notes": "{groupsum MonthRecords \"Date\"}\n\nUsing the groupsum function on the MonthRecords table value and grouping on the \"Date\" column, which now just contains month numbers, allows us to calculate the sum of the recorded minimum and maximum temperatures for each month of record keeping.\n\nThe count column tells us how many values were summed, which we will use in the MonthAverages expression to calculate, well, the month averages.\n\nThe actual values displayed in this expression aren't very useful to human eyes as they are actually the sum of the temperatures in degrees Kelvin and then the sum is displayed in degrees C.  Nonetheless Math Minion is keeping track of the units and all will work out in the MonthAverages expression.",
								"DiagramX": 45,
								"DiagramY": 125,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "{groupsum MonthRecords \"Date\"}"
								},
								"tableUnits": {}
							},
							{
								"name": "BothTMonth",
								"Notes": "Use the divide, int, multiply trick to strip off the months and then subtract that from the original to end up with just the month number.\n",
								"DiagramX": -55,
								"DiagramY": 125,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "BothTYM -\n{int BothTYM / 100} * 100\n"
								}
							},
							{
								"name": "SortedMonths",
								"Notes": "Our records did not start in January, so the sort function will be used to sort the month by month number.",
								"DiagramX": 135,
								"DiagramY": 50,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{sort monthtotals}"
								}
							},
							{
								"name": "MinT",
								"Notes": "This expression uses the select function to select just the minimum temperatures that are not \"empty\" along with their associated dates.  The formula is:\n\n{select Records[ 0,\n\t{concat \"Date\", \"MinT\"} ],\n\t{ne Records.MinT, EmptyT}\n}\n\nThe first argument to the select function is:\n\nRecords[ 0, {concat \"Date\", \"MinT\"} ]\n\nwhich simply uses the index operator [ ] to get all the rows of the Date and MinT columns.\n\nThe second argument:\n\n{ne Records.MinT, EmptyT}\n\nuses the not equal function to create a column array that has 1 (true) values in all the rows where the minimum temperature is not \"empty\".\n",
								"DiagramX": 45,
								"DiagramY": -70,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "{select Records[\n\t\t0, {concat \"Date\", \"MinT\"}\n\t], \n\t{ne Records.MinT, EmptyT}\n}"
								},
								"tableUnits": {}
							},
							{
								"name": "MaxT",
								"Notes": "Same as the MinT expression, except for maximum temperatures.\n",
								"DiagramX": 45,
								"DiagramY": -35,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{select Records[\n\t0,\n\t{concat \"Date\", \"MaxT\"}\n\t],\n\t{ne Records.MaxT, EmptyT}\n}"
								}
							},
							{
								"name": "RainFall",
								"Notes": "Similar to the MinT expression except for rain fall and the use of a string selector to select the valid rows.",
								"DiagramX": 45,
								"DiagramY": 35,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{select\n\tRecords[\n\t\t0, \n\t\t{concat \"Date\", \"Rain_Fall\"}\n\t],\n\t\"Rain_Fall >= 0 cm\"\n}"
								},
								"tableUnits": {}
							},
							{
								"name": "BothT",
								"Notes": "Again similar to the MinT expression, but in this case we are only selecting rows where both the minimum and maximum temperatures are known and we are creating a table with both of those values, plus the date.",
								"DiagramX": -55,
								"DiagramY": 60,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "{select Records,[\n\t\t0, {cc \"Date\", \"MinT\",\"MaxT\"}\n\t],\n\t{and\n\t\t{ne Records.MinT, EmptyT},\n\t\t{ne Records.MaxT, EmptyT}\n\t}\n}"
								}
							},
							{
								"name": "TempPlot",
								"Notes": "Plots both the MinT vs Date and MaxT vs Date values on the same graph.\n\nThe minimum and maximums are set for the MinT curve and since nothing is set for the MaxT one, the same values are used.",
								"DiagramX": 135,
								"DiagramY": -70,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Graph",
								"X1": {
									"v": "MinT.Date",
									"vmin": "20070501 date",
									"vmax": "{max records.date}",
									"unit": "date",
									"Y1": {
										"v": "MinT.MinT 'MinT",
										"vmin": "-40 degC",
										"vmax": "40 degC",
										"lineType": 0
									}
								},
								"X2": {
									"v": "MaxT.Date",
									"vmin": "",
									"vmax": "",
									"unit": "date",
									"Y1": {
										"v": "MaxT.MaxT 'MaxT",
										"vmin": "",
										"vmax": "",
										"lineType": 0
									}
								}
							},
							{
								"name": "PrecipPlot",
								"Notes": "Plots rain fall versus Date\n",
								"DiagramX": 135,
								"DiagramY": 15,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Graph",
								"X1": {
									"v": "RainFall.Date 'Date",
									"vmin": "20070501 date",
									"vmax": "{max records.date}",
									"unit": "date",
									"Y1": {
										"v": "RainFall.Rain_Fall 'Rain Fall",
										"vmin": "",
										"vmax": "",
										"unit": "cm",
										"lineType": 0
									}
								}
							},
							{
								"name": "DeltaTPlot",
								"Notes": "Plots the daily difference between the maximum and minimum temperatures versus date.\n\nNote the selection of deltaC as the temperature unit.  A difference of 2 deltaC is essentially 2 K, which would be displayed in degC as -271.15.",
								"DiagramX": 45,
								"DiagramY": 90,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Graph",
								"X1": {
									"v": "BothT.Date 'Date",
									"vmin": "20060701 date",
									"vmax": "20140629 date",
									"unit": "date",
									"Y1": {
										"v": "BothT.maxt - BothT.minT 'DeltaT",
										"vmin": "",
										"vmax": "",
										"unit": "deltaC",
										"lineType": 0
									}
								}
							},
							{
								"name": "MonthRecords",
								"Notes": "This formula:\n\n{append\n\t{table BothT,\n\t\tBothTMonth,\n\t\tbotht[ 0, 2:{ncols botht}]\n\t},\n\t{table \"count\", 1:{nrows botht} * 0 + 1}\n}\n\nfirst creates a new table value from BothT, where the Date values are replaced with the month numbers from BothTMonth.\n\nThis is done so we can sum the totals by month using the groupsum function in the MonthTotals expression.\n\nIn addition, a column with all 1 values is appended to allow us to count the number of entries in each group.\n",
								"DiagramX": -55,
								"DiagramY": 155,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "{append\n\t{table BothT,\n\t\tBothTMonth,\n\t\tbotht[ 0, 2:{ncols botht}]\n\t},\n\t{table \"count\", 1:{nrows botht} * 0 + 1}\n}"
								}
							},
							{
								"name": "MonthAverages",
								"Notes": "{table {cc \"Months\", \"MinT\", \"MaxT\"},\n\t {cc \"January\", \"February\", \"March\", \"April\",\n\t\t\"May\",  \"June\", \"July\", \"August\",\n\t\t\"September\", \"October\",\n\t\t\"November\", \"December\"\n\t},\n\tSortedMonths[0,2:3] / SortedMonths[0,4]\n}\n\nThe second and third columns of the SortedMonths table value are extracted and divided by the fourth column.\n\nThe result is the average minimum and maximum temperature of each month of the year during the record keeping period.\n\nThese are then used in a table function, along with a list of month names to make things a little prettier.",
								"DiagramX": 135,
								"DiagramY": 105,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "{table {cc \"Months\", \"MinT\", \"MaxT\"},\n\t {cc \"January\", \"February\", \"March\", \"April\",\n\t\t\"May\",  \"June\", \"July\", \"August\",\n\t\t\"September\", \"October\",\n\t\t\"November\", \"December\"\n\t},\n\tSortedMonths[0,2:3] / SortedMonths[0,4]\n}"
								}
							},
							{
								"name": "DataTables",
								"Notes": "DataTables overview",
								"DiagramX": -50,
								"DiagramY": -70,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Data Tables</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tData tables are unlike other Math Minion tools in that they contain static data as compared to the dynamic formulas that other tools use.\n\t\t</p>\n\t\t<p>\n\t\t\tWhile formulas can be used to input values, the formulas are immediately evaluated and discarded, with only the result being retained.\n\t\t</p>\n\t\t<p>\n\t\t\tThis makes data tables ideal for storing the kind of information that is often stored in spreadsheet or database tables.\n\t\t</p>\n\t\t<p>\n\t\t\tThe analogy is stronger with the latter as spreadsheets mix their data and calculations in the same cells, whereas databases and Math Minion store static data in their tables and use external, and hence visible, operations to slice and dice this data into other table value representations, without altering the source data.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
								}
							}
						]
					},
					{
						"name": "Optimizer",
						"Notes": "",
						"DiagramX": 120,
						"DiagramY": 60,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "overview",
						"Objects": [
							{
								"name": "Rosenbrock",
								"Notes": "The Rosenbrock function is a classic performance test problem for optimizers.  The global minimum is inside a flat bottomed, long, narrow and curved valley.\n\nThe function is: \n\nf(x,y) = (1 - x)^2 + 100(y - x^2)^2\n\nAnd has a global minimum at (1,1).\n\nNote that the optimizer runs automatically if it's inputs are changed and the Optimize switch is on.\n\n Uncheck the box after the optimization is complete if you wish to prevent this.\n\nThe reset button will return the output values to their initial value of 0 and turn off the optimize switch.  Turn it on again when you want the optimizer to run.\n",
								"DiagramX": -135,
								"DiagramY": -145,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Optimizer",
								"optFormula": {
									"Formula": "( 1.0 - $.1 ) ^ 2.0 + 100.0 * ($.2 - $.1*$.1)^2.0"
								},
								"countFormula": {
									"Formula": "2"
								},
								"outputs": [
									0.9999999999999118,
									0.9999999999998105
								],
								"Enabled": true,
								"Optimized": true
							},
							{
								"name": "LeastSqr",
								"Notes": "An optimizer is used to fit a parabola to a set of semi random points.\n\nThe points are generated by adding random numbers to the a and b parameters of an equation:\n\ny = x^A + b\n\nwhere a is 2 and b is 50 in this example.",
								"DiagramX": -65,
								"DiagramY": -145,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "randCurve",
										"Notes": "By adding random numbers to the parameters defining a parabola, we create a set of points which approximate the curve, but with significant errors.",
										"DiagramX": 40,
										"DiagramY": -35,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "x^(2  + rand1) + (50 + rand2)"
										}
									},
									{
										"name": "error",
										"Notes": "The squares of the differences between the randomized points and the points generated using the optimizer outputs as the parameters of the parabola.\n",
										"DiagramX": 130,
										"DiagramY": -35,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(line - randCurve)^2"
										}
									},
									{
										"name": "actual",
										"Notes": "The curve we want to fit.  The \"randCurve\" expression will produce points approximating this curve by adding random numbers to the two parameters.",
										"DiagramX": 40,
										"DiagramY": 130,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "x^2 + 50"
										}
									},
									{
										"name": "line",
										"Notes": "The y values generated for a parabola whose parameters are the outputs from the optimizer.",
										"DiagramX": 130,
										"DiagramY": 85,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "x^lstsqr.1 + lstsqr.2 "
										}
									},
									{
										"name": "graph",
										"Notes": "The randomized points, the actual line the points were randomized from and the line whose parameters were optimized to produce the least errors versus the points are all plotted.",
										"DiagramX": 130,
										"DiagramY": 135,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Graph",
										"X1": {
											"v": "x",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "randCurve'Points",
												"vmin": "0",
												"vmax": "500",
												"lineType": 1
											},
											"Y2": {
												"v": "line'Optimized",
												"vmin": "0",
												"vmax": "500",
												"lineType": 0
											},
											"Y3": {
												"v": "actual'Actual",
												"vmin": "0",
												"vmax": "500",
												"lineType": 0
											}
										}
									},
									{
										"name": "rand2",
										"Notes": "A second set of random numbers used to generate the points to fit.",
										"DiagramX": -65,
										"DiagramY": 105,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "randomness * ({rand n} - .5) * 4 * x"
										}
									},
									{
										"name": "n",
										"Notes": "The number of points to generate.",
										"DiagramX": 40,
										"DiagramY": 40,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "20"
										}
									},
									{
										"name": "lstsqr",
										"Notes": "We want to minimized the sum of the square of the errors, so that the outputs of this optimizer are a good fit as parameters of a parabola.\n",
										"DiagramX": 130,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Optimizer",
										"optFormula": {
											"Formula": "{sum error}"
										},
										"countFormula": {
											"Formula": "2"
										},
										"outputs": [
											1.9992236655245097,
											53.76447131440057
										],
										"Enabled": true,
										"Optimized": true
									},
									{
										"name": "rand1",
										"Notes": "One of two arrays of random numbers that will be used to generate points approximating a parabola.\n\nNote that if the rand function has a parameter, it is taken as the number of random points to generate.",
										"DiagramX": -65,
										"DiagramY": 20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "randomness * ({rand n} - .5)  / 10"
										}
									},
									{
										"name": "x",
										"Notes": "A range of x values to be used in other expressions.",
										"DiagramX": 40,
										"DiagramY": 80,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1:n"
										}
									},
									{
										"name": "ErrorActual",
										"Notes": "Calculate the errors for the random points versus the actual line",
										"DiagramX": -65,
										"DiagramY": 150,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{sum (actual - randCurve)^2}"
										}
									},
									{
										"name": "randomness",
										"Notes": "Changes the amount of randomness.\n\nSet to 0 and the solution should be exactly 2 and 50.\n",
										"DiagramX": -65,
										"DiagramY": -35,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1"
										}
									}
								]
							},
							{
								"name": "Overview",
								"Notes": "",
								"DiagramX": -100,
								"DiagramY": -170,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tLike the solver tool, the optimizer manipulates one or more output values to achieve a desired result.  \n\t\t</p>\n\t\t<p>\n\t\t\tFor the optimizer this is to obtain the smallest value possible for a single function that incorporates the solver outputs.\n\t\t</p>\n\t\t<p>\n\t\t\tThe Powell method is used.\n\t\t</p>\n\t\t<p>\n\t\t\tThis model contains two examples:\n\t\t</p>\n\t\t<ul>\t\n\t\t\t<li>Rosenbrock - a classic optimization example.</li>\t\t\t\n\t\t\t<li>LeastSqr - uses the optimizer to fit a curve to a set of data points.</li>\n\t\t</ul>\n\t\t</div>\n\t</body>\n</html>"
								}
							}
						]
					},
					{
						"name": "Matrices",
						"Notes": "",
						"DiagramX": 45,
						"DiagramY": 40,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "Multiply",
								"Notes": "Additional examples of multiplying matrices.",
								"DiagramX": 50,
								"DiagramY": 25,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "cDotC",
										"Notes": "By taking the transpose of the column array, we can use the dot function to matrix multiply it by it's untransposed self.  The result is a scalar.",
										"DiagramX": 20,
										"DiagramY": 65,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{dot {tr col}, col}"
										}
									},
									{
										"name": "col2",
										"Notes": "A column array with elements 2 and 3",
										"DiagramX": 20,
										"DiagramY": 120,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "2:3"
										}
									},
									{
										"name": "rxc",
										"Notes": "As multiplication is commutative, reversing the order and multiplying the row array by the column array results in the same 8x4 result.",
										"DiagramX": 20,
										"DiagramY": -20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "row*col"
										}
									},
									{
										"name": "row",
										"Notes": "A row array of length 4 generated by using the transpose function on a column array.",
										"DiagramX": -70,
										"DiagramY": -10,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{tr 11:14}"
										}
									},
									{
										"name": "row2X",
										"Notes": "An example of multiplying a matrix by a row matrix that has fewer columns.",
										"DiagramX": 115,
										"DiagramY": -10,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{transpose col2}*rxc"
										}
									},
									{
										"name": "dot",
										"Notes": "The dot function does matrix multiplication of the two arguments.\n\nThe nontechnical Wikipedia definition of a matrix multiplication result is \"a matrix whose elements are found by multiplying the elements of the same row from the first matrix times the associated elements of the same column from the second matrix and summing\".\n\nIn this case matrix multiplying the column array times the row array results in the same 8x4 matrix as the normal multiplication yielded.  This is because the number of columns in the first argument and rows in the second argument are 1, so the summation takes place over a single cell.\n\nMatrix multiplication is not commutative and in this case a matrix multiplication of the row array by the column array would be illegal since the number of columns of the first must equal the number of rows of the second.\n\nSee the mmult expression for an example of using the dot function on actual matrices.",
										"DiagramX": 20,
										"DiagramY": 35,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{dot col, row}"
										}
									},
									{
										"name": "cxr",
										"Notes": "Multiplying the 8 row column array by the 4 column row array results in an 8x4 matrix.",
										"DiagramX": 20,
										"DiagramY": -60,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "col*row"
										}
									},
									{
										"name": "col",
										"Notes": "A column matrix of length 8 generated with the range operator.",
										"DiagramX": -70,
										"DiagramY": -60,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1:8"
										}
									},
									{
										"name": "col2X",
										"Notes": "An example of multiplying a matrix by a column matrix that has fewer rows.",
										"DiagramX": 115,
										"DiagramY": -60,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "col2*rxc"
										}
									},
									{
										"name": "B",
										"Notes": "A 3x2 matrix with all cells defined as constants.  The unit for these values is defined as meters.",
										"DiagramX": 115,
										"DiagramY": 100,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"unit": "m",
										"CellInputs": {
											"0_0": "0 m",
											"3_2": "5 m",
											"2_1": "9 m",
											"3_1": "8 m",
											"1_2": "25 m",
											"2_2": "10 m",
											"1_1": "12 m"
										},
										"rowCount": "3",
										"columnCount": "2"
									},
									{
										"name": "A",
										"Notes": "A 4x3 matrix with all cells defined as constants.  The unit for these values is defined as newtons.",
										"DiagramX": 115,
										"DiagramY": 40,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"unit": "N",
										"CellInputs": {
											"0_0": "0 N",
											"2_1": "2 N",
											"3_3": "7 N",
											"1_2": "9 N",
											"3_1": "0 N",
											"4_3": "3 N",
											"2_2": "11 N",
											"1_3": "3 N",
											"4_1": "5 N",
											"3_2": "12 N",
											"1_1": "14 N",
											"2_3": "15 N",
											"4_2": "2 N"
										},
										"rowCount": "4",
										"columnCount": "3"
									},
									{
										"name": "mmult",
										"Notes": "The dot function is used to matrix multiply a 4x3 matrix by a 3x2 matrix, yielding a 4x2 result.\n\nUnits are honoured in matrix multiplication as with other multiplications.\n\nIn this case multiplying a newton by a meter results in a joule, but the SI unit set uses kilojoules as the default output, so the numbers are smaller by a factor of a 1000 than if units hadn't been used.\n\nOf course you can set the display unit to a different energy unit if you wish.",
										"DiagramX": 200,
										"DiagramY": -60,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{dot A, B}"
										},
										"isOutput": "y"
									}
								]
							},
							{
								"name": "Example",
								"Notes": "Cell function example",
								"DiagramX": 50,
								"DiagramY": 80,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "overview",
								"Objects": [
									{
										"name": "interest",
										"Notes": "A constant for the Savings calculation.",
										"DiagramX": 20,
										"DiagramY": 50,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "10 %"
										}
									},
									{
										"name": "initial",
										"Notes": "The initial amount of savings\n",
										"DiagramX": 20,
										"DiagramY": 90,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1000"
										}
									},
									{
										"name": "futureV",
										"Notes": "One can accomplish the same thing with a single formula, if you aren't trying to demonstrate matrix behaviour. :-)",
										"DiagramX": 20,
										"DiagramY": 130,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "initial *\n(1 + interest/12)^(1:(20*12))"
										}
									},
									{
										"name": "savings",
										"Notes": "Assuming an initial value and an interest compounded monthly, the ever growing monthly savings can be calculated by:\n\n{cell -1,0} * ( 1 + interest / 12)\n\nThe initial amount for the end of the first month is entered into cell 1,1 and this formula is used for the rest of the column 1 cells.\n\nAssuming the interest is an annual interest, it is divided by 12, added to 1 and the result used to multiply last months value from the cell above.\n\nThe number of rows is set to be 20 * 12 to provide 20 years of month by month calculations.",
										"DiagramX": 100,
										"DiagramY": 20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "0",
											"0_1": "{cell -1,0} * ( 1 + interest / 12)",
											"1_1": "initial * (1 + interest/12)"
										},
										"rowCount": "20 * 12",
										"columnCount": "1"
									},
									{
										"name": "yearlySavings",
										"Notes": "Rather than looking at every month, perhaps we are only interested in yearly values.\n\nHere I use a index array to extract the 12th, 24th, 36th etc. values.  The range operator produces an array 1,2,3..20, which is multiplied by twelve to produce an array 12,24,36...240.  These values are then used as the indices into the savings array.",
										"DiagramX": 185,
										"DiagramY": 20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "savings[1:20*12]"
										}
									},
									{
										"name": "Overview",
										"Notes": "",
										"DiagramX": 20,
										"DiagramY": 20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThe cell function was discussed in the notes for the Matrix tool, but how it might be useful may not have been obvious in that contrived example.\n\t\t</p>\n\t\t<p>\n\t\t\tIt actually comes up quite frequently so here is another contrived and very simple example of its use.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										}
									}
								]
							},
							{
								"name": "Inversion",
								"DiagramX": 50,
								"DiagramY": 60,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Random",
										"Notes": "This is a 50x50 matrix filled with random numbers for use with the invert function.\n\nInverting a matrix of random numbers has a very high likelihood of succeeding.  The numbers are random though, so there is a small possibility that a singular or otherwise evil matrix might be generated resulting in the inversion failing.\n\nIn that case just tap on the equals sign in front of the formula field for the origin cell. This will cause the formula to be reevaluated.",
										"DiagramX": 45,
										"DiagramY": 15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "{rand} "
										},
										"rowCount": "50",
										"columnCount": "50"
									},
									{
										"name": "Invert",
										"Notes": "The invert function is used to invert the Random matrix.  See the notes on the Random matrix if this should fail.",
										"DiagramX": 125,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{invert random}"
										}
									},
									{
										"name": "matmult",
										"Notes": "Matrix multiplying a matrix by its inverse should result in the identity matrix, as demonstrated here.\n\nThe off diagonal values won't be identically zero, but as an engineer, I will call it close enough. :-)",
										"DiagramX": 210,
										"DiagramY": 15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{dot random, invert}"
										}
									}
								]
							},
							{
								"name": "Operations_2",
								"DiagramX": 50,
								"DiagramY": 5,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "m2x8",
										"Notes": "A matrix used to illustrate how binary arithmetic operators work with matrices.",
										"DiagramX": 130,
										"DiagramY": 10,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "{row} + {col}/10"
										},
										"rowCount": "2",
										"columnCount": "8"
									},
									{
										"name": "m4x3",
										"Notes": "A second matrix for illustrating binary arithmetic operators.",
										"DiagramX": 130,
										"DiagramY": 60,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "{row}*10 + {col}/100"
										},
										"rowCount": "4",
										"columnCount": "3"
									},
									{
										"name": "s4x8",
										"Notes": "Here a 2x8 matrix is added to a 4x3 matrix to illustrate how binary operators work with matrices.\n\nNormally you will be performing such operations on matrices that conform in size, but Math Minion does permit operations on mismatched matrices such as these.\n\nThe result will always have a number of rows equal to the larger of the two operands.  Similarly the number of result columns will be the larger of the two.\n\nEach result cell is calculated by performing the arithmetic operation on the cells of the operands with indices corresponding to that of the result cell.\n\nIf either of these indices would be too large for the operand, the modulus of its value with respect to the maximum size is used.\n",
										"DiagramX": 220,
										"DiagramY": 10,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "m2x8+m4x3"
										}
									},
									{
										"name": "concat",
										"Notes": "The concat, usually abbreviated as cc, function creates a new array by concatenating the values of all of its arguments.  Matrix arguments will be unwound row by row.  The redim function can be used to redimension the resulting array if desired.",
										"DiagramX": 125,
										"DiagramY": 110,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc m2x8, m4x3, s4x8}"
										}
									},
									{
										"name": "redim",
										"Notes": "The redim function can be used to redimension a value.  This does not change how many elements the object has, or even the order in which they are stored' but rather changes how they are arranged in rows and columns.\n\nThe function takes two arguments.  The first is the value to be copied and the second is the number of columns the result is to have.  The number of columns must divide evenly into the total number of elements in the source value.\n\nMatrices in Math Minion are stored row by row, so that if you were to use this function to change a matrix into a column array with only one column, then the top values would be those from the first row, with the values from the second row, following and so forth.",
										"DiagramX": 45,
										"DiagramY": 10,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{redim concat 4}"
										}
									},
									{
										"name": "s4x8_Continued",
										"Notes": "In effect this means the smaller operands values are reused in order as needed.\n\nThe effect is easy to examine in this example as the calculation results in values where the inner two digits represent the row and column of the 2x8 operand, while the outer digits represent the row and column of the 4x3 operand.\n\nBe sure and see the notes in Multiply in the parent model for more examples of operations on matrices, including matrix multiplication with the dot function.\n\nNot that the concat function can be abbreviated as just cc.\n",
										"DiagramX": 305,
										"DiagramY": 10,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {}
									}
								]
							},
							{
								"name": "Matrix_Tool",
								"DiagramX": 50,
								"DiagramY": -55,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Matrix",
										"Notes": "A matrix tool allows a detailed specification of a matrix at the cell, column and row levels.\n\nThe number of rows and columns is specified in the fields below the tool name field.\n\nWhile often constants, these fields are in fact formula fields and their values can be calculated from external values.\n\nIn this case we have a matrix with 5 rows and 4 columns.\n\nFor this matrix four different formulas are used to define the content of the matrix.\n\nCells with formulas have an orange background unless they are the selected cell, in which case the background is green.\n\nIf there is a formula for the selected cell, it appears in the formula field below the rows and columns fields.",
										"DiagramX": 10,
										"DiagramY": -190,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "{row} + {col} / 10",
											"0_2": "{cell -1, 0} + {row}",
											"1_2": "1",
											"3_0": "100 * {col}^2"
										},
										"rowCount": "5",
										"columnCount": "4"
									},
									{
										"name": "Notes2",
										"Notes": "The formula for cell 1,2 is simply 1.\n\nThe label cell for row 3 has the formula:\n\n100 * {col}^2\n\nBecause this formula is defined for the label cell, it will be used for each cell in the row that does not have it's own formula (a constant is just a type of formula).\n\nThe function {col} is only valid when called by a formula in a matrix cell and returns the column number for the cell that is evaluating the formula.  Thus this formula causes the cell's column number to be squared and multiplied by 100, resulting in values of 100, 400, 900 and 1600 in the cells of the row.\n\nThe label cell for column 2 has the formula:\n\n{cell -1, 0} + {row}",
										"DiagramX": 90,
										"DiagramY": -190,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {}
									},
									{
										"name": "Notes3",
										"Notes": "The function \"cell\" can also only be called by a cell formula.  It returns the value of the cell in the same matrix whose index is computed by adding the first parameter to the calling cell's row number and the second parameter to the calling cell's column number.  The result here is the value of the cell immediately above it in the same column.\n\nBecause cell 1,2 has a value already defined as 1, this formula is not used for it, however for cell 2,2 it will be used and the cell function will evaluate to 1, the value of cell 1,2.  The {row} function is analogous to the {col} function and returns the evaluating cell's row number, which in this case is 2.  Thus the value for cell 2,2 will be 1 + 2 = 3.\n\nCell 3,2 already has a value determined by the row formula to be 400 and row formulas have precedence over column formulas.\n\n",
										"DiagramX": 180,
										"DiagramY": -190,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {}
									},
									{
										"name": "Notes4",
										"Notes": "The column equation is again used for  cell 4,2, where it adds it's row number, 4, to value of the cell above to get 404.  A similar calculation for cell 5,2 yields 409.\n\nFinally there is a formula specified for the origin cell at the top left that is unlabelled:\n\n{row} + {col} / 10\n\nThis formula has the lowest priority and is used for all the cells that have no cell, row or column formula to use.  In this case it creates a value which is the cell's row number plus it's column number divided by 10.  Thus cell 1,1 has a value of 1.1.",
										"DiagramX": 260,
										"DiagramY": -190,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {}
									},
									{
										"name": "Notes5",
										"Notes": "Some other points worth noting:\n\nAll values in a matrix must have the same unit type, although constant formulas can have differing units as long as they are all of the same type.\n\n If a unit is set using the info button beside the unit type, then all constant values that don't have an explicit unit will be assumed to use that unit.  It is a good idea to set the unit type of a matrix before entering any cell formulas.\n\nTapping in any cell selects it, moves its formula to the formula field and opens the formula editor for it.",
										"DiagramX": 340,
										"DiagramY": -190,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {}
									}
								]
							},
							{
								"name": "Operations_1",
								"DiagramX": 50,
								"DiagramY": -15,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Indices",
										"Notes": "This is a column matrix with some values for use with the Subsets expression.",
										"DiagramX": 235,
										"DiagramY": -255,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "0",
											"2_1": "4",
											"3_1": "5",
											"1_1": "1"
										},
										"rowCount": "3",
										"columnCount": "1"
									},
									{
										"name": "Matrix",
										"Notes": "A matrix object.",
										"DiagramX": 140,
										"DiagramY": -110,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "{row} + {col} / 10",
											"0_2": "{cell -1, 0} + {row}",
											"1_2": "1",
											"3_0": "100 * {col}^2"
										},
										"rowCount": "5",
										"columnCount": "4"
									},
									{
										"name": "Transpose",
										"Notes": "The transpose function rotates a matrix so that its rows become columns and it columns become rows.  Thus the 5x4 Matrix value becomes a 4x5 matrix.",
										"DiagramX": 50,
										"DiagramY": -115,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{transpose matrix}"
										}
									},
									{
										"name": "Cell",
										"Notes": "A cell of a matrix can be referenced by following the matrix name by the comma separated row and column numbers in square brackets:\n\nmatrix[4,2]",
										"DiagramX": 55,
										"DiagramY": -255,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "matrix[4,2]"
										}
									},
									{
										"name": "Row",
										"Notes": "If only a single index is given inside the square brackets, it is assumed to be a row number and returns the entire row.  Thus for a column array, a[3] would be equivalent to a[3,1].",
										"DiagramX": 150,
										"DiagramY": -255,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "matrix[4]"
										}
									},
									{
										"name": "Subsets",
										"Notes": "The row and column values inside the square bracket index operator don't have to be scalars.\n\nIn this case the array from the Indices object is used for the row value, while the range operator 2:3 is used for the columns.  The result is a 3x2 subset of Matrix.\n\nWhile all the values in indices must be valid for the matrix being referenced, they do not have to be contiguous or in a specific order.\n\nIf the index is a matrix rather than an array, it will be unwound row by row to produce the index array.",
										"DiagramX": 235,
										"DiagramY": -205,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "matrix[ indices, 2:3]"
										}
									},
									{
										"name": "Upper",
										"Notes": "An \"if\" function is used to extract the diagonal and upper triangle of the Matrix matrix, while setting the lower triangle values to 1.\n",
										"DiagramX": 50,
										"DiagramY": -180,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "{if {gt {row}, {col}},\n  1,\n  matrix[ {row}, {col} ]\n}\n' select 1 if row number is greater than column number, otherwise the corresponding value from the matrix object is used.\n\nNote the use of the single quote to append a comment to the end of a formula.\n"
										},
										"rowCount": "{nrows matrix}",
										"columnCount": "{ncols matrix}"
									},
									{
										"name": "Column",
										"Notes": "If the row index is 0, then all rows are selected.\n\nThus matrix[0,2] will result in a column array consisting of the 2nd column of matrix.",
										"DiagramX": 145,
										"DiagramY": -180,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "matrix[0,2]"
										}
									}
								]
							},
							{
								"name": "Matrices",
								"Notes": "While the result of every calculation in Math Minion is a matrix, even if it is often just a 1x1 matrix, there is also a specific matrix tool that can be added to the diagram.\n\nThis tool allows for a detailed specification of a matrix.\n\nIndependent formulas can be supplied for each row, column or cell and these formulas are allowed to reference other cells in the matrix.\n",
								"DiagramX": -25,
								"DiagramY": -55,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Matrix",
								"CellInputs": {
									"0_0": "{row} * {col} ",
									"0_2": "{row} * 100",
									"3_1": "{cell -1, 1} * 5",
									"3_2": "10000",
									"2_0": "{col} *10"
								},
								"rowCount": "4",
								"columnCount": "2"
							}
						]
					},
					{
						"name": "ODEs",
						"Notes": "",
						"DiagramX": 120,
						"DiagramY": 20,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "overview",
						"Objects": [
							{
								"name": "Interest",
								"Notes": "In the \"Matrices\" model, there was an example where the growth of an investment was calculated assuming interest that was compounded monthly.\n\nThis example uses the ODE solver to see what would happen if the interest were continuously compounded.",
								"DiagramX": 5,
								"DiagramY": -10,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "interest",
										"Notes": "The interest rate.  Note the unit.",
										"DiagramX": -5,
										"DiagramY": 115,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "10 %/year"
										}
									},
									{
										"name": "initial",
										"Notes": "The same initial investment as in the monthly example.  There are no units for currency, so it is left dimensionless.\n",
										"DiagramX": -5,
										"DiagramY": 170,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1000"
										}
									},
									{
										"name": "dy",
										"Notes": "The derivative is simply the current principal, represented by the \"ode\" output, times the interest rate.",
										"DiagramX": 85,
										"DiagramY": 150,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "interest * ode.y"
										}
									},
									{
										"name": "ode",
										"Notes": "See the documentation (Help button) for details on the ODE inputs.\n\nFor this example:\n\nY0 in this case it is the value of the “initial” expression and is a scalar without units.\n\ndY/dT is the value of the “dy” expression.\n\nIt has units compatible with y and t. Since t has time units and y is dimensionless, the unit for this must be 1/time.\n\n EndT - the solver always integrates from 0 to this value of t.  It has to have the same units a t, which in this case is time, specifically 20 years.\n\nNextT  uses the formula\n\n$.t + 1 year\n\nto calculate the next record time. Here it is just the previous value plus a constant.\n\nNote this only applies to the record time and is not an integration step size.\n\nThe tolerances are left at their default values.\n\nThe t and y values are recorded for each year and labeled as “Time” and “Dollars” respectively.",
										"DiagramX": 85,
										"DiagramY": 115,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "ODE Solver",
										"y0Formula": {
											"Formula": "initial"
										},
										"dyFormula": {
											"Formula": "dy"
										},
										"nextTFormula": {
											"Formula": "$.t + 1 year"
										},
										"endTFormula": {
											"Formula": "20 year"
										},
										"relTolFormula": {
											"Formula": "1.0e-5"
										},
										"absTolFormula": {
											"Formula": "1.0e-10*{baseunit $.y}"
										},
										"recFormulas": [
											{
												"Formula": "$.t 'Time"
											},
											{
												"Formula": "$.y 'Dollars"
											}
										],
										"AutoRun": "y"
									},
									{
										"name": "Plot",
										"Notes": "You will notice that the final savings are higher than when the interest was only compounded monthly, but not hugely so.",
										"DiagramX": 175,
										"DiagramY": 115,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Graph",
										"X1": {
											"v": "ode.Time 'Time",
											"vmin": "",
											"vmax": "",
											"unit": "year",
											"Y1": {
												"v": "ode.Dollars 'Dollars",
												"vmin": "0",
												"vmax": "8000",
												"lineType": 0
											}
										}
									},
									{
										"name": "Table",
										"Notes": "The plot values can be\nretrieved as a table value,\nif desired.",
										"DiagramX": 175,
										"DiagramY": 170,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "plot.table"
										}
									},
									{
										"name": "futureV",
										"Notes": "Calculation of future value with monthly compounding.",
										"DiagramX": -5,
										"DiagramY": 225,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "initial *\n(1 + interest * 1 year / 12)^(1:20*12)"
										}
									},
									{
										"name": "Increase",
										"Notes": "The additional value after 20 years as compared to monthly compounding.",
										"DiagramX": 175,
										"DiagramY": 215,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "table.dollars[ -1 ] - futureV[ -1 ]"
										}
									}
								]
							},
							{
								"name": "Pendulum",
								"Notes": "This model calculates the motion of a simple pendulum.\n\nIf the \"c\" expression is non-zero, it will be damped.",
								"DiagramX": 90,
								"DiagramY": -70,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "ode",
										"Notes": "               The integrator",
										"DiagramX": 105,
										"DiagramY": 10,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "ODE Solver",
										"y0Formula": {
											"Formula": "y0"
										},
										"dyFormula": {
											"Formula": "dy"
										},
										"nextTFormula": {
											"Formula": "$.t + 0.1 s"
										},
										"endTFormula": {
											"Formula": "10 s"
										},
										"relTolFormula": {
											"Formula": "1.0e-5"
										},
										"absTolFormula": {
											"Formula": "1.0e-10*{baseunit $.y}"
										},
										"recFormulas": [
											{
												"Formula": "$.t 'Time"
											},
											{
												"Formula": "Theta"
											}
										],
										"AutoRun": "y"
									},
									{
										"name": "theta",
										"Notes": "y1 is the position in radians, but displayed here in degrees.\n",
										"DiagramX": 105,
										"DiagramY": 65,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "ode.y[0, \"Angle\"]"
										},
										"displayUnit": "degree"
									},
									{
										"name": "v",
										"Notes": "The angular velocity of the pendulum.\n\nThe first index of 0 indicates all the rows, which in this case is just one.",
										"DiagramX": 105,
										"DiagramY": 110,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "ode.y[0,\"Velocity\"]"
										}
									},
									{
										"name": "m",
										"Notes": "The pendulum mass.",
										"DiagramX": 5,
										"DiagramY": 105,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1 kg"
										}
									},
									{
										"name": "l",
										"Notes": "The length of the pendulum arm.",
										"DiagramX": 5,
										"DiagramY": 135,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1 m"
										}
									},
									{
										"name": "g",
										"Notes": "Approximate gravitational constant.",
										"DiagramX": 5,
										"DiagramY": 170,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "9.8 m/s^2"
										}
									},
									{
										"name": "c",
										"Notes": "A damping coefficient.  Set to 0 for undamped.",
										"DiagramX": 5,
										"DiagramY": 210,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": ".8 kg-m/s"
										}
									},
									{
										"name": "a",
										"Notes": "The calculation of acceleration.",
										"DiagramX": 105,
										"DiagramY": 230,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(g / l) * {sin theta} - (c /(l*m)) * v"
										}
									},
									{
										"name": "graph",
										"Notes": "The pendulum position versus time, with the angle displayed in degrees rather than radians.",
										"DiagramX": 195,
										"DiagramY": 10,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Graph",
										"X1": {
											"v": "ode.Time 'Time",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "ode.theta 'Theta",
												"vmin": "0",
												"vmax": "360 degree",
												"unit": "degree",
												"lineType": 0
											}
										}
									},
									{
										"name": "y0",
										"Notes": "The initial state of the pendulum, the velocity in radians per second.\n\nNote an angle of 0 is straight up.\n\nA table value is used so the integrated values can have different unit types.",
										"DiagramX": 5,
										"DiagramY": 10,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{table {cc \"Angle\", \"Velocity\"},\n\t45 degree, 0 \"1/s\"\n}"
										}
									},
									{
										"name": "dy",
										"Notes": "      The derivative of position\n      is velocity and the derivative\n      of velocity is acceleration.",
										"DiagramX": 105,
										"DiagramY": 175,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{table {cc \"Velocity\", \"Acceleration\"},\n\tv, a\n}"
										}
									},
									{
										"name": "recorded",
										"Notes": "The recorded values",
										"DiagramX": 195,
										"DiagramY": 65,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "ode.table"
										}
									}
								]
							},
							{
								"name": "DblPend",
								"Notes": "This is an extension of the pendulum problem to a double pendulum, that is a pendulum on the end of another pendulum.\n\nThe equations came from\n\nfreddie.witherden.org/tools/\ndoublependulum/report.pdf.\n\nNote that the relative tolerance on the ODE solver has been set quite small since this is a rather chaotic system.\n\nWhile more complex than the single version, the concepts are all the same and so the included notes are minimal.",
								"DiagramX": 90,
								"DiagramY": -10,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "g",
										"Notes": "Gravitational acceleration on earth.",
										"DiagramX": -50,
										"DiagramY": 80,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "9.80665 m/s^2"
										}
									},
									{
										"name": "ode",
										"Notes": "                Integrator",
										"DiagramX": 75,
										"DiagramY": 225,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "ODE Solver",
										"y0Formula": {
											"Formula": "y02"
										},
										"dyFormula": {
											"Formula": "dy"
										},
										"nextTFormula": {
											"Formula": "$.t + .02 s"
										},
										"endTFormula": {
											"Formula": "10 s"
										},
										"relTolFormula": {
											"Formula": "1.0e-12"
										},
										"absTolFormula": {
											"Formula": "1.0e-10 * {baseunit $.y}"
										},
										"recFormulas": [
											{
												"Formula": "$.t 'Time"
											},
											{
												"Formula": "theta'theta"
											}
										],
										"AutoRun": "y"
									},
									{
										"name": "a1",
										"Notes": "Acceleration of pendulum 1",
										"DiagramX": 75,
										"DiagramY": 75,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(\n\tm[2] * l[1] * v[1]^2 *\n\t{sin dt} * {cos dt} + \n\tm[2] * g * {sin theta[2]} * \n\t{cos dt} + m[2] * l[2] * \n\tv[2]^2 * {sin dt} - \n\tmSum * g * {sin theta[1]}\n) /\n(\n\tmSum * l[1] - m[2]*l[2] *\n\t{cos dt}^2\n)"
										}
									},
									{
										"name": "a2",
										"Notes": "Acceleration of pendulum 2",
										"DiagramX": 75,
										"DiagramY": 145,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(\n\t-m[2] * l[2] * v[2]^2 *\n\t{sin dt} * {cos dt} +\n\tmSum * (\n\t\tg* {sin theta[1]} *\n\t\t{cos dt} - l[1] *\n\t\tv[1]^2* {sin dt} - g *\n\t\t{sin theta[2]}\n\t)\n) /\n(\n\tmSum * l[2] - m[2]*l[2] *\n\t{cos dt}^2\n)"
										}
									},
									{
										"name": "graph",
										"Notes": "          Angle vs time",
										"DiagramX": 185,
										"DiagramY": 30,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Graph",
										"X1": {
											"v": "ode.Time 'Time",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "ode.theta[0,1] 'Theta1",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											},
											"Y2": {
												"v": "ode.theta[0,2] 'Theta2",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											}
										}
									},
									{
										"name": "dt",
										"Notes": "      Difference in angles",
										"DiagramX": -50,
										"DiagramY": 120,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "theta[2] - theta[1]"
										}
									},
									{
										"name": "m",
										"Notes": "      Pendulum mass",
										"DiagramX": -50,
										"DiagramY": 15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc 1 kg, 1 kg}"
										}
									},
									{
										"name": "x2",
										"Notes": "X coordinate of pendulum 2",
										"DiagramX": 75,
										"DiagramY": 175,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "l[1] * {sin ode.theta[0,1]} + \nl[2] * {sin\n\tode.theta[0,1] + ode.theta[0,2]\n}"
										}
									},
									{
										"name": "y2",
										"Notes": "Y coordinate of pendulum 2.",
										"DiagramX": 75,
										"DiagramY": 35,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "-l[1] * {cos ode.theta[0,1]} -\n\tl[2] * {cos\n\tode.theta[0,1] + ode.theta[0,2]\n}"
										}
									},
									{
										"name": "xy2graph",
										"Notes": "A plot of the x/y coordinates of pendulum 2 (the outer pendulum)",
										"DiagramX": 185,
										"DiagramY": 65,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Graph",
										"X1": {
											"v": "x2",
											"vmin": "-l[1] - l[2]",
											"vmax": "l[1] + l[2]",
											"unit": "m",
											"Y1": {
												"v": "y2",
												"vmin": "-l[1] - l[2]",
												"vmax": "l[1] + l[2]",
												"lineType": 0
											}
										}
									},
									{
										"name": "y0",
										"Notes": "Initial states of the pendulums",
										"DiagramX": -50,
										"DiagramY": 190,
										"HideInfo": "n",
										"DiagramNotes": "y",
										"Type": "Data Table",
										"Columns": [
											{
												"name": "Angle",
												"displayUnit": "radian",
												"nValues": [
													0.7853999999999998,
													1.5708
												],
												"unitDimensions": "0 0 0 0 0 0 0",
												"defaultValue": "0 radian"
											},
											{
												"name": "Velocity",
												"displayUnit": "1/s",
												"nValues": [
													3,
													4
												],
												"unitDimensions": "0 0 -1 0 0 0 0",
												"defaultValue": "0 radian/s"
											}
										]
									},
									{
										"name": "dy",
										"Notes": "Derivative table",
										"DiagramX": 185,
										"DiagramY": 195,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{table {cc \"Velocity\", \"Acceleration\"},\n\tv, a\n}"
										}
									},
									{
										"name": "y02",
										"Notes": "Alternate formulation of y0 using table function",
										"DiagramX": -50,
										"DiagramY": 225,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{table {cc \"Angle\", \"Velocity\"},\n\t{cc 0.25, 0.5} * {pi},\n\t{cc 3 \"1/s\", 4 \"1/s\"}\n}"
										},
										"tableUnits": {
											"1": "radian"
										}
									},
									{
										"name": "theta",
										"Notes": "     Angle of pendulums",
										"DiagramX": -50,
										"DiagramY": 155,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "ode.y[0,\"angle\"]"
										}
									},
									{
										"name": "v",
										"Notes": "Angular velocity",
										"DiagramX": 185,
										"DiagramY": 155,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "ode.y[0,\"velocity\"]"
										}
									},
									{
										"name": "a",
										"Notes": "          acceleration",
										"DiagramX": 185,
										"DiagramY": 115,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc a1, a2}"
										}
									},
									{
										"name": "mSum",
										"Notes": "       Total mass",
										"DiagramX": 75,
										"DiagramY": 110,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{sum m}"
										}
									},
									{
										"name": "l",
										"Notes": "Length of pendulum arms",
										"DiagramX": -50,
										"DiagramY": 50,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc 1 m, 1 m}"
										}
									},
									{
										"name": "recorded",
										"Notes": "Recorded values table",
										"DiagramX": 185,
										"DiagramY": 230,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "ode.table"
										}
									}
								]
							},
							{
								"name": "Roberts",
								"Notes": "This example represents the kinetics of a 3 species chemical reaction.\n\nThe large difference in the rates of the reactions make this problem what is termed stiff.  Using integration time steps small enough to track the very sensitive components would be very inefficient given the long overall times required for the slower components.\n\nSpecial algorithms have been developed for these types of problems and in the case of Math Minion a Backward Difference Formula approach is used when the \"Stiff\" switch on the information view of the ODE solver is turned on.\n",
								"DiagramX": 170,
								"DiagramY": -70,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "ode",
										"Notes": "A few things to note about this ODE solver:\n\n- the \"Stiff\" switch is turned on.\n\n- the end time is very large.\n\n- if the recorded time intervals were constant, you would either miss what happens very quickly at the beginning of the run or have way to many points. Therefore NextT is calculated by:\n\n{if {eq $.t 0}, 1e-5, $.t * 2}\n\nWhere the first value, when t = 0, is set to a small number and each succeeding interval is twice the previous one.\n\n- the absolute tolerance has been reduced from the default because some of the values will be very small.",
										"DiagramX": -45,
										"DiagramY": 105,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "ODE Solver",
										"y0Formula": {
											"Formula": "y0"
										},
										"dyFormula": {
											"Formula": "dy"
										},
										"nextTFormula": {
											"Formula": "{if {eq $.t 0}, 1e-5, $.t * 2}"
										},
										"endTFormula": {
											"Formula": "4e10"
										},
										"relTolFormula": {
											"Formula": "1.0e-5"
										},
										"absTolFormula": {
											"Formula": "1.0e-14"
										},
										"recFormulas": [
											{
												"Formula": "$.t 'Time"
											},
											{
												"Formula": "$.y[1] 'Y1"
											},
											{
												"Formula": "$.y[2] ' Y2"
											},
											{
												"Formula": "$.y[3] ' Y3"
											}
										],
										"Stiff": "y ",
										"AutoRun": "y"
									},
									{
										"name": "y",
										"Notes": "The y values are simply the ode y values.  This expression isn't necessary, but makes the equations in the dy matrix a bit cleaner.",
										"DiagramX": -45,
										"DiagramY": 135,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "ode.y"
										}
									},
									{
										"name": "dy",
										"Notes": "The rate equations are defined.\n\ndy1 = -0.04*y1 + 10^4*y2*y3\ndy2 = dy1 - dy3\ndy3 = 3*10^7 * y2\n\nNote the use of the cell function to calculate the derivative for component 2, which is defined as dy1 - dy3.",
										"DiagramX": -45,
										"DiagramY": 195,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "0",
											"2_1": "-{cell -1, 0} - {cell 1, 0}",
											"3_1": "3.0e7*y[2]^2",
											"1_1": "-0.04*y[1] + 1.0e4*y[2]*y[3]"
										},
										"rowCount": "{nrows y0}",
										"columnCount": "1"
									},
									{
										"name": "graph",
										"Notes": "A plot of the reaction progress.  Plotting against log t is necessary to capture the fast moving events that occur early.  Also y2 never exists in quantity, so its maximum is set quite low.",
										"DiagramX": 55,
										"DiagramY": 200,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Graph",
										"X1": {
											"v": "logT",
											"vmin": "-5",
											"vmax": "7",
											"Y1": {
												"v": "ode.y1[range] ' Y1",
												"vmin": "0",
												"vmax": "1",
												"lineType": 0
											},
											"Y2": {
												"v": "ode.y2[range] 'Y2",
												"vmin": "0",
												"vmax": "5.e-5",
												"lineType": 0
											},
											"Y3": {
												"v": "ode.y3[range] ' Y3",
												"vmin": "0",
												"vmax": "1",
												"lineType": 0
											}
										}
									},
									{
										"name": "logT",
										"Notes": "The log (base 10) of the recorded values of t (skipping the first one).",
										"DiagramX": 55,
										"DiagramY": 155,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{log ode.time[range]}"
										}
									},
									{
										"name": "range",
										"Notes": "A plot versus log t will be more useful than one versus t, but the first value of t is 0 and should be skipped.  This expression just calculates that range for use in other expressions.",
										"DiagramX": 55,
										"DiagramY": 85,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "2:{nrows ode.r1}"
										}
									},
									{
										"name": "y0",
										"Notes": "The initial conditions  are the initial composition of the material and consists of pure compound 1.\n",
										"DiagramX": -45,
										"DiagramY": 50,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc 1, 0, 0}"
										}
									},
									{
										"name": "recorded",
										"Notes": "The recorded values",
										"DiagramX": 55,
										"DiagramY": 50,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "ode.table"
										}
									}
								]
							},
							{
								"name": "Overview",
								"Notes": "",
								"DiagramX": 10,
								"DiagramY": -70,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThe ODE solver is used to integrate a set of 1 or more ordinary differential equations (ODE).\n\t\t</p>\n\t\t<p>\n\t\t\tAn ODE is a function with a single independent variable and a derivative with respect to that variable.\n\t\t</p>\n\t\t<p>\n\t\t\tEssentially it determines <b>y</b> with respect to <b>t</b> from <b>t=0</b> to some end point, where <b>dy/dt</b> is some function of <b>y</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tArrays or tables <b>y</b> and <b>dy/dt</b> must be the same size and with compatible units (i.e units <b>y</b> must equal units <b>dy</b> times units <b>t</b>).\n\t\t</p>\n\t\t<p>\n\t\t\tMath Minion uses code inspired by the Sundials suite of solvers developed at the Lawerence Livermore National Library in the US.\n\t\t</p>\n\t\t<p>\n\t\t\tIt uses a variant of the Adam Moulton method for non-stiff problems and Backwards Difference Formulas (BDF) when the problem is designated as stiff.\n\t\t</p>\n\t\t<p>\n\t\t\tThis model contains some models illustrating the use of the ODE tool. \n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
								}
							}
						]
					},
					{
						"name": "Models",
						"Notes": "",
						"DiagramX": 120,
						"DiagramY": -10,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "introduction",
						"Objects": [
							{
								"name": "Area",
								"Notes": "Retrieve the calculated outlet expression for area from the circle model.\n",
								"DiagramX": 185,
								"DiagramY": 0,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "circle.area"
								}
							},
							{
								"name": "d",
								"Notes": "A diameter",
								"DiagramX": 20,
								"DiagramY": 30,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "2 m"
								}
							},
							{
								"name": "circumference",
								"Notes": "Also retrieved from a model output.",
								"DiagramX": 185,
								"DiagramY": 45,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "circle.circumference"
								}
							},
							{
								"name": "Introduction",
								"Notes": "",
								"DiagramX": 20,
								"DiagramY": 0,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Introduction</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tAn expression in a model can communicate with the parent model by having its input switch/checkbox turned on.\n\t\t</p>\n\t\t<p>\n\t\t\tIts formula will then be evaluated in terms of the parent tools, but the calculated value will be available to its model.\n\t\t</p>\n\t\t<p>\n\t\t\tSimilarly, an expression designated as output, will be available to the parent model.\n\t\t</p>\n\t\t<p>\n\t\t\tIn this case circle.area retrieves the value of the \"area\" expression in the circle model.\n\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
								}
							},
							{
								"name": "circle",
								"Notes": "A model which calculates the circumference and area of a circle, given the radius.\n\nIts expressions have the input and output switches set so they are exposed to the parent model.\n\nTap the icon above to view the model diagram.",
								"DiagramX": 100,
								"DiagramY": 0,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "Circle_Overview",
								"Objects": [
									{
										"name": "radius",
										"Notes": "By turning on the input switch in this expression’s info view, the variables used in\nthe expression formula refer\nto those of the parent.",
										"DiagramX": 20,
										"DiagramY": 80,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "d / 2"
										},
										"isInput": "y"
									},
									{
										"name": "circumference",
										"Notes": "",
										"DiagramX": 105,
										"DiagramY": 110,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "2*radius*{pi}"
										},
										"isOutput": "y"
									},
									{
										"name": "area",
										"Notes": "Turning on the output switch allows the parent to access the result of this expression using normal dot notation as in:\n\ncircle.area",
										"DiagramX": 105,
										"DiagramY": 45,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{pi}*radius^2"
										},
										"isOutput": "y"
									},
									{
										"name": "xyplot",
										"Notes": "Plot the circle from cart as well as one half the size.",
										"DiagramX": 105,
										"DiagramY": 180,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Graph",
										"X1": {
											"v": "coordinates.x 'X1",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "coordinates.y 'Y1",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											}
										},
										"X2": {
											"v": "$.x1/2 'X2",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "$.y1/2 'Y2",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											}
										}
									},
									{
										"name": "Circle_Overview",
										"Notes": "Overview",
										"DiagramX": 20,
										"DiagramY": 45,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h4>Circle Overview</h4>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tExpressions have input and output switched\\s that are normally off, but can be turned on to indicate that the expression can interact with parent of the model that contains it.\n\t\t</p>\n\t\t<p>\n\t\t\tIf the input switch is on, then any tool names used in the expression will refer to tools in the parent model, rather than the model containing the expression. In this case, the expression <b>radius</b> has its input switch turned on and so its formula:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tdiameter / 2\n\t\t</p\n\t\t<p>\n\t\t\tlooks for a value called diameter in the A_Simple_Calc model, not the circle model.\n\t\t</p>\n\t\t<p>\n\t\t\tBoth the <b>area</b> and <b>circumference</b> expressions have their output switches turned on and so can be reference from the parent model, A_Simple_Calc, by a formula like:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tcircle.area\n\t\t</p>\n\t\t<p>\n\t\t\tThey can also be used with in the circle model itself like normal expressions.\n\t\t</p>\n\t\t<p>\n\t\t\tTake a look at the radius, area and circumference expressions and then have a look at the <b>Coordinates_Calc</b> tool.\n\t\t</p> \n\t\t\t\n\t\t<p>\n\t\t\tWhen you are done. return to the parent model by tapping on the <b>&gt; A_Simple_Calc</b> button at the upper right of the diagram.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										}
									},
									{
										"name": "coordinates",
										"Notes": "Calculate the x-y coordinates for a circle with a radius equal to radius.",
										"DiagramX": 105,
										"DiagramY": 135,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cart radius[1,1], 1:60 / 30  * {pi}}"
										}
									},
									{
										"name": "Coordinates_Calc",
										"Notes": "Explanation of the calculation of the coordinates expression",
										"DiagramX": 20,
										"DiagramY": 135,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h4>Calculation of Cart</h4>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThe formula in the <b>coordinates</b> expression:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\t{cart radius[1,1], 1:60 / 30  * {pi}}\n\t\t</p>\n\t\t<p>\n\t\t\tis a bit more complicated. Library functions are called by enclosing them in curly braces, with the name of the function immediately after the opening brace. The parameters, if any, follow in a comma separated list.\n\t\t</p>\n\t\t<p>\n\t\t\tThus in the formula above there are two functions, <b>cart</b> and <b>pi</b>. The pi function doesn't take any parameters and just returns the value of pi.\n\t\t</p>\n\t\t<p>\n\t\t\tThe cart function calculates the cartesian coordinates from a radius and an angle. Specifically for:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\t{cart r, a}\n\t\t</p>\n\t\t<p>\n\t\t\tcart returns a table value with the first column being the <b>x</b> value and the second being the <b>y</b> of the radius <b>r</b> and angle <b>a</b> converted to cartesian coordinates.\n\t\t</p>\n\t\t<p>\n\t\t\tTable value columns can be referenced using dot notation, so <b>coordinates.x</b> would return an array corresponding to the rows of the <b>x</b> column.  These are used in the <b>xyplot</b> tool to graph the circle.\n\t\t</P>\n\t\t<p>\n\t\t\tThe first parameter to the cart function is <b>radius[1,1]</b>. The <b>[1,1]</b> index operator specifies we just want the value in the first row and column so it is guaranteed to be a scalar.\n\t\t</p>\n\t\t<p>\n\t\t\tThe second parameter, <b>1:60 / 30 * {pi}</b> creates an array of integers from 1 to 60 using the <b>:</b> operator. This is then divided by 30 giving 60 values evenly spaced up to 2. This array is then multiplied by pi to give an array of angles up to 2pi, which is of course the number of radians in a circle.\n\t\t</p> \n\t\t</div>\n\t</body>\n</html>"
										}
									}
								]
							}
						]
					},
					{
						"name": "HtmlPage",
						"Notes": "",
						"DiagramX": 45,
						"DiagramY": 90,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "explanation",
						"Objects": [
							{
								"name": "WeightPlot",
								"Notes": "Plot of previous weights.",
								"DiagramX": 220,
								"DiagramY": 75,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Graph",
								"X1": {
									"v": "Weight.date 'Date",
									"vmin": "",
									"vmax": "",
									"unit": "date",
									"Y1": {
										"v": "Weight.Weight 'Weight",
										"vmin": "",
										"vmax": "",
										"lineType": 0
									}
								}
							},
							{
								"name": "css",
								"Notes": "Cascading style sheet code for the HTML form.",
								"DiagramX": 50,
								"DiagramY": 115,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "'\nbody {\n\tbackground-color: #EEFFEE;\n}\n\n\n/* Tables\n * --------------------------------------------------------------------- */\n\n\ttable {\n\t\tborder-top:     0px solid #ddd;\n\t\tborder-left:    0px solid #ddd;\n\t\tmargin-top: 0px;\n\t\tmargin-bottom: 0.5em;\n\t\twidth:300px;\n\t\tfont-size: x-large;\n\t\tfont-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n\t}\n\tth,td {\n\t\tborder-bottom:  0px solid #ddd;\n\t\tborder-right:   0px solid #ddd;\n\t\tvertical-align: top;\n\t}\n/* Default Classes\n * --------------------------------------------------------------------- */\n\n\tp.title, a.title, div.title {\n\t\tcolor: #040;\n\t\tfont-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n\t\tfont-size: 2.0em;\n\t\ttext-align: center;\n\t}\n\n\tp.subtitle {\n\t\tcolor: #040;\n\t\tfont-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n\t\tfont-size: 1.1em;\n\t}\n\t\n\t.explain {\n\t\tcolor: #000;\n\t\tfont-size: 1.2em;\n\t}\n\t\n\t.explain a {\n\t\tcolor: blue;\n\t\ttext-decoration: underline;\n\t}\n\t\n\t.html {\n\t\tcolor: navy;\n\t\tfont-weight: bold;\n\t}\n\t\n\t.htmlresult {\n\t\tcolor: navy;\n\t\tfont-weight: bold;\n\t}\n\t\n\t.center {\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\twidth=320px;\n\t\ttext-align: center;\n\t}\n\t\n\t.input {\n\t\twidth: 100%;\n\t\tfont-size: large;\n\t}\n\tbutton {\n\t\tfont-size: large;\n\t\tmargin-left: 10px;\n\t\tmargin-right: 10px;\n\t\twidth: 120px;\n\t}\n\n\t.result {\n\t\ttext-align: center;\n\t\tfont-size: x-large;\n\t}\t\t\n\n\t.indent {\n\t\tmargin-left: 1\n\t\tem;\n\t}\n\t\n\t.buttonrow {\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\twidth: 300px;\n\t\ttext-align: center;\n\t}"
								}
							},
							{
								"name": "BMICalc",
								"Notes": "This is a model which calculates body mass index, which is weight in kg divided by height, in m, squared.\n\nThe result is calculated as a dimensionless value so it is displayed correctly, regardless of display units.",
								"DiagramX": 130,
								"DiagramY": 150,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Weight",
										"DiagramX": 10.66666984558105,
										"DiagramY": 36.66667175292969,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{eval BMI.weight}"
										},
										"isInput": "y",
										"displayUnit": "kg"
									},
									{
										"name": "Height",
										"DiagramX": 10,
										"DiagramY": 70,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{eval BMI.height}"
										},
										"isInput": "y",
										"displayUnit": "m"
									},
									{
										"name": "BMI",
										"Notes": "Calculates weight in kg over height in m squared.\n\nUnits are used to make this dimensionless, so its value is the same regardless of display units.",
										"DiagramX": 105.6667022705078,
										"DiagramY": 49.66667175292969,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "weight/1\"kg\" /\n(height/1\"m\")^2"
										},
										"isOutput": "y"
									}
								]
							},
							{
								"name": "Explanation",
								"Notes": "",
								"DiagramX": 50,
								"DiagramY": 75,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'<html lang=\"en\">\n\t<head>\n\t\t<title>HTML Pages</title>\n\t\t<meta name=\"viewport\" content=\"initial-scale=1.0\">\n\t\t<style>\n\t\t\t<mm>css</mm>\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<p class=\"title\">HTML Pages</p>\n\t\t<div class=\"explain\">\n\t\t\t<p>\n\t\t\t\tMath Minion HTML page tools provide a way to present customized input and result views.  These can be used to simplify your own tasks, or to create calculation sheets that present a simpler interface for non-technical users.  The page you are reading is itself an  HTML page tool.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tAs the name implies, HTML page tools are presented as web browser views and have a single formula that should return a string value containing the HTML to be displayed. This formula can be any valid Math Minion formula, but most often simply consists of a single quote, followed by the desired HTML.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tSpecial HTML extensions allow the results of Math Minion formulas to appear on the rendered page and for the values from input fields to be made available to the Math Minion model.  Certain actions, such as adding rows to a data table or loading a different session can also be triggered from the html page.\n\t\t\t</p>\n\t\t\t<p>Tap on the <b>Help</b> button at the top right of this view to get help on how to do this.</p>\n\t\t</div>\n\t</body>\n</html>"
								},
								"inputs": {},
								"f0": "css"
							},
							{
								"name": "BMI",
								"Notes": "            BMI Form",
								"DiagramX": 130,
								"DiagramY": 115,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'<html lang=\"en\">\n\t<head>\n\t\t<title>Your BMI</title>\n\t\t<meta name=\"viewport\" content=\"initial-scale=1.0\">\n\t\t<style>\n\t\t\t<mm>css</mm>\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<p class=\"title\">Your BMI</p>\n\t\t<table class=\"center\">\n\t\t\t<tr><td><span class=\"rowlabel\">Weight</span></td>\n\t\t\t\t<td><input type=\"text\" id=\"weight\" value=\"<mm>$.weight</mm>\"\n\t\t\t\t\t class=\"input\" title=\"Enter weight with unit\">\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr><td><span class=\"rowlabel\">Height</span>\n\t\t\t\t<td><input type=\"text\" id=\"height\" value=\"<mm>$.height</mm>\"\n\t\t\t\t\tclass=\"input\" title=\"Enter height with unit\">\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</table>\n\t\t<div class=\"center\">\n\t\t\t<button onclick=\"mmpost(['weight','height']);\"\n\t\t\t\ttitle=\"Use the inputs to calculate the BMI\">Calculate</button>\n\t\t\t<button onclick=\"mmpost(['weight','height'],{mm_addrow: 'Weight'});\"\n\t\t\t\ttitle=\"Add weight to the Weight data table\">Record</button>\n\t\t</div>\n\t\t<p class=\"result\">\n\t\t\tBMI = <mm>BMICalc.BMI</mm><br>\n\t\t\tLast Recorded = <mm>{fmt \"%8.0f\", weight[{nrows weight}, \"date\"], \"date\"}</mm>\n\t\t</p>\n\t\t<div class=\"buttonrow moveup\">\n\t\t\t<button class=\"menubutton\" onclick=\"mmpost([],{mm_push: 'WeightPlot'});\"\n\t\t\t\ttitle=\"Plot the weight record\">Plot</button>\n\t\t\t<button class=\"menubutton\" onclick=\"mmpost([],{mm_view: 'Explanation'});\"\n\t\t\t\ttitle=\"Switch to the Explanation page\">Explain</button>\n\t\t</div>\n\t\t<div class=\"buttonrow\">\n\t\t\t<p><button class=\"menubutton\" onclick=\"mmpost([],{mm_push: 'Weight'});\"\n\t\t\t\ttitle=\"Show the weight table\">Table</button></p>\n\t\t</div>\n\n\t</body>\n</html>"
								},
								"inputs": {
									"weight": "78 kg",
									"height": "6 ft + 1 in"
								},
								"f0": "css",
								"f1": "$.weight",
								"f2": "$.height",
								"f3": "BMICalc.BMI",
								"f4": "{fmt \"%8.0f\", weight[{nrows weight}, \"date\"], \"date\"}"
							},
							{
								"name": "Weight",
								"Notes": "A table of previous weights.",
								"DiagramX": 135,
								"DiagramY": 75,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Data Table",
								"Columns": [
									{
										"name": "Date",
										"displayUnit": "date",
										"nValues": [
											1568074000,
											1568160000,
											1568246000,
											1568333000,
											1568419000,
											1568506000,
											1568592000,
											1568678000,
											1568765000,
											1568938000,
											1569024000,
											1569110000,
											1569197000,
											1569283000,
											1569370000,
											1569456000,
											1569542000,
											1569629000,
											1569715000,
											1569802000,
											1569888000,
											1569974000,
											1570061000,
											1570147000,
											1570234000,
											1570320000,
											1570406000,
											1570493000,
											1570579000,
											1570666000,
											1570752000,
											1570838000,
											1570925000,
											1571011000,
											1571098000,
											1571184000,
											1571270000,
											1571357000,
											1571443000,
											1571530000,
											1571616000,
											1571702000,
											1571789000,
											1571875000,
											1571962000,
											1572048000,
											1572134000,
											1572221000,
											1572307000,
											1572394000,
											1572480000,
											1572566000,
											1572653000,
											1572739000,
											1572826000,
											1572912000,
											1572998000,
											1573085000,
											1573171000,
											1573258000,
											1573344000,
											1573430000,
											1573517000,
											1573603000,
											1573690000,
											1573776000,
											1573862000,
											1573949000,
											1574035000,
											1574122000,
											1574208000,
											1574381000,
											1574467000,
											1574554000,
											1574640000,
											1574726000,
											1574813000,
											1574899000,
											1574986000,
											1575072000,
											1575158000,
											1575245000,
											1575331000,
											1575504000,
											1575590000,
											1575677000,
											1575763000,
											1575850000,
											1575936000,
											1576022000,
											1576109000,
											1576195000,
											1576282000,
											1576368000,
											1576454000,
											1576541000,
											1576627000,
											1576714000,
											1576800000,
											1576886000,
											1576973000,
											1577059000,
											1577146000,
											1577232000,
											1577318000,
											1577405000,
											1577491000,
											1577578000,
											1577664000,
											1577750000,
											1577837000,
											1577923000,
											1578010000,
											1578096000,
											1578182000,
											1578269000,
											1578355000,
											1578442000,
											1578528000,
											1578614000,
											1578701000,
											1578787000,
											1578874000,
											1578960000,
											1579046000,
											1579133000,
											1579219000,
											1579306000,
											1579392000,
											1579478000,
											1579565000,
											1579651000,
											1579738000,
											1579824000,
											1579910000,
											1579997000,
											1580083000,
											1580170000,
											1581466000,
											1581552000,
											1581638000,
											1581725000,
											1581811000,
											1581898000,
											1581984000,
											1582070000,
											1582157000,
											1582243000,
											1582330000,
											1582416000,
											1582502000,
											1582589000,
											1582675000,
											1582762000,
											1582848000,
											1582934000,
											1583021000,
											1583107000,
											1583194000,
											1583280000,
											1583366000,
											1583453000,
											1583539000,
											1583626000,
											1583712000,
											1583798000,
											1583885000,
											1583971000,
											1584058000,
											1584144000,
											1584230000,
											1584317000,
											1584403000,
											1584490000,
											1584576000,
											1584662000,
											1584749000,
											1584835000,
											1584922000,
											1585008000,
											1585094000,
											1585181000,
											1585267000,
											1585354000,
											1585440000,
											1585526000,
											1585613000,
											1585699000,
											1585786000,
											1585872000,
											1585958000,
											1586045000,
											1586131000,
											1586218000,
											1586304000,
											1586390000,
											1586477000,
											1586563000,
											1586650000,
											1586736000,
											1586822000,
											1586909000,
											1586995000,
											1587082000,
											1587168000,
											1587254000,
											1587341000,
											1587427000,
											1587514000,
											1587600000,
											1587686000,
											1587859000,
											1587946000,
											1588032000,
											1588118000,
											1588205000,
											1588291000,
											1588378000,
											1588464000,
											1588550000,
											1588637000,
											1588723000,
											1588810000,
											1588896000,
											1588982000,
											1589069000,
											1589155000,
											1589242000,
											1589328000,
											1589414000,
											1589501000,
											1589587000,
											1589674000,
											1589760000,
											1589846000,
											1589933000,
											1590019000,
											1590106000,
											1590192000,
											1590278000,
											1590365000,
											1590451000,
											1590538000,
											1590624000,
											1590710000,
											1590797000,
											1590883000,
											1590970000,
											1591056000,
											1591142000,
											1591229000,
											1591315000,
											1591402000,
											1591488000,
											1591574000,
											1591661000,
											1591747000,
											1591834000,
											1591920000,
											1592006000,
											1592093000,
											1592179000,
											1592266000,
											1592352000,
											1592438000,
											1592525000,
											1592611000,
											1592698000,
											1592784000,
											1592870000,
											1592957000,
											1593043000,
											1593130000,
											1593216000,
											1593302000,
											1593389000,
											1593475000,
											1593562000,
											1593648000,
											1593734000,
											1593821000,
											1593907000,
											1593994000,
											1594080000,
											1594166000,
											1594253000,
											1594339000,
											1594426000,
											1594512000,
											1594598000,
											1594685000,
											1594771000,
											1594858000,
											1594944000,
											1595030000,
											1595117000,
											1595203000,
											1595290000,
											1595376000,
											1595462400,
											1595548800,
											1595635200,
											1595721600,
											1595808000,
											1595894400,
											1595980800,
											1596067200,
											1596153600,
											1596240000,
											1596326400,
											1596412800,
											1596499200,
											1596585600,
											1596672000,
											1596758400,
											1596844800,
											1596931200,
											1597017600,
											1597104000,
											1597190400,
											1597276800,
											1597363200,
											1597449600,
											1597536000,
											1597622400,
											1597708800,
											1597795200,
											1597881600,
											1597968000,
											1598054400,
											1598140800,
											1598227200,
											1598313600,
											1598400000,
											1598486400,
											1598572800,
											1598659200,
											1598745600,
											1598832000,
											1598918400,
											1599004800,
											1599091200,
											1599177600,
											1599264000,
											1599350400,
											1599436800,
											1599523200,
											1599609600,
											1599696000,
											1599782400,
											1599868800,
											1599955200,
											1600041600,
											1600128000,
											1600214400,
											1600300800,
											1600387200,
											1600473600,
											1600560000,
											1600646400,
											1600732800,
											1600819200,
											1600905600,
											1600992000,
											1601078400,
											1601164800,
											1601251200,
											1601337600,
											1601424000,
											1601510400,
											1601596800,
											1601683200,
											1601769600,
											1601856000,
											1601942400,
											1602028800,
											1602115200,
											1602201600,
											1602288000,
											1602374400,
											1602460800,
											1602547200,
											1602633600,
											1602720000,
											1602806400,
											1602892800,
											1602979200,
											1603065600,
											1603152000,
											1603238400,
											1603324800,
											1603411200,
											1603497600,
											1603584000,
											1603670400,
											1603756800,
											1603843200,
											1603929600,
											1604016000,
											1604102400,
											1604188800,
											1604275200,
											1604361600,
											1604448000,
											1604534400,
											1604620800,
											1604707200,
											1604793600,
											1604880000,
											1604966400,
											1605052800,
											1605139200,
											1605225600,
											1605312000,
											1605398400,
											1605484800,
											1605571200,
											1605657600,
											1605744000,
											1605830400,
											1605916800,
											1606003200,
											1606089600,
											1606176000,
											1606262400,
											1606348800,
											1606435200,
											1606521600,
											1606608000,
											1606694400,
											1606780800,
											1606867200,
											1606953600,
											1607040000,
											1607126400,
											1607212800,
											1607299200,
											1607385600,
											1607472000,
											1607558400,
											1607644800,
											1607731200,
											1607817600,
											1607904000,
											1607990400,
											1608076800,
											1608163200,
											1608249600,
											1608336000,
											1608422400,
											1608508800,
											1608595200,
											1608681600,
											1608768000,
											1608854400,
											1608940800,
											1609027200,
											1609113600,
											1609200000,
											1609286400,
											1609372800,
											1609459200,
											1609545600,
											1609632000,
											1609718400,
											1609804800,
											1609891200,
											1609977600,
											1610064000,
											1610150400,
											1610236800,
											1610323200,
											1610409600,
											1610496000,
											1610582400,
											1610668800,
											1610755200,
											1610841600,
											1610928000,
											1611014400,
											1611100800,
											1611187200,
											1611273600,
											1611360000,
											1611446400,
											1611532800,
											1611619200,
											1611705600,
											1611792000,
											1611878400,
											1611964800,
											1612051200,
											1612137600
										],
										"unitDimensions": "0 0 1 0 0 0 0",
										"defaultValue": "{mktime {int {date {now}+{timezone}}}}"
									},
									{
										"name": "Weight",
										"displayUnit": "kg",
										"nValues": [
											78.3,
											78.3,
											78.4,
											78.4,
											78,
											78.5,
											78.2,
											78.2,
											77.9,
											77.6,
											78.4,
											78.1,
											78.5,
											78.1,
											78.5,
											78.4,
											78.7,
											78.3,
											78.3,
											77.9,
											77.7,
											77.8,
											77.8,
											78.6,
											78.5,
											78.9,
											78.6,
											79,
											78.7,
											78.5,
											78.3,
											78.9,
											78.1,
											78.6,
											78.6,
											78.9,
											78.8,
											79.3,
											78.9,
											79.2,
											79.1,
											79.1,
											79.1,
											79.2,
											79.1,
											78.6,
											78.7,
											78.6,
											78.8,
											79.5,
											79,
											78.8,
											78.8,
											78.5,
											78.5,
											79.2,
											79.4,
											78.7,
											79.1,
											78.2,
											78.2,
											78.1,
											78.3,
											78.6,
											79,
											78.5,
											78.4,
											78.7,
											78.1,
											78.5,
											78.2,
											78.6,
											78.8,
											78.4,
											78.5,
											78.7,
											78.5,
											78.9,
											78.6,
											78.4,
											78.3,
											78.7,
											78.2,
											79,
											78.9,
											79.2,
											79.4,
											78.4,
											78.5,
											78.5,
											77.9,
											78.2,
											78.1,
											78.3,
											78.4,
											78.2,
											78.2,
											78,
											78,
											78.5,
											78.9,
											78.6,
											78.8,
											78.6,
											79,
											78.8,
											78.5,
											78.7,
											78.6,
											78.9,
											79,
											78.3,
											78.6,
											78.2,
											78.4,
											78.2,
											78.6,
											78.9,
											78.5,
											78.2,
											78.7,
											79.2,
											78.7,
											78.9,
											78.2,
											78.4,
											78.3,
											78.9,
											78.4,
											78.7,
											78.8,
											78.4,
											78.9,
											78.3,
											78.9,
											78.7,
											78.4,
											78.1,
											79.7,
											79.5,
											79.1,
											79.2,
											79.2,
											79.1,
											79.1,
											79.1,
											79.2,
											79,
											79.1,
											78.9,
											78.8,
											79.2,
											78.9,
											78.8,
											78.3,
											78.3,
											78.8,
											78.8,
											78.6,
											78.8,
											79.1,
											78.5,
											78.5,
											78.6,
											78.1,
											78.1,
											78.7,
											78.6,
											78.6,
											78.7,
											78.4,
											78.6,
											79.2,
											78.8,
											78.8,
											79.1,
											79,
											78.9,
											78.5,
											78.9,
											78.5,
											78.3,
											78.8,
											78.9,
											78.4,
											78.9,
											78.9,
											78.7,
											78.7,
											78.8,
											78.8,
											78.5,
											78.5,
											78.9,
											78.6,
											79.2,
											78.8,
											78.7,
											78.3,
											78.6,
											78.5,
											78.8,
											78.7,
											79.1,
											78.8,
											79,
											78.9,
											79,
											78.9,
											78.4,
											78.9,
											78.3,
											78.7,
											78.9,
											78.6,
											78.4,
											78.1,
											78.4,
											78.8,
											78.9,
											78.7,
											78.1,
											78.3,
											78.8,
											78.4,
											78.5,
											78.5,
											78.6,
											78.4,
											78.5,
											78.8,
											78.8,
											78.5,
											78.6,
											78.5,
											78.4,
											78.5,
											78.3,
											78.8,
											78.6,
											79,
											79,
											78.5,
											78.5,
											79,
											78.5,
											78.7,
											78.3,
											78.2,
											78.6,
											78.7,
											78.8,
											78.3,
											78.4,
											78.2,
											78,
											78.1,
											78.2,
											77.8,
											78,
											78.2,
											77.9,
											78.1,
											78.3,
											78.3,
											78.2,
											78,
											78.4,
											78.3,
											77.9,
											77.9,
											78.1,
											78.5,
											78.2,
											78.3,
											78.3,
											78.1,
											78,
											77.9,
											78.3,
											77.8,
											78.1,
											77.5,
											78.1,
											77.9,
											77.8,
											77.3,
											77.4,
											77.7,
											77.5,
											77.7,
											77.7,
											78,
											77.8,
											77.8,
											78,
											78.1,
											77.6,
											78.09999999999998,
											78.3,
											78.09999999999998,
											78.2,
											77.8,
											77.8,
											78.3,
											78.2,
											78.3,
											78.2,
											78.3,
											78,
											78.09999999999998,
											77.90000000000002,
											77.90000000000002,
											77.90000000000002,
											77.7,
											78,
											77.8,
											78.09999999999998,
											78,
											78,
											78,
											78,
											78.09999999999998,
											78.40000000000002,
											78,
											78,
											78,
											78.40000000000002,
											78,
											78.09999999999998,
											78.3,
											77.90000000000002,
											78.09999999999998,
											78.09999999999998,
											78.2,
											77.8,
											77.5,
											78.2,
											78.3,
											77.90000000000002,
											78,
											78.09999999999998,
											78.40000000000002,
											78.40000000000002,
											78.40000000000002,
											78.3,
											78.2,
											77.8,
											78,
											78.3,
											78.59999999999998,
											78.09999999999998,
											77.8,
											77.8,
											77.90000000000002,
											78.09999999999998,
											78.09999999999998,
											78.3,
											78.09999999999998,
											78.2,
											78,
											77.59999999999998,
											78.09999999999998,
											78.2,
											77.90000000000002,
											78.3,
											77.90000000000002,
											78,
											78.09999999999998,
											78.09999999999998,
											78.09999999999998,
											78.2,
											78,
											78,
											77.90000000000002,
											78.2,
											78.5,
											77.7,
											77.90000000000002,
											78.09999999999998,
											77.59999999999998,
											78,
											78.09999999999998,
											77.90000000000002,
											78.09999999999998,
											78.09999999999998,
											77.8,
											78.09999999999998,
											78,
											78.09999999999998,
											78.3,
											78.3,
											78.2,
											78.3,
											78.40000000000002,
											78.09999999999998,
											78.2,
											78.5,
											78.40000000000002,
											77.8,
											78.2,
											78.3,
											78.2,
											78.40000000000002,
											78.2,
											78.09999999999998,
											78.5,
											78.3,
											78.3,
											77.7,
											78.09999999999998,
											77.90000000000002,
											78,
											77.8,
											77.90000000000002,
											77.90000000000002,
											77.8,
											78.59999999999998,
											78.09999999999998,
											77.90000000000002,
											78.3,
											78.3,
											77.90000000000002,
											77.7,
											77.90000000000002,
											77.59999999999998,
											78,
											77.90000000000002,
											77.90000000000002,
											78,
											77.5,
											77.90000000000002,
											77.8,
											77.90000000000002,
											77.3,
											77.40000000000002,
											77.40000000000002,
											77.59999999999998,
											77.3,
											77.5,
											77.59999999999998,
											77.90000000000002,
											77.90000000000002,
											77.7,
											77.90000000000002,
											77.8,
											78.3,
											77.7,
											77.7,
											77.7,
											78.2,
											78.2,
											78,
											78,
											78.09999999999998,
											77.59999999999998,
											77.8,
											78,
											77.90000000000002,
											78.09999999999998,
											78,
											78,
											78,
											78.09999999999998,
											78.09999999999998,
											77.7,
											78,
											77.90000000000002,
											77.8,
											77.7,
											77.8,
											77.59999999999998,
											77.8,
											77.40000000000002,
											77.5,
											77.5,
											77.40000000000002,
											77.90000000000002,
											77.8,
											77.7,
											77.8,
											78.2,
											78.7,
											77.8,
											77.90000000000002,
											78.09999999999998,
											77.8,
											78.2,
											77.7,
											78,
											78,
											78.2,
											78
										],
										"unitDimensions": "0 1 0 0 0 0 0",
										"defaultValue": "{eval bmi.weight}"
									}
								]
							}
						]
					},
					{
						"name": "Tools",
						"Notes": "",
						"DiagramX": 85,
						"DiagramY": -35,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "HTML Form",
						"Formula": {
							"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Tools</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tMath Minion has a number of tools ranging from simple expressions to solvers, optimizer and html pages like this one.\n\t\t</p>\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<b>Expression</b>\n\t\t\t\t- contains a single formula or constant.  For instance if an expression\n\t\t\t\tnamed <b>distance</b> has the formula:\n\t\t\t\t<p class=\"formula\">\n\t\t\t\t\t5 km\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tand an expression named <b>speed</b> has the formula:\n\t\t\t\t</p>\n\t\t\t\t<p class=\"formula\">\n\t\t\t\t\tdistance / 180 s\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tthen <b>speed's</b> value will be 27.78 m/s or 100 kph.\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>Data Table</b>\n\t\t\t\t\t- a data base like table with named fields (columns) of different types.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>Function Solver</b>\n\t\t\t\t\t- attempts to solve functions of the form\n\t\t\t\t</p>\n\t\t\t\t<p class=\"formula\">\n\t\t\t\t\tf(x) = 0\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tfor one or more values of <b>x</b>.  That is it attempts to come up with a set\n\t\t\t\t\tof x values such that all the function values are 0.\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>Iterator</b>\n\t\t\t\t- Math Minion's ability to work with arrays and matrices means traditional\n\t\t\t\tprogramming loops are usually not necessary, but if the need arises, this tool\n\t\t\t\tprovides a <b>for loop</b> type capability.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>Matrix</b>\n\t\t\t\t- while all Math Minion numerical values are in fact matrices, this tool allows\n\t\t\t\tyou to construct more complex entities, including cell formulas that refer to the\n\t\t\t\tvalues of other cells.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>Model</b>\n\t\t\t\t- a model is simply a container for other tools and is what is represented by the\n\t\t\t\tdiagram view.\n\t\t\t\t<p>\n\t\t\t\t\tAll Math Minion sessions have at least one root model, but models can contain other\n\t\t\t\t\tmodels, so a hierarchy of different models can be constructed.\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>ODE Solver (Integrator)</b>\n\t\t\t\t- the Ordinary Differential Equation solver is used integrate problems where:\n\t\t\t\t</p>\n\t\t\t\t<p class=\"formula\">\n\t\t\t\t\tdy/dt = f(y, t)\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tgiven an initial value for y, which can be a scalar, array or matrix.\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>Optimizer</b>\n\t\t\t\t-\tgiven some function:\n\t\t\t\t</p>\n\t\t\t\t<p class=\"formula\">y = f(x)</p>\n\t\t\t\t<p>\n\t\t\t\t\twhere y is a scalar and x can be a scalar or an array, the optimizer attempts\n\t\t\t\t\tto come up with the set of x values that produces the smallest value of y.\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>Graph</b>\n\t\t\t\t- displays a 2D or 3D plot.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>HTML Page</b>\n\t\t\t\t- used to create customized input and result views using HTML and javascript.\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<b>Imported Model</b>\n\t\t\t\t- a model that is imported from a different session.\n\t\t\t</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tTap on their respective model icons to investigate further.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
						}
					},
					{
						"name": "Function_Solver",
						"Notes": "",
						"DiagramX": 120,
						"DiagramY": 40,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "overview",
						"Objects": [
							{
								"name": "Broyden",
								"Notes": "This is the classic Broyden 3 function test system, which has the equations:\n\n3*x-cos(y*z)-0.5 = 0\n\nx^2 -81*(y+0.1)^2 + sin(z) +1.06 = 0\n\nExp(-x*y) +20*z+ (10*pi -3)/3 = 0\n\nThe solution should be:\n\n0.500000\n0\n-0.523599\n\nIn this case the entire problem is defined right in the solver object, making use of $.1, $.2 and $.3 as the solver outputs.\n\nRecall that the $ symbols in a formula is a short cut for the object that owns the formula.",
								"DiagramX": 25,
								"DiagramY": 145,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Equation Solver",
								"f0": "3 * $.1 - {cos $.2 * $.3} - 0.5",
								"c0": "1",
								"f1": "$.1*$.1 - 81*($.2 + 0.1)^2 + {sin $.3} + 1.06",
								"c1": "1",
								"f2": "{exp $.1*$.2} + 20*$.3 + (10*{pi} - 3.) / 3.0",
								"c2": "1",
								"maxIter": 200,
								"maxJacobians": 5,
								"Enabled": "y"
							},
							{
								"name": "Recycle",
								"Notes": "This model represents a highly stylized recycle operation of the sort that might occur in a chemical plant.\n\nAn input material, in the \"feed\" array, is mixed with material recycled from farther along in the plant.  The mixed material is then split by some process (here just an arbitrary formula) which results in the recycle flow and a product flow.\n\nSince, in this nonsensical example, everything that goes in must end up in the product, it serves no real point other than exercising the solver, which combines an array function with a scalar function.",
								"DiagramX": 100,
								"DiagramY": 145,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Solver",
										"Notes": "This solver has two functions defined, with the first being the differences between the calculated and estimated recycle values.  The second is a scalar function of the difference between the calculated and estimates energy recycle values.\n\nAs there are three \"components\" in the first function, the solver is actually solving for 4 simultaneous equations.\n\nYou must tell the solver how many outputs to generate for each function, so for the first function this is designated as {nrows feed}.",
										"DiagramX": 140,
										"DiagramY": 110,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Equation Solver",
										"f0": "splits - recycle",
										"c0": "{nrows feed}",
										"f1": "(qsplit - qcycle)/100",
										"c1": "1",
										"maxIter": 200,
										"maxJacobians": 5,
										"Enabled": "y"
									},
									{
										"name": "recycle",
										"Notes": "The output of the solver variable 1 is an array and is used directly as the recycle.",
										"DiagramX": 60,
										"DiagramY": 125,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "solver.1"
										}
									},
									{
										"name": "sum",
										"Notes": "        The feed and recycle\n        materials are mixed.",
										"DiagramX": 140,
										"DiagramY": 75,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "feed + recycle"
										}
									},
									{
										"name": "splits",
										"Notes": "An arbitrary function with no physical significance is used to split the combined material into a calculated recycle material.\n\nThese values  should be equal to the estimated values in the recycle object when solved.",
										"DiagramX": 225,
										"DiagramY": 75,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(sum*1:3*.3)^.9"
										}
									},
									{
										"name": "q",
										"Notes": "The amount of energy contained in the feed material.",
										"DiagramX": 60,
										"DiagramY": 250,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "100"
										}
									},
									{
										"name": "qcycle",
										"Notes": "The energy recycle, scaled\nfrom the solver variable 2.",
										"DiagramX": 60,
										"DiagramY": 175,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "Solver.2 * 10"
										}
									},
									{
										"name": "qsum",
										"Notes": "As with the material, the feed energy is added to the recycled energy.",
										"DiagramX": 140,
										"DiagramY": 250,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "q + qcycle"
										}
									},
									{
										"name": "qsplit",
										"Notes": "Another arbitrary split producing a calculated recycle energy.",
										"DiagramX": 225,
										"DiagramY": 205,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": ".1*qsum"
										}
									},
									{
										"name": "Product",
										"Notes": "What isn't recycled is the product, which should be equal to the feed when solved.",
										"DiagramX": 225,
										"DiagramY": 155,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "sum - splits"
										}
									},
									{
										"name": "QProduct",
										"Notes": "The product energy flow, which should be the same as the feed energy flow when the problem is solved.",
										"DiagramX": 225,
										"DiagramY": 250,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "qsum - qsplit"
										}
									},
									{
										"name": "feed",
										"Notes": "An arbitrary \"feed\" material.",
										"DiagramX": 60,
										"DiagramY": 75,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1:3"
										}
									}
								]
							},
							{
								"name": "Single",
								"Notes": "This model determines the intersection between two curves, specifically a parabola and a line.  Obviously this could easily be solved algebraically or even graphically, but that very simplicity makes it a useful example.\n\nThe top set of connected tools provides a visual representation of the problem, by graphing a range of x values versus the y values calculated by the parabola and line expressions.\n\nA glance at the plot shows that the line will cross the parabola in two places and indeed it is easy to determine their coordinates by zooming in and dragging the crossing points to a grid line.\n\nThe lower set of connected blocks uses the solver tool to find a value of x where the y values calculated by the two expressions are equal and hence at the intersection.",
								"DiagramX": -55,
								"DiagramY": 145,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "parabolaCopy",
										"Notes": "A copy of the \"parabola\" expression, with the x value replaced with \"solverX\".",
										"DiagramX": -325,
										"DiagramY": -105,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(SolverX+5)^2 +7"
										}
									},
									{
										"name": "lineCopy",
										"Notes": "A copy of the \"line\" expression, with the x value replaced with \"solverX\".",
										"DiagramX": -325,
										"DiagramY": -60,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "2000 - 20*SolverX"
										}
									},
									{
										"name": "Plot",
										"Notes": "A plot of the line and parabola.  Note that the line crosses the parabola twice, yielding two places where the\n\nparabola - line\n\nvalue will be zero.\n\nStrictly speaking, the Brent solver is likely to fail if the slope of the function changes sign, but an appropriate choice of starting point and range can be used to overcome that.",
										"DiagramX": -220,
										"DiagramY": -240,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Graph",
										"X1": {
											"v": "x",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "parabola",
												"vmin": "0",
												"vmax": "3500",
												"lineType": 0
											},
											"Y2": {
												"v": "line",
												"vmin": "0",
												"vmax": "3500",
												"lineType": 0
											}
										}
									},
									{
										"name": "SolverX",
										"Notes": "The output of the solver is constrained to between -1 and 1 for a single value problem.  The starting value will be 0.\n\nIn this case, I multiply the solver output by 50 and add 50 so that the starting value is 50 and the solution must be between 0 and 100.  This will constrain the solution to be on the right side of the parabola as shown in the plot.\n\nTry adding a minus sign to the first 50, so the formula becomes:\n\n-50 + Solver.1*50\n\nNow the function value is initialized and largely constrained to the left side of the parabola and the solution on that side is the one found.",
										"DiagramX": -225,
										"DiagramY": -70,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "50 + Solver.1*50"
										}
									},
									{
										"name": "parabola",
										"Notes": "An expression which calculates the y value of a parabola, give an x value(s).",
										"DiagramX": -325,
										"DiagramY": -200,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(x+5)^2 +7"
										}
									},
									{
										"name": "line",
										"Notes": "An expression which calculates a y value for the given x value(s).",
										"DiagramX": -325,
										"DiagramY": -155,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "2000 - 20*x"
										}
									},
									{
										"name": "x",
										"Notes": "A range of values used to plot the parabola and line.",
										"DiagramX": -325,
										"DiagramY": -240,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "-75:50"
										}
									},
									{
										"name": "Solver",
										"Notes": "The solver will alter its output variable (referenced as Solver.1 for the first, and in this case only, output) until the function defined as f(1) has a value of 0.\n\nThe number of outputs for a function must match the length of the array calculated by the function - in this case just 1.\n\nThe reset will set all function outputs to 0 and uncheck the Enabled box.  Check that box when you want the solver to attempt to find a solution.\n\nNote that if the solver should fail to converge, it will turn off its solve switch and will no longer attempt to resolve when its function inputs change.\n\nYou will have to return to the solver and turn on the switch when you have fixed the convergence problem.",
										"DiagramX": -225,
										"DiagramY": -105,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Equation Solver",
										"f0": "parabolaCopy - lineCopy",
										"c0": "1",
										"maxIter": 200,
										"maxJacobians": 5,
										"Enabled": "y"
									}
								]
							},
							{
								"name": "Overview",
								"Notes": "",
								"DiagramX": -55,
								"DiagramY": 115,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThe equation solver tool modifies one or more output values until the function values calculated from those outputs are zero.  If there is a single scalar output, then the Brent method is used, with the output value limited to the range -1 to 1 (the function calculation can of course scale that to anything).\n\t\t</p>\n\t\t<p>\n\t\t\tIf it is a multi value problem, then the Broyden method is used and while in that case the output values can exceed the -1 to 1 range, it is still good practice  to scale the problem so all values are relatively normalized.\n\t\t</p>\n\t\t<p>\n\t\t\tHave a look at solver examples in this model.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
								}
							}
						]
					}
				]
			},
			{
				"name": "Units",
				"Notes": "",
				"DiagramX": 70,
				"DiagramY": 50,
				"HideInfo": "n",
				"DiagramNotes": "n",
				"Type": "Model",
				"diagramScale": 1,
				"Objects": [
					{
						"name": "Units",
						"Notes": "The Math Minion unit conversion system is deeply integrated with the calculation engine, which permits dimensional analysis on all calculations.\n\nPlease take time to read about it in the documentation.\n\nTo do so, tap the question mark icon on the top toolbar, then tap the Contents button and select Conversion Units.",
						"DiagramX": -65,
						"DiagramY": 5,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "32.174 ft/s^2"
						}
					},
					{
						"name": "Length",
						"Notes": "An expression with a length unit.",
						"DiagramX": -70,
						"DiagramY": 110,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "20 km"
						}
					},
					{
						"name": "Hours",
						"Notes": "An expression with a time unit of hours",
						"DiagramX": -70,
						"DiagramY": 150,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "0.25 h"
						}
					},
					{
						"name": "Minutes",
						"Notes": "A time value with a unit of minutes.",
						"DiagramX": -70,
						"DiagramY": 190,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "30 min"
						}
					},
					{
						"name": "Velocity",
						"Notes": "When a length is divided by time, the resulting value will be a velocity.",
						"DiagramX": 35,
						"DiagramY": 5,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "Length / Hours"
						}
					},
					{
						"name": "AddTimes",
						"Notes": "You can't add values with different fundamental properties, but adding values with different units of the same type is always allowed.",
						"DiagramX": 35,
						"DiagramY": 50,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "Hours + Minutes"
						}
					},
					{
						"name": "Fraction",
						"Notes": "The default dimensionless unit for all the built-in unit sets is fraction.  Despite the name, these values are not constrained to be from 0 to 1 or 0 to 100.\n\nAs used in Math Minion, \"Fraction\" is just a generic description for  values which have powers of 0 for all of the fundamental SI properties.\n\nIn this expression, dividing the minutes value by the hours one causes the units to cancel out and the result is a \"Fraction\" value of 2.",
						"DiagramX": 35,
						"DiagramY": 105,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "Minutes / Hours"
						},
						"displayUnit": "Fraction"
					},
					{
						"name": "mph",
						"Notes": "This is the velocity value displayed in miles per hour.  The display unit is selected by tapping the displayed unit name.",
						"DiagramX": 115,
						"DiagramY": 5,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "Velocity"
						},
						"displayUnit": "mph"
					},
					{
						"name": "TableColumns",
						"Notes": "If the expression result is a table value, you can tap on the column name cell to enable selecting the display unit for that column.\n\nIf this case the default time unit of seconds has been replaced with hours in the first column, while the velocity unit has been left as the default.",
						"DiagramX": 115,
						"DiagramY": 65,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "{table {cc \"Times\", \"Velocity\"}\n\tAddTimes,\n\tVelocity\n}"
						},
						"tableUnits": {
							"1": "h"
						}
					}
				]
			},
			{
				"name": "tidbits",
				"Notes": "",
				"DiagramX": 70,
				"DiagramY": 75,
				"HideInfo": "n",
				"DiagramNotes": "n",
				"Type": "Model",
				"diagramScale": 1,
				"Objects": [
					{
						"name": "geoping",
						"Notes": "Minimum time to ping geosynchronous satellite if you are right under it on the equator",
						"DiagramX": 115,
						"DiagramY": 270,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "2 * 35786 \"km\"/ 1\"lightc\""
						},
						"displayUnit": "s"
					},
					{
						"name": "pascal",
						"Notes": "Calculates a Pascal triangle.",
						"DiagramX": 35,
						"DiagramY": 315,
						"HideInfo": "n",
						"DiagramNotes": "y",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "pascal",
								"Notes": "Constructs a Pascal triangle.  Since it has to fit in a table it's shape is skewed into a right angled triangle.",
								"DiagramX": 100,
								"DiagramY": 95,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Matrix",
								"CellInputs": {
									"0_0": "{if {if {eq {row} 1}, {eq {col}, $.ncol},0},\n  1,\n  {if {row}-1,\n    {if {lt {col}, $.ncol},\n      {cell -1,1} + {cell -1, 0},\n      {cell -1, 0}},\n    0\n  }\n}",
									"1_100": "1"
								},
								"rowCount": "n",
								"columnCount": "n"
							},
							{
								"name": "n",
								"DiagramX": 20,
								"DiagramY": 95,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": " 20"
								},
								"isInput": "y"
							},
							{
								"name": "triangle",
								"DiagramX": 185,
								"DiagramY": 95,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "pascal"
								},
								"isOutput": "y"
							}
						]
					},
					{
						"name": "triangle",
						"Notes": "Hmmm, matrices aren't triangular, so this triangle is skewed to the right, with the top element being in the rightmost  column of the top row.",
						"DiagramX": 115,
						"DiagramY": 315,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "pascal.triangle"
						}
					},
					{
						"name": "e_mc2",
						"Notes": "Energy from total annihilation of mass.  I.e. E = mc^2",
						"DiagramX": 35,
						"DiagramY": 270,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "85 \"kg\" * 1 \"lightc\"^2"
						},
						"displayUnit": "megatontnt"
					},
					{
						"name": "mpg_to_lp100km",
						"Notes": "Converts miles per US gallon to liters per 100 km.",
						"DiagramX": 40,
						"DiagramY": 225,
						"HideInfo": "n",
						"DiagramNotes": "y",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "mpg",
								"DiagramX": -50,
								"DiagramY": 40,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "17 mile/gal"
								},
								"isInput": "y",
								"displayUnit": "mile/gal"
							},
							{
								"name": "lp100km",
								"DiagramX": 40,
								"DiagramY": 30,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "1/mpg"
								},
								"isOutput": "y",
								"displayUnit": "lp100km"
							},
							{
								"name": "kmpl",
								"DiagramX": 40,
								"DiagramY": 50,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "mpg"
								},
								"isOutput": "y",
								"displayUnit": "km/l"
							}
						]
					},
					{
						"name": "lp100km_to_mpg",
						"Notes": "Converts liters per 100 km into miles per US gallon.",
						"DiagramX": 120,
						"DiagramY": 225,
						"HideInfo": "n",
						"DiagramNotes": "y",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "lp100km",
								"DiagramX": -48.33332824707031,
								"DiagramY": -1.555583953857422,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "7 lp100km"
								},
								"isInput": "y",
								"displayUnit": "lp100km"
							},
							{
								"name": "mpg",
								"DiagramX": -50,
								"DiagramY": 25,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "1/lp100km"
								},
								"isOutput": "y",
								"displayUnit": "mile/gal"
							},
							{
								"name": "kmpl",
								"DiagramX": -50,
								"DiagramY": 50,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "mpg"
								},
								"isOutput": "y",
								"displayUnit": "km/l"
							}
						]
					},
					{
						"name": "Constants",
						"Notes": "Miscellaneous physical constants.\n\nHopefully all correct, but user beware!",
						"DiagramX": 40,
						"DiagramY": 170,
						"HideInfo": "n",
						"DiagramNotes": "y",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "Planck",
								"Notes": "h - Planck constant",
								"DiagramX": 15,
								"DiagramY": 45,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "6.62606957e-34 J-s"
								}
							},
							{
								"name": "GNewton",
								"Notes": "G - Newtonian constant of gravitation.",
								"DiagramX": 15,
								"DiagramY": 80,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "6.67384E-11 m^3/kg-s^2"
								}
							},
							{
								"name": "GasConstant",
								"Notes": "R - ideal gas constant.",
								"DiagramX": 15,
								"DiagramY": 120,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "8.3144621 J/K-mol"
								}
							},
							{
								"name": "Avogadro",
								"Notes": "Na- Avogadro's number - the number of molecules in a mole",
								"DiagramX": 15,
								"DiagramY": 155,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "6.02214129e23 1/mol"
								}
							},
							{
								"name": "Boltzmann",
								"Notes": "k - Boltzmann's constant",
								"DiagramX": 15,
								"DiagramY": 190,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "1.3806488e-23 j/k"
								}
							},
							{
								"name": "AtomicMassUnit",
								"Notes": "mu - Atomic mass unit",
								"DiagramX": 90,
								"DiagramY": 45,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "1.660538921e-27 kg"
								}
							},
							{
								"name": "ElectronMass",
								"Notes": "me - electron mass",
								"DiagramX": 90,
								"DiagramY": 80,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "9.109382991e-31 kg"
								}
							},
							{
								"name": "ProtonMass",
								"Notes": "mp - proton mass",
								"DiagramX": 90,
								"DiagramY": 120,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "1.672621777e-27 kg"
								}
							},
							{
								"name": "ElementaryCharge",
								"Notes": "e - elementary charge",
								"DiagramX": 90,
								"DiagramY": 155,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "1.602176565e-19 C"
								}
							},
							{
								"name": "ElectronVolt",
								"Notes": "eV - electron volt",
								"DiagramX": 90,
								"DiagramY": 190,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "1.602176565e-19 j"
								}
							}
						]
					}
				]
			},
			{
				"name": "A_Simple_Calc",
				"Notes": "",
				"DiagramX": 70,
				"DiagramY": 25,
				"HideInfo": "n",
				"DiagramNotes": "n",
				"Type": "Model",
				"diagramScale": 1,
				"indexTool": "Calc_Overview",
				"Objects": [
					{
						"name": "circle",
						"Notes": "A model which calculates the circumference and area of a circle, given the radius.\n\nIts expressions have the input and output switches set so they are exposed to the parent model.\n\nTap the icon above to view the model diagram.",
						"DiagramX": 350,
						"DiagramY": -40,
						"HideInfo": "n",
						"DiagramNotes": "y",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "Circle_Overview",
						"Objects": [
							{
								"name": "radius",
								"Notes": "By turning on the input switch in this expression’s info view, the variables used in\nthe expression formula refer\nto those of the parent.",
								"DiagramX": 20,
								"DiagramY": 80,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "diameter / 2"
								},
								"isInput": "y"
							},
							{
								"name": "circumference",
								"Notes": "",
								"DiagramX": 105,
								"DiagramY": 110,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "2*radius*{pi}"
								},
								"isOutput": "y"
							},
							{
								"name": "area",
								"Notes": "Turning on the output switch allows the parent to access the result of this expression using normal dot notation as in:\n\ncircle.area",
								"DiagramX": 105,
								"DiagramY": 45,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{pi}*radius^2"
								},
								"isOutput": "y"
							},
							{
								"name": "xyplot",
								"Notes": "Plot the circle from cart as well as one half the size.",
								"DiagramX": 105,
								"DiagramY": 180,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Graph",
								"X1": {
									"v": "coordinates.x 'X1",
									"vmin": "",
									"vmax": "",
									"Y1": {
										"v": "coordinates.y 'Y1",
										"vmin": "",
										"vmax": "",
										"lineType": 0
									}
								},
								"X2": {
									"v": "$.x1/2 'X2",
									"vmin": "",
									"vmax": "",
									"Y1": {
										"v": "$.y1/2 'Y2",
										"vmin": "",
										"vmax": "",
										"lineType": 0
									}
								}
							},
							{
								"name": "Circle_Overview",
								"Notes": "Overview",
								"DiagramX": 20,
								"DiagramY": 45,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h4>Circle Overview</h4>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tExpressions have input and output switched\\s that are normally off, but can be turned on to indicate that the expression can interact with parent of the model that contains it.\n\t\t</p>\n\t\t<p>\n\t\t\tIf the input switch is on, then any tool names used in the expression will refer to tools in the parent model, rather than the model containing the expression. In this case, the expression <b>radius</b> has its input switch turned on and so its formula:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tdiameter / 2\n\t\t</p\n\t\t<p>\n\t\t\tlooks for a value called diameter in the A_Simple_Calc model, not the circle model.\n\t\t</p>\n\t\t<p>\n\t\t\tBoth the <b>area</b> and <b>circumference</b> expressions have their output switches turned on and so can be reference from the parent model, A_Simple_Calc, by a formula like:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tcircle.area\n\t\t</p>\n\t\t<p>\n\t\t\tThey can also be used with in the circle model itself like normal expressions.\n\t\t</p>\n\t\t<p>\n\t\t\tTake a look at the radius, area and circumference expressions and then have a look at the <b>Coordinates_Calc</b> tool.\n\t\t</p> \n\t\t\t\n\t\t<p>\n\t\t\tWhen you are done. return to the parent model by tapping on the <b>&gt; A_Simple_Calc</b> button at the upper right of the diagram.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
								}
							},
							{
								"name": "coordinates",
								"Notes": "Calculate the x-y coordinates for a circle with a radius equal to radius.",
								"DiagramX": 105,
								"DiagramY": 135,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{cart radius[1,1], 1:60 / 30  * {pi}}"
								}
							},
							{
								"name": "Coordinates_Calc",
								"Notes": "Explanation of the calculation of the coordinates expression",
								"DiagramX": 20,
								"DiagramY": 135,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h4>Calculation of Cart</h4>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThe formula in the <b>coordinates</b> expression:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\t{cart radius[1,1], 1:60 / 30  * {pi}}\n\t\t</p>\n\t\t<p>\n\t\t\tis a bit more complicated. Library functions are called by enclosing them in curly braces, with the name of the function immediately after the opening brace. The parameters, if any, follow in a comma separated list.\n\t\t</p>\n\t\t<p>\n\t\t\tThus in the formula above there are two functions, <b>cart</b> and <b>pi</b>. The pi function doesn't take any parameters and just returns the value of pi.\n\t\t</p>\n\t\t<p>\n\t\t\tThe cart function calculates the cartesian coordinates from a radius and an angle. Specifically for:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\t{cart r, a}\n\t\t</p>\n\t\t<p>\n\t\t\tcart returns a table value with the first column being the <b>x</b> value and the second being the <b>y</b> of the radius <b>r</b> and angle <b>a</b> converted to cartesian coordinates.\n\t\t</p>\n\t\t<p>\n\t\t\tTable value columns can be referenced using dot notation, so <b>coordinates.x</b> would return an array corresponding to the rows of the <b>x</b> column.  These are used in the <b>xyplot</b> tool to graph the circle.\n\t\t</P>\n\t\t<p>\n\t\t\tThe first parameter to the cart function is <b>radius[1,1]</b>. The <b>[1,1]</b> index operator specifies we just want the value in the first row and column so it is guaranteed to be a scalar.\n\t\t</p>\n\t\t<p>\n\t\t\tThe second parameter, <b>1:60 / 30 * {pi}</b> creates an array of integers from 1 to 60 using the <b>:</b> operator. This is then divided by 30 giving 60 values evenly spaced up to 2. This array is then multiplied by pi to give an array of angles up to 2pi, which is of course the number of radians in a circle.\n\t\t</p> \n\t\t</div>\n\t</body>\n</html>"
								}
							}
						]
					},
					{
						"name": "diameter",
						"Notes": "An expression containing a constant with a unit of\nlength.\n",
						"DiagramX": 275,
						"DiagramY": -40,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "3 m"
						}
					},
					{
						"name": "Calc_Overview",
						"Notes": "Overview",
						"DiagramX": 275,
						"DiagramY": 5,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "HTML Form",
						"Formula": {
							"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h4>A Simple Calculation</h4>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tIn this model the expression called <b>diameter</b> is used\n\t\t\tas input to a child model called <b>circle</b> which calculates the area and circumference for that diameter.\n\t\t</p>\n\t\t<p>\n\t\t\tThe <b>circle</b> model designates an expression called <b>area</b> as an outlet, so it can be accessed in the parent model by the formula:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tarea.circle\n\t\t</p>\n\t\t<p>\n\t\t\twhich is what the <b>areaOfCircle</b> expression does.\n\t\t</p>\n\t\t<p>\n\t\t\tTap on the <b>Circle</b> model icon to see how it works and\n\t\t\twhen done, return here and tap on the <b>Bit_Less_Simple</b>\n\t\t\tmodel icon.\n\t\t</p>\n\t\t\n\t\t\t\n\t\t</div>\n\t</body>\n</html>"
						}
					},
					{
						"name": "areaOfCircle",
						"Notes": "Retrieve a calculated outlet expression for area from the circle model.",
						"DiagramX": 435,
						"DiagramY": -40,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "circle.area"
						}
					},
					{
						"name": "Bit_Less_Simple",
						"Notes": "",
						"DiagramX": 435,
						"DiagramY": 10,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "a",
								"Notes": "An expression containing a constant with a unit of\nlength.\n",
								"DiagramX": 280,
								"DiagramY": -45,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "3 m"
								}
							},
							{
								"name": "b",
								"Notes": "Another length constant.",
								"DiagramX": 280,
								"DiagramY": 0,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "43 in"
								}
							},
							{
								"name": "area",
								"Notes": "Retrieve the calculated outlet expression for area from the circle model.\n\nSince the input was a matrix, the result is also a matrix, with elements determined by applying the calculation to each element of the input matrix.",
								"DiagramX": 450,
								"DiagramY": -20,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "circle.area"
								}
							},
							{
								"name": "diameters",
								"Notes": "A 2x2 matrix with some values.\n\nTap on a cell or header to see its formula.\n\nThe value for a cell is determined by first checking to see if it has a formula itself and if not then its corresponding row header, column header and finally the origin header upper left in that order.",
								"DiagramX": 280,
								"DiagramY": 35,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Matrix",
								"unit": "m",
								"CellInputs": {
									"0_0": "1 m",
									"2_1": "b",
									"0_2": "a+b",
									"1_1": "a"
								},
								"rowCount": "2",
								"columnCount": "2"
							},
							{
								"name": "circle",
								"Notes": "A model which calculates the circumference and area of a circle, given the radius.\n\nIts expressions have the input and output switches set so they are exposed to the parent model.\n\nTap the icon above to view the model diagram.",
								"DiagramX": 360,
								"DiagramY": -15,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "Circle_Overview",
								"Objects": [
									{
										"name": "radius",
										"Notes": "By turning on the input switch in this expression’s info view, the variables used in\nthe expression formula refer\nto those of the parent.",
										"DiagramX": 20,
										"DiagramY": 80,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "diameters / 2"
										},
										"isInput": "y"
									},
									{
										"name": "circumference",
										"Notes": "",
										"DiagramX": 105,
										"DiagramY": 110,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "2*radius*{pi}"
										},
										"isOutput": "y"
									},
									{
										"name": "area",
										"Notes": "Turning on the output switch allows the parent to access the result of this expression using normal dot notation as in:\n\ncircle.area",
										"DiagramX": 105,
										"DiagramY": 45,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{pi}*radius^2"
										},
										"isOutput": "y"
									},
									{
										"name": "xyplot",
										"Notes": "Plot the circle from cart as well as one half the size.",
										"DiagramX": 105,
										"DiagramY": 180,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Graph",
										"X1": {
											"v": "coordinates.x 'X1",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "coordinates.y 'Y1",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											}
										},
										"X2": {
											"v": "$.x1/2 'X2",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "$.y1/2 'Y2",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											}
										}
									},
									{
										"name": "Circle_Overview",
										"Notes": "Overview",
										"DiagramX": 20,
										"DiagramY": 45,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h4>Circle Overview</h4>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tExpressions have input and output switched\\s that are normally off, but can be turned on to indicate that the expression can interact with parent of the model that contains it.\n\t\t</p>\n\t\t<p>\n\t\t\tIf the input switch is on, then any tool names used in the expression will refer to tools in the parent model, rather than the model containing the expression. In this case, the expression <b>radius</b> has its input switch turned on and so its formula:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tdiameter / 2\n\t\t</p\n\t\t<p>\n\t\t\tlooks for a value called diameter in the A_Simple_Calc model, not the circle model.\n\t\t</p>\n\t\t<p>\n\t\t\tBoth the <b>area</b> and <b>circumference</b> expressions have their output switches turned on and so can be reference from the parent model, A_Simple_Calc, by a formula like:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tcircle.area\n\t\t</p>\n\t\t<p>\n\t\t\tThey can also be used with in the circle model itself like normal expressions.\n\t\t</p>\n\t\t<p>\n\t\t\tTake a look at the radius, area and circumference expressions and then have a look at the <b>Coordinates_Calc</b> tool.\n\t\t</p> \n\t\t\t\n\t\t<p>\n\t\t\tWhen you are done. return to the parent model by tapping on the <b>&gt; A_Simple_Calc</b> button at the upper right of the diagram.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										}
									},
									{
										"name": "coordinates",
										"Notes": "Calculate the x-y coordinates for a circle with a radius equal to radius.",
										"DiagramX": 105,
										"DiagramY": 135,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cart radius[1,1], 1:60 / 30  * {pi}}"
										}
									},
									{
										"name": "Coordinates_Calc",
										"Notes": "Explanation of the calculation of the coordinates expression",
										"DiagramX": 20,
										"DiagramY": 135,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h4>Calculation of Cart</h4>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThe formula in the <b>coordinates</b> expression:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\t{cart radius[1,1], 1:60 / 30  * {pi}}\n\t\t</p>\n\t\t<p>\n\t\t\tis a bit more complicated. Library functions are called by enclosing them in curly braces, with the name of the function immediately after the opening brace. The parameters, if any, follow in a comma separated list.\n\t\t</p>\n\t\t<p>\n\t\t\tThus in the formula above there are two functions, <b>cart</b> and <b>pi</b>. The pi function doesn't take any parameters and just returns the value of pi.\n\t\t</p>\n\t\t<p>\n\t\t\tThe cart function calculates the cartesian coordinates from a radius and an angle. Specifically for:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\t{cart r, a}\n\t\t</p>\n\t\t<p>\n\t\t\tcart returns a table value with the first column being the <b>x</b> value and the second being the <b>y</b> of the radius <b>r</b> and angle <b>a</b> converted to cartesian coordinates.\n\t\t</p>\n\t\t<p>\n\t\t\tTable value columns can be referenced using dot notation, so <b>coordinates.x</b> would return an array corresponding to the rows of the <b>x</b> column.  These are used in the <b>xyplot</b> tool to graph the circle.\n\t\t</P>\n\t\t<p>\n\t\t\tThe first parameter to the cart function is <b>radius[1,1]</b>. The <b>[1,1]</b> index operator specifies we just want the value in the first row and column so it is guaranteed to be a scalar.\n\t\t</p>\n\t\t<p>\n\t\t\tThe second parameter, <b>1:60 / 30 * {pi}</b> creates an array of integers from 1 to 60 using the <b>:</b> operator. This is then divided by 30 giving 60 values evenly spaced up to 2. This array is then multiplied by pi to give an array of angles up to 2pi, which is of course the number of radians in a circle.\n\t\t</p> \n\t\t</div>\n\t</body>\n</html>"
										}
									}
								]
							}
						]
					}
				]
			},
			{
				"name": "Formulas",
				"Notes": "",
				"DiagramX": 145,
				"DiagramY": 25,
				"HideInfo": "n",
				"DiagramNotes": "n",
				"Type": "Model",
				"diagramScale": 1,
				"indexTool": "Formulas",
				"Objects": [
					{
						"name": "Operators",
						"DiagramX": -75,
						"DiagramY": -20,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "scalar",
								"Notes": "A simple scalar constant, without units",
								"DiagramX": 45,
								"DiagramY": 50,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "1.5"
								}
							},
							{
								"name": "small",
								"Notes": "Shows the use of exponential input",
								"DiagramX": 45,
								"DiagramY": 85,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "-4.23e-5"
								}
							},
							{
								"name": "operators",
								"Notes": "The binary operators are:\n\n+ Add\n- Minus\n* Multiply\n/ Divide\n^ Power\n% Modulus\n: Range (see the \"Range\" object)\n\nThe precedence is (from higher to lower):\n\n:\n^\n* / %\n+ -\n\nParenthesis can be used as required to specify the calculation order.\n\nSee “Arrays” in the parent model for examples of how these work with arrays and matrices.",
								"DiagramX": 135,
								"DiagramY": 50,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "(scalar * 2 + 1)^(2-small)"
								}
							}
						]
					},
					{
						"name": "Functions",
						"DiagramX": -75,
						"DiagramY": 0,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "functions",
						"Objects": [
							{
								"name": "scalar",
								"Notes": "A simple scalar constant, without units",
								"DiagramX": 115,
								"DiagramY": 25,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "1.5"
								}
							},
							{
								"name": "Functions",
								"Notes": "Functions overview",
								"DiagramX": 40,
								"DiagramY": 25,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Functions</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tA function call in Math Minion consists of an opening curly brace \"{\" immediately followed by the function name, followed by a space and a comma separated list of parameters as appropriate and finally a closing curly brace \"}\".\n\t\t</p>\n\t\t<p>\n\t\t\tIn this case the <b>log</b> expression calculates the natural logarithm of the value of the \"scalar\" object.\n\t\t</p>\n\t\t<p>\n\t\t\tWhen used with arrays and matrices, the function is applied to each element of the parameter(s) in turn, except for some matrix specific functions, like \"dot\", \"invert\", \"transpose\", etc.\n\t\t</p>\n\t\t</p>\n\t\t\tWhen entering a formula, use the <b>{f}</b> button in the function editor to see a list of available functions.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
								}
							},
							{
								"name": "log",
								"Notes": "Uses the ln function to calculate the natural logarithm of scalar.",
								"DiagramX": 115,
								"DiagramY": 65,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{ln scalar}"
								}
							}
						]
					},
					{
						"name": "Scalars",
						"DiagramX": -75,
						"DiagramY": -40,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "scalar",
								"Notes": "A simple scalar constant, without units. \n\nTap on the icon to see the expression information view.\n",
								"DiagramX": 35,
								"DiagramY": 10,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "1.5"
								}
							},
							{
								"name": "small",
								"Notes": "Shows the use of exponential input",
								"DiagramX": 125,
								"DiagramY": 10,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "-4.23e-5"
								}
							},
							{
								"name": "WithUnits",
								"Notes": "A scalar constant with a designated unit, in this case \"cm\".\n\nThe output is reported in \"m\" as that is the default output unit for length in the currently selected unit system.  \n\nThe displayed unit can be changed by tapping on the info button to the right of the output unit.\n\nSee \"Units\" in the main model for a more examples of Math Minion's conversion unit system and its ability to help with dimensional analysis.",
								"DiagramX": 35,
								"DiagramY": 70,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "50 cm"
								}
							}
						]
					},
					{
						"name": "Arrays",
						"Notes": "",
						"DiagramX": -75,
						"DiagramY": 20,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "Range",
								"Notes": "Create a column array with range operator :",
								"DiagramX": 20,
								"DiagramY": 15,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Range",
										"Notes": "The range operator \":\" can be used to create a column array with integer values starting at the first operand value and proceeding in increments of 1 to the second operand value.\n\nHere 1:20 produces an array:\n\n1,2,3,4,…19,20",
										"DiagramX": 20,
										"DiagramY": 15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1:20"
										}
									},
									{
										"name": "Range_2",
										"Notes": "Combined with other arithmetic operators, this can be used to initialize value arrays of any sort.  For instance:\n\n1:20 * 2\n\nwould result in an array 20 long having members:\n\n2, 4, 6, 8, ... 38, 40\n",
										"DiagramX": 20,
										"DiagramY": 105,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1:20 * 2"
										}
									},
									{
										"name": "Range_3",
										"Notes": "The range operator has the highest precedence, so you would need the parenthesis in the following to get an array from 1 to 40:\n\n1:(20*2)\n \nYou can scroll the result display by dragging to see additional members.  \n\nDragging the row header column will scroll quickly.",
										"DiagramX": 105,
										"DiagramY": 15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1:(20*2)"
										}
									}
								]
							},
							{
								"name": "Transpose",
								"Notes": "Change a column array to row array.",
								"DiagramX": 20,
								"DiagramY": 55,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Array",
										"Notes": "A column array from 1 to 20",
										"DiagramX": 25,
										"DiagramY": 35,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1:20"
										}
									},
									{
										"name": "Transpose",
										"Notes": "The transpose function can be used to rotate a matrix.  In this case it has transformed the column array “array” into a row array.\n\nYou can scroll result matrix by dragging to see additional values.\n\nDragging on the column header will scroll quickly.",
										"DiagramX": 100,
										"DiagramY": 35,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{transpose array}"
										}
									}
								]
							},
							{
								"name": "Multiply",
								"Notes": "Multiplying an array by a scalar.",
								"DiagramX": 95,
								"DiagramY": 55,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Array",
										"Notes": "A column array from 1 to 20.",
										"DiagramX": 45,
										"DiagramY": 60,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1:20"
										}
									},
									{
										"name": "WithUnits",
										"Notes": "A scalar constant of 50 cm.\n",
										"DiagramX": 45,
										"DiagramY": 95,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "50 cm"
										}
									},
									{
										"name": "multiply",
										"Notes": "The column array “Array” is multiplied by the scalar \"WithUnits\".\n\nThe result is a column array with each element of “Array” multiplied by the value of \"WithUnits\".\n\nSince \"WithUnits\" has a unit of length and “Array” has no units, the result also has a unit of length.\n\nNote that we could not have added these two values since Math Minion does not permit values with different unit types to be added.\n\nWe could of course have multiplied “Array” with a suitable constant that had a length unit before adding them though.\n\nSee \"Units” in the root model for more examples of conversion units.",
										"DiagramX": 135,
										"DiagramY": 60,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "WithUnits*Array"
										}
									}
								]
							},
							{
								"name": "Indices",
								"Notes": "Getting array and matrix elements.",
								"DiagramX": 95,
								"DiagramY": 95,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Matrix",
										"Notes": "The array function is used to generate a 20 x 20 matrix.",
										"DiagramX": 25,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{array 20, 20, 1:400}"
										}
									},
									{
										"name": "indices",
										"Notes": "Elements of a value can be accessed by using indices inside square brackets.\n\nThe indices can be arrays themselves.  \n\nIn this case I have used ranges to create a subset of the “Matrix” expression value.",
										"DiagramX": 115,
										"DiagramY": 5,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "matrix[5:6,2:3]"
										}
									},
									{
										"name": "rowIndex",
										"Notes": "If only the row index is given, the entire row(s) is returned.",
										"DiagramX": 115,
										"DiagramY": 90,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "Matrix[5]"
										}
									},
									{
										"name": "columnIndex",
										"Notes": "To select entire columns, an index of 0 can be used for the row index.",
										"DiagramX": 115,
										"DiagramY": 135,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "matrix[0,5]"
										}
									}
								]
							},
							{
								"name": "Array_Function",
								"Notes": "Function to create an array or matrix.",
								"DiagramX": 95,
								"DiagramY": 15,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Matrix",
										"Notes": "The array function in this expression\n\n{array 3, 2, 1:2}\n\nhas three parameters, in which case the first is the number of rows and the second the number of columns the resulting matrix should have.\n\nThe third parameter is the value(s) that the elements should have and if it is an array, then its values are used in order on a row by row basis until the matrix if filled.\n\nHere the value parameter is an array with the elements 1 and 2.",
										"DiagramX": 110,
										"DiagramY": 10,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{array 3, 2, 1:2}"
										}
									},
									{
										"name": "Array",
										"Notes": "Arrays and matrices can be created with the array function.  This takes either two or three parameters.\n\nIf there are only two parameters, as with this expression,\n\n{array 5, 2}\n\nthen the first is the number of rows the resulting column array should have.\n\nThe second parameter will be the value(s) to be placed in array elements.\n\nIf this second parameter is itself an array, its values will be cycled through in order until the new array is completely populated.\n",
										"DiagramX": 20,
										"DiagramY": 10,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{array 5, 2}"
										}
									}
								]
							},
							{
								"name": "ColXRow",
								"Notes": "More general multiplication of arrays and matrices.",
								"DiagramX": 20,
								"DiagramY": 95,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "overview",
								"Objects": [
									{
										"name": "Column",
										"Notes": "A column array from 1 to 20.",
										"DiagramX": 105,
										"DiagramY": -20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1:20"
										}
									},
									{
										"name": "Row",
										"Notes": "A row array from 21 to 40",
										"DiagramX": 15,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{tr 21:40}"
										}
									},
									{
										"name": "Overview",
										"Notes": "Overview of arithmetic operations between matrices of different shapes.",
										"DiagramX": 15,
										"DiagramY": -20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tWhen any binary arithmetic operator is used between two matrices of different shapes, the result is a matrix with the number of rows and columns each equal to the larger of the respective values for the two operands.\n\t\t</p>\n\t\t<p>\n\t\t\tThus a 2x8 matrix added to a 4x2 matrix will yield a 4x8 result. The value at row i and column j will be the product of the values at the corresponding indices in the operands.\n\t\t</p>\n\t\t<p>\n\t\t\tWhen the index is greater than the number of rows or columns for the operand, the row and column values are repeated in order as necessary to fill in the result.\n\t\t</p>\n\t\t<p>\n\t\t\tIn this case a column array is multiplied by a row array to produce a matrix.\n\t\t</p>\n\t\t<p>\n\t\t\tNote that if a <b>matrix product</b>, i.e. an inner product, is required, use the <b>dot</b> function.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										}
									},
									{
										"name": "ColXRow",
										"Notes": "Column times row",
										"DiagramX": 105,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "column * row"
										}
									}
								]
							},
							{
								"name": "Concatenate",
								"Notes": "Concatenating values into an array.",
								"DiagramX": 20,
								"DiagramY": -20,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "scalarNumbers",
										"Notes": "Perhaps the most common way to make an array is with the concatenate function cc.\n\nIt simply combines all the values of its arguments into a column array. If an argument is a matrix, its values are taken row by row.\n\nThe arguments must all have the same unit type.",
										"DiagramX": 20,
										"DiagramY": -15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc 1, 5, 6}"
										}
									},
									{
										"name": "arrays",
										"Notes": "In this case two arrays are concatenated.",
										"DiagramX": 105,
										"DiagramY": -15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc scalarNumbers {cc -1, -100, -1000}}"
										}
									},
									{
										"name": "array123",
										"Notes": "a 4x3 matrix of metre values",
										"DiagramX": 105,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc 1, 2, 3} * 1 m"
										}
									},
									{
										"name": "matrix",
										"Notes": "A 2x3 matrix of random value between 0 and 10 metres",
										"DiagramX": 105,
										"DiagramY": 55,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"unit": "m",
										"CellInputs": {
											"0_0": "{row}  * 1 m + {col} * 10 m"
										},
										"rowCount": "2",
										"columnCount": "3"
									},
									{
										"name": "mixedSize",
										"Notes": "Shows concatenating an array and a matrix and how the matrix is unwound.",
										"DiagramX": 105,
										"DiagramY": 95,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc array123, matrix}"
										}
									}
								]
							},
							{
								"name": "Append",
								"Notes": "Appending columns",
								"DiagramX": 95,
								"DiagramY": -20,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "mArray",
										"Notes": "An array of meter values from to 10 to 50 in 10 m increments",
										"DiagramX": 15,
										"DiagramY": 30,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1:5 * 10 m"
										}
									},
									{
										"name": "mMatrix",
										"Notes": "A matrix of metre values representing the row and column position",
										"DiagramX": 15,
										"DiagramY": 70,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"unit": "m",
										"CellInputs": {
											"0_0": "{row} * 1 m + {col} * 10 m"
										},
										"rowCount": "5",
										"columnCount": "2"
									},
									{
										"name": "AppendSameUnit",
										"Notes": "Appending adds columns together to form a matrix of all the columns.\n\nAll columns must have the same number of rows.",
										"DiagramX": 100,
										"DiagramY": 30,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{append mArray, mMatrix}"
										}
									},
									{
										"name": "kgArray",
										"Notes": "An array of meter values from to 10 to 50 in 10 m increments",
										"DiagramX": 15,
										"DiagramY": 110,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1:5 * 10 kg"
										}
									},
									{
										"name": "AppendDifferent",
										"Notes": "Appending arrays with different unit types or numbers and strings will result in a table value with column numbers being used as the column names",
										"DiagramX": 100,
										"DiagramY": 110,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{append kgArray, mMatrix, sArray}"
										}
									},
									{
										"name": "sArray",
										"Notes": "A string array",
										"DiagramX": 15,
										"DiagramY": 150,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc \"a\",\"b\",\"c\",\"d\",\"e\"}"
										}
									}
								]
							}
						]
					},
					{
						"name": "Comparisons",
						"Notes": "",
						"DiagramX": -75,
						"DiagramY": 40,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "Array_Length",
								"Notes": "An array of lengths.",
								"DiagramX": 20,
								"DiagramY": 20,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "0:4 * 1 m"
								}
							},
							{
								"name": "Array_if",
								"Notes": "The \"if\" function and associated comparison functions can be used to create calculation branches.\n\nThe formula looks like this:\n\n{if {le array_length, 0 m},\n  1 cm,\n  array_length\n}\n\nThis shows a number of interesting features, such as functions with multiple parameters, functions nested in functions and the use of units in formulas.",
								"DiagramX": 105,
								"DiagramY": 20,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{if {le array_length, 0 m},\n  1 cm,\n  array_length\n}"
								}
							},
							{
								"name": "Scalar_If",
								"Notes": "This “if” function returns the lessor of 2 m or Scalar_Length.\n\nIt could be done more succinctly with\n\n{min 2 m, scalar_length}",
								"DiagramX": 20,
								"DiagramY": 105,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{if {lt 2 m, scalar_length},\n  2 m,\n  scalar_length\n}"
								}
							},
							{
								"name": "if_parameters",
								"Notes": "The if function takes three parameters:\n\nIf the first parameter is unknown, then the result is also unknown.\n\nNote that in these expressions, the first parameter is the result of a function.\n\nIf the first parameter yields a nonzero scalar result, then the result of the second parameter is returned.\n\nIf the result of the first parameter is a scalar value of zero, the third parameter is returned.\n\nIf the result of the first parameter is not a scalar, then the second and third parameters must be the same size as the first is and the result will be an element by element selection of the respective second and third parameter elements based on the first parameter element being zero or not.\n",
								"DiagramX": 185,
								"DiagramY": 20,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{if {cc 1, 1, 0, 0, 1},\n\t1:5,\n\t-5:-1\n}"
								}
							},
							{
								"name": "Scalar_Length",
								"Notes": "A scalar length\n",
								"DiagramX": 20,
								"DiagramY": 65,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "array_length[4]"
								}
							}
						]
					},
					{
						"name": "Formulas",
						"Notes": "Overview",
						"DiagramX": -40,
						"DiagramY": -70,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "HTML Form",
						"Formula": {
							"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Formulas</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tAt the heart of Math Minion calculations are the formulas that express the relationships between various objects.\n\t\t</p>\n\t\t<p>\n\t\t\tThey can be as simple as a scalar constant, or <b>2 + 2</b>, but if the need arises, they can be complicated expressions involving functions and conditions.\n\t\t</p>\n\t\t<p>\n\t\t\tTap on the icons for the models on the right of the diagram to explore the different features of formulas.\n\t\t</p>\n\t\t<p>\n\t\t\tFormulas are display in blue text in fields preceded by and equals sign (<b>=</b>). Tapping on the field will open a formula editor.  See the help for more information on its features.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
						}
					},
					{
						"name": "Date_And_Time",
						"Notes": "",
						"DiagramX": -5,
						"DiagramY": -40,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "dateunit",
						"Objects": [
							{
								"name": "Input_Output",
								"Notes": "Examples of different date units",
								"DiagramX": 480,
								"DiagramY": 520,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "InputDate",
										"Notes": "The date and time of Apollo 11's landing on the moon is input using the date unit and displayed with the same unit.\n",
										"DiagramX": 20,
										"DiagramY": 20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "19690720.2018 date"
										},
										"displayUnit": "date"
									},
									{
										"name": "OutDateD",
										"Notes": "This is the InputDate value displayed with the dated unit, which has the format\nddmmyyyy.hhmmss.",
										"DiagramX": 105,
										"DiagramY": 20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "InputDate"
										},
										"displayUnit": "dated"
									},
									{
										"name": "OutputDateM",
										"Notes": "This is the InputDate value displayed with the datem unit, which has the format\nmmddyyyy.hhmmss.",
										"DiagramX": 190,
										"DiagramY": 20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "OutDateD"
										},
										"displayUnit": "datem"
									},
									{
										"name": "InputDateM",
										"Notes": "The date and time of Apollo 11's landing on the moon is input using the datem unit and displayed with the same unit.\n\nThe datem format is\nddmmyyyy.hhmmss.",
										"DiagramX": 20,
										"DiagramY": 85,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "07201969.2018 datem"
										},
										"displayUnit": "datem"
									},
									{
										"name": "InputDateD",
										"Notes": "The date and time of Apollo 11's landing on the moon is input using the dated unit and displayed with the same unit.\n\nThe dated format is\nddmmyyyy.hhmmss.",
										"DiagramX": 105,
										"DiagramY": 85,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "20071969.2018 dated"
										},
										"displayUnit": "dated"
									}
								]
							},
							{
								"name": "Functions",
								"Notes": "Examples of functions that deal with date and time.",
								"DiagramX": 480,
								"DiagramY": 560,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "DateFunc",
										"Notes": "The date function converts a time into a dimensionless number of the form:\n\nyyyymmdd.hhmmss\n",
										"DiagramX": 25,
										"DiagramY": 65,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{date {now}}"
										}
									},
									{
										"name": "MktimeFunc",
										"Notes": "The mktime function is the inverse of the date function.  It takes a dimensionless number of the form yyyymmdd.hhmmss and converts it into the number of seconds since 00:00 Jan 1, 1970 GMT.\n\nThe result can of course be displayed with any time unit.",
										"DiagramX": 115,
										"DiagramY": 65,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{mktime DateFunc}"
										},
										"displayUnit": "date"
									},
									{
										"name": "Now",
										"Notes": "The current time in seconds since 00:00 January 1, 1970. GMT.\n\nSince expressions cache their results unless they are changed, this value will only be calculated when first viewed in a given session.\n\nTo force it to update, click the equals  button to the left of the formula field.\n\nSince no display unit has been assigned, it is displayed in seconds.",
										"DiagramX": 30,
										"DiagramY": -65,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{now}"
										}
									},
									{
										"name": "HumanNow",
										"Notes": "By using the date display unit, we get a more readable date and time.  Unless you are in the GMT time zone though, it won't represent your local time.\n",
										"DiagramX": 115,
										"DiagramY": -65,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{now}"
										},
										"displayUnit": "date"
									},
									{
										"name": "NowWithTZ",
										"Notes": "By adding the result of the {timezone} function, we can convert a time from GMT to our local timezone.\n",
										"DiagramX": 115,
										"DiagramY": -5,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{now} + {timezone}"
										},
										"displayUnit": "date"
									}
								]
							},
							{
								"name": "Now",
								"Notes": "The current time, displayed with a date unit.",
								"DiagramX": 395,
								"DiagramY": 560,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{now}"
								},
								"displayUnit": "date"
							},
							{
								"name": "DateUnit",
								"Notes": "Date and time values",
								"DiagramX": 395,
								"DiagramY": 520,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Date Unit</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tDate and time in Math Minion is simply a measure of the number of seconds since 00:00 January 1, 1970.\n\t\t</p> \n\t\t<p>\n\t\t\tHowever since X billion seconds isn't all that comprehensible a date measurement, there is a special date unit for time, which will output a time value in the form:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tyyyymmdd.hhmmss\n\t\t</p>\n\t\t<p>\n\t\t\tIn other words the date in year, month day before the decimal point and the time in hours, minutes and seconds after the decimal point.\n\t\t</p>\n\t\t<p>\n\t\t\tThere are two additional time units available which can be used to input or display alternate date formats:\n\t\t</p>\n\t\t<p class=\"formula\">\ndated - ddmmyyyy.hhmmss<br>\ndatem - mmddyyyy.hhmmss\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
								}
							}
						]
					},
					{
						"name": "TableValues",
						"Notes": "",
						"DiagramX": -5,
						"DiagramY": 0,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "Table_Values",
								"Notes": "In addition to arrays and matrices of numbers and strings, Math Minion can also have table values.\n\nThese often originate with a Data Table object like the Hours object in this and the example models, but they can be created directly from formulas as illustrated in the MakeTable expressions.\n\nEssentially a table value is a collection of columns, which all have the same number of rows.\n\nThey can be of different types; that is string or numeric and if numeric, they can have different unit types.\n\nData table tools will be discussed in more detail in the Tools model of the Root model.\n",
								"DiagramX": -5,
								"DiagramY": -155,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{table {cc \"Name\", \"Score\"},\n\t{cc \"Tom\", \"Dick\", \"Harry\"},\n\t60 + 10*1:3\n}"
								}
							},
							{
								"name": "MakeTable",
								"Notes": "",
								"DiagramX": 75,
								"DiagramY": -5,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "MakeTable",
										"Notes": "The table function can be used to make a table value.\n\nThe first argument must be an array of names that will be used as the table column names.\n\nThe remaining parameters must all be arrays having the same number of rows.\n\nTheir columns will be used to make the columns of the new table value.\n\nIf the number of names in the first argument is not the same as the total number of columns in the rest of the arguments, the lessor is used and any extras ignored.",
										"DiagramX": 30,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{table {cc \"one\", \"two\", \"three\"},\n\t{cc \"s1\", \"s2\", \"s3\", \"s4\"},\n\t1:4,\n\t{fmt \"n=%3.0f\", 1:4*10}\n}"
										}
									},
									{
										"name": "MakeTable2",
										"Notes": "The table function is used to make a table with two numeric columns with different unit types, as well as two string columns.",
										"DiagramX": 115,
										"DiagramY": 125,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{table\n\t{cc \"Row\",\"Length\",\n\t\t\"Weight\",\"Pounds\"\n\t},\n\t\"Row\" + {fmt \"%3.0f\", 1:5},\n\t1:5 * 1\"m\",\n\t100:105 * 1\"kg\",\n\t\"lb=\" + {fmt \"%f\",\n\t\t\t100:105 * 1\"kg\",\n\t\t\t\t\"lb\"\n\t\t\t}\n}"
										}
									},
									{
										"name": "MakeTable3",
										"Notes": "Another table, conformable to MakeTable2",
										"DiagramX": 205,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{table {cc\n\t\t\"Row\", \"Length\",\n\t\t\"Weight\",\"Pounds\"\n\t},\n\t\"No\" + {fmt \"%3.0f\", 1:5},\n\t1:5 * 3\"m\",\n\t100:104 * 3\"kg\",\n\t\"lb=\" + {fmt \"%f\",\n\t\t100:104 * 1\"kg\", \"lb\"\n\t}\n}"
										}
									},
									{
										"name": "TableArithmetic",
										"Notes": "The basic arithmetic operators can be used with tables, with the proviso that the units must conform.  Thus if you are adding or subtracting a scalar, then all the columns must have the same unit type as the scalar.\n\nNote that the first and third columns are strings and are just copied without change.",
										"DiagramX": 115,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "2 * MakeTable / 3"
										}
									},
									{
										"name": "AddTables",
										"Notes": "The two tables are added together.  They must have the same number of rows and columns and the columns must conform in type and unit type.\n\nNote that the first and last columns are strings and are just taken from the first argument, without modification.",
										"DiagramX": 205,
										"DiagramY": 85,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "MakeTable2 + MakeTable3"
										}
									}
								]
							},
							{
								"name": "Index",
								"DiagramX": 75,
								"DiagramY": -65,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "indexCell",
										"Notes": "Cells of a table value can be referenced with the [ ] index operator in the normal row, column manner using numbers.",
										"DiagramX": 10,
										"DiagramY": 95,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "hours[3, 2]"
										}
									},
									{
										"name": "indexCell2",
										"Notes": "A column index can be replaced with a column name for a table value.",
										"DiagramX": 10,
										"DiagramY": 155,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "hours[3, \"Client\"]"
										}
									},
									{
										"name": "IndexRows",
										"Notes": "An array of row indexes can be used to get certain rows of a table value.  The result will itself be a table value.",
										"DiagramX": 10,
										"DiagramY": 200,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "hours[ 3:5 ]"
										}
									},
									{
										"name": "IndexColumns",
										"Notes": "If an array of column names (here created by the concat function) is used as a column index, then those columns will be in the table value result.",
										"DiagramX": 205,
										"DiagramY": 90,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "hours[ 0, {cc \"project\", \"hours\"} ]"
										}
									},
									{
										"name": "SingleColumn",
										"Notes": "If only a single column is returned, then it is returned as a normal numeric or string array, rather than as a table value.\n\nNote that in this case the display unit is not retained and the value is displayed in seconds.  You could of course set the display unit for this expression.",
										"DiagramX": 205,
										"DiagramY": 155,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "hours[0,1]"
										}
									},
									{
										"name": "ColumnRef",
										"Notes": "A single column can also be obtained by using the column name in the dot notation.\n\nHere the display unit has been set on this expression.",
										"DiagramX": 200,
										"DiagramY": 255,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "hours.date"
										},
										"displayUnit": "date"
									},
									{
										"name": "Hours",
										"Notes": "This expression has its input checkbox checked, which lets it reference the Hours data table in the parent model. Its value is thus the table value from that table.\n\nThings to note:\n - cells cannot be modified as they can in the source data table.\n\n - the display unit for each column retains the display unit from its source, but you can change that by clicking on the column name and then the button to the right of the display unit (above the table).",
										"DiagramX": 110,
										"DiagramY": 85,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "hours"
										},
										"isInput": "y",
										"tableUnits": {}
									}
								]
							},
							{
								"name": "Select",
								"DiagramX": 75,
								"DiagramY": -45,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "Select_Function",
								"Objects": [
									{
										"name": "Hours",
										"Notes": "This expression has its input checkbox checked, which lets it reference the Hours data table in the parent model. Its value is thus the table value from that table.",
										"DiagramX": 30,
										"DiagramY": 85,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "hours"
										},
										"isInput": "y",
										"tableUnits": {}
									},
									{
										"name": "boolSelect",
										"Notes": "Also finds all the rows of Hours that have Coyote in the project column, but uses a boolean selector array instead of a string command.",
										"DiagramX": 115,
										"DiagramY": 85,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{select hours,\n\t{eq hours.project, \"Coyote\"}\n}"
										}
									},
									{
										"name": "Select",
										"Notes": "Find all the rows of Hours that have Coyote in the project column.",
										"DiagramX": 115,
										"DiagramY": 40,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{select hours, \"project = Coyote\"}"
										}
									},
									{
										"name": "Select_Function",
										"Notes": "Select Function Overview",
										"DiagramX": 30,
										"DiagramY": 40,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Select Function</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t\t<p>\n\t\t\t\tThe select function can be used to choose certain rows of a table, thus creating a new table value. For instance the <b>Select</b> expression in this model uses the formula:\n\t\t\t</p>\n\t\t\t<p class=\"formula\">\n\t\t\t\t{select hours, \"project = Coyote\"}\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tto find all the rows in the table value <b>hours</b> which have a value of \"Coyote\" in the project column.\n\t\t\t</p>\n\t\t\t<p>\t\n\t\t\t\tThe first parameter of the function is simply the table value, in this case from the expression <b>hours</b>.\n\t\t\t</p>\n\t\t\t<p>\t\n\t\t\t\tThe second parameter is a string of the form\n\t\t\t</p>\n\t\t\t<p class=\"formula\">\t\n\t\t\t\t\"column op value\"\n\t\t\t</p>\n\t\t\t<p>\t\n\t\t\t\twhere <b>column</b> is the name of the table column and the <b>op</b> term is one of (<b>=, !=, <, <=, >, >=</b>). The <b>value</b> term is some value that will be matched against each row of the column using the given operation.  The value isn't a formula, but can have a unit if it is numeric. String comparisons are case insensitive and a missing value term will match a string made up zero or more blanks.\n\t\t\t</p>\n\t\t\t<p>\t\n\t\t\t\tIf the selector has more than one row, each result is \"ANDed\" with the previous result, unless the \"column\" term is preceded by a \"|\" character, in which case an OR operation is performed with the previous result. An \"&\" character can optionally be used for AND operations to make the formula more descriptive.\n\t\t\t<p>\n\t\t\t<p>\n\t\t\t\tInstead of a string value, the second parameter of select can be a column array with the same number of rows as the table.  All the rows of this argument which are nonzero will be selected from the source table and included in the result.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe expression <b>boolSelect</b> uses the formula:\n\t\t\t</p>\n\t\t\t<p class=\"formula\">\n\t\t\t\t{select hours, {eq hours.project, \"Coyote\"}}\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\twhich will also select all the rows whose project column has a value of \"Coyote\", producing the same result as the <b>Select</b> expression.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe select command will also work on matrices of numbers and strings in the same way, with the column name being replaced by the column number.\n\t\t\t</p>\n\t\t\t<p>\t\n\t\t\t\tSee the various other expressions in this model for examples.\n\t\t\t</p>\n\n\t\t</div>\n\t</body>\n</html>"
										}
									},
									{
										"name": "OrSelect",
										"Notes": "Find all rows where project is either Coyote or Accounting",
										"DiagramX": 30,
										"DiagramY": 205,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{select hours,\n\t{cc\n\t\t\"project = coyote\",\n\t\t\"| project = accounting\"\n\t}\n}"
										}
									},
									{
										"name": "BeforeAugust",
										"Notes": "Another example of using the select, this time to obtain all the records before Aug 1, 2012. Note the use of the date unit.",
										"DiagramX": 115,
										"DiagramY": 150,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{select hours, \"date < 20120801 date\"}"
										}
									},
									{
										"name": "OrAndSelect",
										"Notes": "Select all rows where the project is either Coyote or Accounting and has a date before August.",
										"DiagramX": 115,
										"DiagramY": 205,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{select hours,\n\t{cc\n\t\t\"project = coyote\",\n\t\t\"| project = accounting\",\n\t\t\"date < 20120801 date\"\n\t}\n}"
										}
									},
									{
										"name": "NumberbyString",
										"Notes": "Select rows where column 2 is less than 60",
										"DiagramX": 30,
										"DiagramY": 255,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{select {append 1:50, 51:100},\n\t\"2 <= 60\"\n}"
										}
									},
									{
										"name": "StringByString",
										"Notes": "Select rows where column 1 (the only column) are greater or equal to \"f\".",
										"DiagramX": 110,
										"DiagramY": 255,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{select\n\t{cc\n\t\t\"a\",\"b\",\"c\",\"d\",\"e\",\n\t\t\"f\",\"g\",\"h\",\"i\",\"j\"\n\t}, \"1 >= f\"\n}"
										}
									},
									{
										"name": "AndSelect",
										"Notes": "Select rows where Fred is the client and the project is Accounting.",
										"DiagramX": 30,
										"DiagramY": 150,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{select hours,\n\t{cc\n\t\t\"client = Fred\",\n\t\t\"project = accounting\"\n\t}\n}"
										}
									}
								]
							},
							{
								"name": "Sums",
								"DiagramX": 75,
								"DiagramY": -25,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "DayHours",
										"Notes": "If you group on a numeric column, the values in the column are first converted to strings.\n\nHere we calculated the total number of hours on each date.\n",
										"DiagramX": 285,
										"DiagramY": 80,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{groupsum Hours, \"Date\"}"
										},
										"tableUnits": {
											"1": "date"
										}
									},
									{
										"name": "clients",
										"Notes": "Here the indexof values are used to extract the client names from Hours, corresponding to the projects in projectsum.\n\nhours.client[ indexof[0,1] ]\n\nBecause it is a single column, it is returned as a simple column array, not a table value.",
										"DiagramX": 270,
										"DiagramY": 190,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "hours.client[ indexof[0,1] ]"
										}
									},
									{
										"name": "ProjectHours",
										"Notes": "The append function can be used to combine the columns of different tables into a single table.  All of the arguments must have the same number of rows.\n\nIt is used here to add a column of client names to the projectsum result:\n\n{append projectsum,\n   {table \"Client\", clients}\n}\n\nThe clients value is not a table, but we can easily convert it into one with the table function.",
										"DiagramX": 350,
										"DiagramY": 160,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{append projectsum,\n\t{table \"Client\", clients}\n}"
										}
									},
									{
										"name": "projectsum",
										"Notes": "This expression uses the groupsum function to get the total hours by project:\n\n{groupsum\n\thours[0,{cc \"project\", \"Hours\"}],\n\t\"project\"\n} \n\nThe first argument is the table value to be totalled.  In this case the index operator has been used to select just the project and hours columns.\n\nThe second argument is the column for which identical values are to be grouped together into a single row.\n\n Other columns in that row will be the sums of the values for that group.\n\nThe argument must be a string and must be the name of a column in the table.\n\nThere are also groupmin and groupmax functions.\n",
										"DiagramX": 85,
										"DiagramY": 100,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{groupsum\n\thours[0,{cc \"project\", \"Hours\"}],\n\t\"project\"\n} "
										}
									},
									{
										"name": "indexof",
										"Notes": "{indexof\n\tprojectsum.project,\n\thours.project\n}\n\nIndexof returns a matrix with two columns.\n\nThe first column holds the row numbers of the first cell found in hours.project, which has the same value as the first value found in projectsum.project.\n\nThe second column holds the column number of that cell.\n\nThus for each project name in projectsum, there will be a row with the indices for the first occurrence of that name in the projects column of hours.",
										"DiagramX": 175,
										"DiagramY": 145,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{indexof\n\tprojectsum.project,\n\thours.project\n}"
										}
									},
									{
										"name": "Hours",
										"Notes": "This expression has its input checkbox checked, which lets it reference the Hours data table in the parent model. Its value is thus the table value from that table.",
										"DiagramX": 200,
										"DiagramY": 75,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "hours"
										},
										"isInput": "y",
										"tableUnits": {}
									}
								]
							},
							{
								"name": "Hours",
								"Notes": "This data table tool is a simple fictitious time sheet with a month of values.  It has four columns, consisting of Date, Client, Project and hours.\n\nWhen new rows are added, they are initialized with today's date, the last row's Client and Project value and 0 hours.",
								"DiagramX": 75,
								"DiagramY": -155,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Data Table",
								"Columns": [
									{
										"name": "Date",
										"displayUnit": "date",
										"nValues": [
											1342396800,
											1342396800,
											1342483200,
											1342569600,
											1342569600,
											1342656000,
											1342656000,
											1342742400,
											1342742400,
											1342828800,
											1342828800,
											1342915200,
											1343001600,
											1343174400,
											1343174400,
											1343260800,
											1343347200,
											1343433600,
											1343433600,
											1343520000,
											1343606400,
											1343692800,
											1343779200,
											1343779200,
											1343865600,
											1343865600,
											1343952000,
											1344038400,
											1344038400,
											1344124800,
											1344124800,
											1344297600,
											1344384000,
											1344470400,
											1344556800,
											1344556800,
											1344643200,
											1344729600,
											1344729600,
											1344816000,
											1344902400,
											1344902400,
											1344988800,
											1344988800
										],
										"unitDimensions": "0 0 1 0 0 0 0",
										"defaultValue": "{mktime {int {date {now}}}}"
									},
									{
										"name": "Client",
										"displayUnit": "string",
										"sValues": [
											"HAL",
											"Fred",
											"Acme",
											"Acme",
											"Acme",
											"HAL",
											"Acme",
											"HAL",
											"Fred",
											"Fred",
											"Acme",
											"Acme",
											"Acme",
											"Fred",
											"HAL",
											"HAL",
											"HAL",
											"HAL",
											"Acme",
											"Acme",
											"Pear",
											"Pear",
											"Pear",
											"HAL",
											"Pear",
											"Fred",
											"Pear",
											"Pear",
											"Acme",
											"Pear",
											"HAL",
											"HAL",
											"HAL",
											"HAL",
											"Fred",
											"HAL",
											"HAL",
											"HAL",
											"Fred",
											"Fred",
											"Pear",
											"Fred",
											"HAL",
											"Acme"
										],
										"defaultValue": "$[$.nrows,2]"
									},
									{
										"name": "Project",
										"displayUnit": "string",
										"sValues": [
											"DeepThought",
											"Accounting",
											"Coyote",
											"Coyote",
											"Coyote",
											"DeepThought",
											"RR",
											"DeepThought",
											"Accounting",
											"Accounting",
											"RR",
											"RR",
											"RR",
											"Accounting",
											"DeepThought",
											"DeepThought",
											"DeepThought",
											"DeepThought",
											"RR",
											"Coyote",
											"iWant",
											"iWant",
											"iWant",
											"DeepThought",
											"iWant",
											"Accounting",
											"iWant",
											"iWish",
											"RR",
											"iWish",
											"Clarke",
											"Clarke",
											"Clarke",
											"Clarke",
											"Accounting",
											"Clarke",
											"Clarke",
											"Clarke",
											"Report",
											"Report",
											"iWish",
											"Report",
											"Clarke",
											"Coyote"
										],
										"defaultValue": "$[$.nrows,3]"
									},
									{
										"name": "Hours",
										"displayUnit": "h",
										"nValues": [
											7200,
											10800,
											18000,
											21600,
											7200,
											10800,
											7200,
											10800,
											7200,
											14400,
											21600,
											28800,
											32400,
											18000,
											10800,
											25200,
											28800,
											7200,
											14400,
											14400,
											21600,
											32400,
											25200,
											7200,
											25200,
											7200,
											25200,
											21600,
											7200,
											18000,
											7200,
											28800,
											32400,
											25200,
											7200,
											18000,
											28800,
											18000,
											10800,
											28800,
											18000,
											7200,
											25200,
											7200
										],
										"unitDimensions": "0 0 1 0 0 0 0",
										"defaultValue": "0 h"
									}
								]
							},
							{
								"name": "Numeric",
								"Notes": "The numeric function will transform a table into a numeric matrix, but only if all the numeric columns have the same unit type.\n\nThe string columns are simply omitted.\n\n  Here both date and hours are of type time and the other columns are strings, so the operation is allowed.\n",
								"DiagramX": 160,
								"DiagramY": -155,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{numeric hours}"
								}
							},
							{
								"name": "TableArithmetic",
								"Notes": "",
								"DiagramX": 160,
								"DiagramY": -50,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "TableArithmetic",
										"Notes": "The basic arithmetic operators can be used with tables, with the proviso that the units must conform.  Thus if you are adding or subtracting a scalar, then all the columns must have the same unit type as the scalar.\n\nNote that the first and third columns are strings and are just copied without change.",
										"DiagramX": 0,
										"DiagramY": -145,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "2 * MakeTable / 3"
										}
									},
									{
										"name": "AddTables",
										"Notes": "The two tables are added together.  They must have the same number of rows and columns and the columns must conform in type and unit type.\n\nNote that the first and last columns are strings and are just taken from the first argument, without modification.",
										"DiagramX": 160,
										"DiagramY": -145,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "Table1 + Table2"
										}
									},
									{
										"name": "Table1",
										"Notes": "The table function is used to make a table with two numeric columns with different unit types, as well as two string columns.",
										"DiagramX": 75,
										"DiagramY": -145,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{table\n\t{cc \"Row\",\"Length\",\n\t\t\"Weight\",\"Pounds\"\n\t},\n\t\"Row\" + {fmt \"%3.0f\", 1:5},\n\t1:5 * 1\"m\",\n\t100:105 * 1\"kg\",\n\t\"lb=\" + {fmt \"%f\",\n\t\t\t100:105 * 1\"kg\",\n\t\t\t\t\"lb\"\n\t\t\t}\n}"
										}
									},
									{
										"name": "Table2",
										"Notes": "Another table, conformable to MakeTable2",
										"DiagramX": 75,
										"DiagramY": -90,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{table {cc\n\t\t\"Row\", \"Length\",\n\t\t\"Weight\",\"Pounds\"\n\t},\n\t\"No\" + {fmt \"%3.0f\", 1:5},\n\t1:5 * 3\"m\",\n\t100:104 * 3\"kg\",\n\t\"lb=\" + {fmt \"%f\",\n\t\t100:104 * 1\"kg\", \"lb\"\n\t}\n}"
										}
									}
								]
							},
							{
								"name": "Combining",
								"Notes": "",
								"DiagramX": 160,
								"DiagramY": -25,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Concatenate",
										"Notes": "Conformable tables can be concatenated using the cc function. The resulting table value has all of the rows of the concatenated tables.",
										"DiagramX": 90,
										"DiagramY": -145,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc table1, table2}"
										}
									},
									{
										"name": "Table1",
										"Notes": "The table function is used to make a table with two numeric columns with different unit types, as well as two string columns.",
										"DiagramX": 0,
										"DiagramY": -145,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{table\n\t{cc \"Row\",\"Length\",\n\t\t\"Weight\",\"Pounds\"\n\t},\n\t\"Row\" + {fmt \"%3.0f\", 1:5},\n\t1:5 * 1\"m\",\n\t100:105 * 1\"kg\",\n\t\"lb=\" + {fmt \"%f\",\n\t\t\t100:105 * 1\"kg\",\n\t\t\t\t\"lb\"\n\t\t\t}\n}"
										}
									},
									{
										"name": "Table2",
										"Notes": "Another table, conformable to MakeTable2",
										"DiagramX": 0,
										"DiagramY": -85,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{table {cc\n\t\t\"Row\", \"Length\",\n\t\t\"Weight\",\"Pounds\"\n\t},\n\t\"No\" + {fmt \"%3.0f\", 1:5},\n\t1:5 * 3\"m\",\n\t100:104 * 3\"kg\",\n\t\"lb=\" + {fmt \"%f\",\n\t\t100:104 * 1\"kg\", \"lb\"\n\t}\n}"
										}
									},
									{
										"name": "Append",
										"Notes": "The append command will produce a table with all the columns of the arguments.  The arguments must all have the same number of rows.\n\nYou can also append column arrays to tables and they will be given a column name equivalent to their column number.",
										"DiagramX": 85,
										"DiagramY": -85,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{append table1, table2, 1:5 * 10 kg}"
										}
									}
								]
							}
						]
					},
					{
						"name": "Strings",
						"Notes": "",
						"DiagramX": -5,
						"DiagramY": -20,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "aString",
								"Notes": "A string is represented by text surrounded by double quotes.",
								"DiagramX": 30,
								"DiagramY": -70,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "\"The quick red fox\""
								}
							},
							{
								"name": "StringLogicals",
								"Notes": "",
								"DiagramX": 105,
								"DiagramY": 10,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "le",
										"DiagramX": 100,
										"DiagramY": 20,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{le \"ab\", \"abc\"}"
										}
									},
									{
										"name": "lt",
										"DiagramX": 100,
										"DiagramY": 40,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{lt \"ab\", \"abc\"}"
										}
									},
									{
										"name": "ge",
										"DiagramX": 100,
										"DiagramY": 60,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{ge \"ab\", \"abc\"}"
										}
									},
									{
										"name": "gt",
										"DiagramX": 100,
										"DiagramY": 80,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{gt \"ab\", \"abc\"}"
										}
									},
									{
										"name": "and",
										"DiagramX": 100,
										"DiagramY": 100,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{and \"\", \"abc\"}"
										}
									},
									{
										"name": "or",
										"DiagramX": 100,
										"DiagramY": 120,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{or \"\", \"abc\"}"
										}
									},
									{
										"name": "not",
										"DiagramX": 100,
										"DiagramY": 140,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{not \"a\"}"
										}
									},
									{
										"name": "ifBlank",
										"Notes": "If a string value is used as a condition in an if function, a blank string will evaluate as false, while all others will be true.\n\nIn this case, the third element of the condition is blank, so the result will use the third element of the third parameter.",
										"DiagramX": 20,
										"DiagramY": 100,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{if\t{concat \"a\",\"b\",\"\",\"d\"},\n\t{concat 1, 2, 3, 4},\n\t{concat 11, 12, 13, 14}\n}"
										}
									},
									{
										"name": "StringLogicals",
										"Notes": "The comparison and logical functions work with strings as well.  A blank string is considered false, while a string that contains anything is considered true.  Comparisons are done lexically.",
										"DiagramX": 20,
										"DiagramY": 20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{if \"something here?\", \"true\", \"false\"}"
										}
									}
								]
							},
							{
								"name": "Multiline",
								"DiagramX": 105,
								"DiagramY": -70,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Multiline",
										"Notes": "A string can span more than one line.  As with normal strings, it must begin and end with double quotes.\n\nAlternatively, if the formula starts with a single quote, normally the comment character, then everything that follows it will be considered a string value and a closing quote is not necessary.\n\nA long string like this won't fit into an expression's result display cell, but clicking on a string cell will produce a view of the entire string.",
										"DiagramX": 25,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "\"A string can span more than one line.  As with normal strings, it must begin and end with double quotes.\n\nAlternatively, if the formula starts with a single quote, normally the comment character, then everything that follows it will be considered a string value and a closing quote is not necessary.\n\nA long string like this won't fit into an expression's result display cell, but clicking on a string cell will produce a view of the entire string.\""
										}
									}
								]
							},
							{
								"name": "Format",
								"DiagramX": 105,
								"DiagramY": -30,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Format",
										"Notes": "A number can be formatted using the fmt function.\n\nThe first first parameter should be a string containing a C style number format specification, such as \"%12.2f\", which designates a field 12 characters wide, with two decimal places in floating point format.\n\nTable cells are 14 characters wide, so this leaves two spaces to the right of the value.\n\nNote that numbers in Math Minion are always real numbers, not integers.",
										"DiagramX": 15,
										"DiagramY": 15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{fmt \"%12.2f\", 12.1234}"
										}
									},
									{
										"name": "Format_Unit",
										"Notes": "An optional third parameter can be supplied to the fmt function and if present, it should be a string that is the name of the unit that should be used for the number.\n\nThis unit must be of the same unit type as the number being formatted.\n\nIn this case the number is dimensionless and a percentage unit is requested.",
										"DiagramX": 110,
										"DiagramY": 15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{fmt \"%12.2f\", 12.1234, \"%\"}"
										}
									}
								]
							},
							{
								"name": "Addition",
								"DiagramX": 105,
								"DiagramY": -50,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Addition",
										"Notes": "Adding strings with the + operator, concatenates them.",
										"DiagramX": 15,
										"DiagramY": 15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "\"hello \" + \"world\""
										}
									}
								]
							},
							{
								"name": "Arrays",
								"DiagramX": 105,
								"DiagramY": -10,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Arrays",
										"Notes": "String arrays are allowed.",
										"DiagramX": 15,
										"DiagramY": 20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc \"tom\", \"dick\", \"harry\"}"
										}
									},
									{
										"name": "length",
										"Notes": "The strlen function returns the length of the elements of a string value.",
										"DiagramX": 15,
										"DiagramY": 60,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{strlen Arrays}"
										}
									},
									{
										"name": "upperCase",
										"Notes": "Makes all characters uppercase.",
										"DiagramX": 15,
										"DiagramY": 105,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{uppercase Arrays}"
										}
									},
									{
										"name": "Join",
										"Notes": "The join function creates a single string from an array of strings and a separator string.",
										"DiagramX": 15,
										"DiagramY": 140,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{join Arrays, \" and \"}"
										}
									},
									{
										"name": "lowerCase",
										"Notes": "Makes all characters lowercase.",
										"DiagramX": 110,
										"DiagramY": 20,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{lowercase upperCase}"
										}
									},
									{
										"name": "split",
										"Notes": "The split function separates a string into parts.  If there are just two arguments, the first is the string to split and the second is the character or phrase to split upon.\n\nIf the string has more than one column and more than one row, the result will be one row per value of s, with each value split into columns.\n\nAlso an optional third parameter can be supplied, in which case the second parameter is used to separate the columns and the third parameter is used to separate the rows, resulting in a string matrix. In this case, only the first value of the string is used (i.e. element 1,1).",
										"DiagramX": 110,
										"DiagramY": 55,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{split join, \" \"}"
										}
									}
								]
							},
							{
								"name": "Examples",
								"Notes": "Illustrates the use of a number of string functions.  See the function browser for a complete list.",
								"DiagramX": 105,
								"DiagramY": 30,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "Numbers",
										"Notes": "A matrix of numbers to use with string functions.\n",
										"DiagramX": 25,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "-7:7+{tr 1:2}/10"
										}
									},
									{
										"name": "multiFmt",
										"Notes": "Just to confuse things, here an array of format statements is created using a fmt function and a range.  ",
										"DiagramX": 25,
										"DiagramY": 65,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "\"%9.\" + {fmt \"%1.0f\", 1:3} + \"f\""
										}
									},
									{
										"name": "columnFmt",
										"Notes": "Here we are creating a row array with different format strings for each column.",
										"DiagramX": 25,
										"DiagramY": 120,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{transpose  {concat \"%10.2f\", \"%10.3f\"}} "
										}
									},
									{
										"name": "formattedMatrix",
										"Notes": "Here multFmt, the fabricated column array of format strings, is applied to a matrix of numbers.\n\nSince there are fewer format rows than number rows, the format array is repeated as necessary in the same way that matrix operations work with numbers.",
										"DiagramX": 105,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{fmt multiFmt, numbers, \"%\" } "
										}
									},
									{
										"name": "formattedColumns",
										"Notes": "When the row format is used with the number matrix, the individual columns are formatted appropriately.\n",
										"DiagramX": 105,
										"DiagramY": 120,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{fmt columnFmt, numbers } "
										}
									},
									{
										"name": "matrixAddition",
										"Notes": "The rules for adding different dimension string values are the same as for number values.",
										"DiagramX": 195,
										"DiagramY": 230,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "\"X =  \" + formattedColumns"
										}
									},
									{
										"name": "find",
										"Notes": "The strfind function searches the first argument for the regular expression represented by the second argument. In this case it means searching for a string of digits.\n\nA numeric matrix is returned, with two columns and one row for each element of the searched value.  The position of the start of the first occurrence of expression will be in the first column and the length in the second column.  If the searched value is a matrix, the order of the results will be row by row.\n\nIf the expression is not found, the position will be a huge value and the length 0.",
										"DiagramX": 190,
										"DiagramY": 10,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{strfind formattedMatrix, \"\\d+\"}"
										}
									},
									{
										"name": "subString2",
										"Notes": "If the substr function contains a third parameter, it will be used as the length of the sub string.\n\nNote here how the 30 elements of each column of the find expression are used correctly in order with the elements of the 15x2 elements of formattedMatrix.\n\nThe result is the first set of digits found in each element of formattedMatrix.",
										"DiagramX": 190,
										"DiagramY": 45,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{substr formattedMatrix,\n\tfind[0,1], find[0,2]}"
										}
									},
									{
										"name": "JoinMatrix",
										"Notes": "Joining a matrix will produce a single column array with all the columns joined together.  Here the columns of formattedColumns are joined by a string consisting of some spaces and ->.",
										"DiagramX": 195,
										"DiagramY": 85,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{join formattedColumns, \"\t->\"}"
										}
									},
									{
										"name": "Join2",
										"Notes": "With three parameters, the second is used to join columns and the third to join rows.  Note that the third parameter is a newline in quotes.\n\nSame as nested joins",
										"DiagramX": 195,
										"DiagramY": 120,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{join formattedColumns, \"\t->\t\", \"\n\"}"
										}
									},
									{
										"name": "Match",
										"Notes": "The match function will return the first string in each string value element, that is matched by a regular expression.  Here the regular expression  designates that a decimal point followed by 0 or more digits is to be matched.",
										"DiagramX": 195,
										"DiagramY": 155,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{match \"\\.\\d*\" formattedColumns }"
										}
									},
									{
										"name": "Replace",
										"Notes": "The replace function returns a string value where each element is transformed by applying a regular expression replacement.  The first parameter is the string to match, while the second is the replacement and the third the source string value.\n\nHere every digit is replaced with the character \"x\".",
										"DiagramX": 195,
										"DiagramY": 195,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{replace \"\\d\", \"x\", formattedColumns} "
										}
									},
									{
										"name": "JoinJoin",
										"Notes": "Using join again to create a single string, with each row separated by a newline character.",
										"DiagramX": 275,
										"DiagramY": 85,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{join JoinMatrix, \"\\n\"}"
										}
									},
									{
										"name": "split2",
										"Notes": "With three parameters, the second parameter is used to split the string into columns, while the third splits it into rows.",
										"DiagramX": 275,
										"DiagramY": 120,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{split join2, \"\t->\t\", \"\n\"}"
										}
									},
									{
										"name": "indexof",
										"Notes": "The indexOf function works with strings, but it must be an exact match.",
										"DiagramX": 275,
										"DiagramY": 155,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{indexof \".200\", match}"
										}
									},
									{
										"name": "equal",
										"Notes": "Check that strings are equal",
										"DiagramX": 275,
										"DiagramY": 195,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{eq match, \".10\"}"
										}
									},
									{
										"name": "aString",
										"Notes": "",
										"DiagramX": 25,
										"DiagramY": 170,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "\"Hello World\""
										}
									},
									{
										"name": "subString",
										"Notes": "With just two parameters, the substr function returns the portion of the string in the first parameter starting at the character position given by the second parameter and continuing to the end of the string.\n\nIf the first parameter has more elements than the second, the second's elements will be reused as necessary.",
										"DiagramX": 105,
										"DiagramY": 170,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{substr aString 7}"
										}
									},
									{
										"name": "subString2Copy",
										"Notes": "If the substr function contains a third parameter, it will be used as the length of the sub string.\n",
										"DiagramX": 25,
										"DiagramY": 200,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{substr aString, 7, 3}\n"
										}
									}
								]
							}
						]
					},
					{
						"name": "Complex",
						"Notes": "",
						"DiagramX": -5,
						"DiagramY": 20,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "CValue",
								"Notes": "The complex function is used to create a table value representing an array of complex numbers.  The \"r\" column is the real component and the \"i\" column is the imaginary one.\n\nThis is a nice representation, but any two column numeric can be used as a complex number.",
								"DiagramX": 10,
								"DiagramY": 0,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": " {complex -5:5, -5:5^2}"
								}
							},
							{
								"name": "csin",
								"Notes": "complex sin",
								"DiagramX": 95,
								"DiagramY": -90,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{csin cvalue}"
								}
							},
							{
								"name": "cmult",
								"Notes": "Use cmult to multiply cvalue by itself.\n",
								"DiagramX": 95,
								"DiagramY": -55,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{cmult cvalue, cvalue}"
								}
							},
							{
								"name": "Polar",
								"Notes": "The polar function is used to convert CValue into polar coordinates.\n\nNote that the units for the second column have been set to degrees, by clicking on the column header and then clicking the button beside the unit line and selecting the unit from the unit browser.\n\nAlso note there is no valid angle when converting 0, 0 to polar.",
								"DiagramX": 95,
								"DiagramY": -15,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{polar CValue}"
								},
								"tableUnits": {
									"2": "degree"
								}
							},
							{
								"name": "sqrt",
								"Notes": "Use cpow to take the square root of cmult and retrieve cvalue.\n\nIn this case the exponent is a real, but it can also be a complex value as well.",
								"DiagramX": 170,
								"DiagramY": -100,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{cpow cmult, 0.5}"
								}
							},
							{
								"name": "Cartesian",
								"Notes": "The cart function is used to transform the polar version of CValue back into cartesian coordinates.\n\nThere is no valid conversion for 0, 0.",
								"DiagramX": 170,
								"DiagramY": -30,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{cart polar}"
								},
								"tableUnits": {}
							},
							{
								"name": "Plot",
								"Notes": "A plot of CValue's imaginary component versus its real one.",
								"DiagramX": 95,
								"DiagramY": -130,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Graph",
								"X1": {
									"v": "Cvalue.r",
									"vmin": "",
									"vmax": "",
									"Y1": {
										"v": "Cvalue.i",
										"vmin": "",
										"vmax": "",
										"lineType": 0
									}
								}
							},
							{
								"name": "Complex",
								"Notes": "Complex numbers in Math Minion are represented by either a matrix or table value with two columns, the first column being the real component and the second the imaginary one.\n\n All complex value functions return table values with the first column labeled r and the second labeled i.\n\nBe sure to check out the Complex Numbers section of the function browser as well as the Complex Number help page that it links to.\n",
								"DiagramX": 5,
								"DiagramY": -130,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{complex 1, 2}"
								}
							}
						]
					},
					{
						"name": "References",
						"DiagramX": -5,
						"DiagramY": 40,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "aModel",
								"Notes": "This  model demonstrates the use of tool paths and tool references.\n\nIt contains yet another model, which in turn just contains an expression with a value of 2 times pi.\n\nThis expression is designated as an outlet expression so that the parent model can access it.\n\nThe expression \"sub\" in this model is also designated as an output and its formula is simply the name of the sub-model.\n\nThis allows the sub-model itself to be accessed by the parent model of this model.\n\nSee the \"Reference\" expression  for an example of referencing these tools.",
								"DiagramX": 15,
								"DiagramY": 15,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"Objects": [
									{
										"name": "subModel",
										"Notes": "Another sub-model, which in turn just contains an expression with a value of 2 times pi.\n\nThis expression is designated as an outlet expression so that the parent model can access it.",
										"DiagramX": 115,
										"DiagramY": 15,
										"HideInfo": "n",
										"DiagramNotes": "y",
										"Type": "Model",
										"diagramScale": 1,
										"Objects": [
											{
												"name": "twoPi",
												"Notes": "Just a value to return. In this case it uses the pi function to calculate 2pi.",
												"DiagramX": 65,
												"DiagramY": 20,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "{pi}*2"
												},
												"isOutput": "y"
											}
										]
									},
									{
										"name": "sub",
										"Notes": "This expression is also designated as an output and its formula is simply the name of the sub-model.\n\nThis allows the sub-model itself to be accessed by the parent model of this model.",
										"DiagramX": 190,
										"DiagramY": 15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "subModel"
										},
										"isOutput": "y"
									}
								]
							},
							{
								"name": "Reference",
								"Notes": "The formula for this expression is:\n\naModel.sub.twoPi\n\nwhich first accesses the sub output expression of \"aModel\" and then the twoPi output expression of the model which \"sub\" references.\n\nYou can use the value browser when you are editing a formula to drill down through tools to the desired tool and parameter and have it inserted into the formula.",
								"DiagramX": 105,
								"DiagramY": 15,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "aModel.sub.twoPi"
								}
							}
						]
					}
				]
			},
			{
				"name": "Welcome",
				"Notes": "Welcome to the Math Minion's \"Getting Started\" session.\n\nIf the Welcome contents aren't already visible, tap on the icon above to view them.",
				"DiagramX": 70,
				"DiagramY": -40,
				"HideInfo": "y",
				"DiagramNotes": "y",
				"Type": "HTML Form",
				"Formula": {
					"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t\t.disclaimer {\n\t\t\t\tcolor: #004400;\n\t\t\t\tfont-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n\t\t\t\tfont-size: 0.7em;\n\t\t\t\tfont-style: italic;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t}\n\t\t\t.link {\n\t\t\t\tcolor: blue;\n\t\t\t\tfont-weight: bold;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h4>Welcome to Math Minion's<br> \"Getting Started\" session</h4>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p class=\"disclaimer\">\n\t\t\tMath Minion is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the <a href=\"../LICENSE.txt\" target=\"_blank\">GNU General Public License</a> for more details.\n\t\t</p>\n\t\t<p>\n\t\t\tThis session contains numerous explanations and small illustrations of how Math Minion works. However before diving in, I fear you really should, <b>gasp</b>, read a bit of the help.\n\t\t</p>\n\t\t<p>\n\t\t\tPlease put your natural horror aside and <b><a href=\"./help/getstarted.html\" target=\"_blank\">click here</a></b> to open the help in another browser window or tab.\n\t\t</p>\n\t\t<p>\n\t\t\tIf nothing else following the links for the <b><a href=\"./help/diagram.html\" target=\"_blank\">diagram</a></b> and <b><a href=\"./help/infoview.html\" target=\"_blank\">information view</a></b> and skimming how to navigate will make things easier.\n\t\t</p>\n\t\t<p>\n\t\t\tThen explore the models on the diagram and the examples you can import from the <b>Examples</b> HtmlPage.\n\t\t</p>\n\t\t<p>\n\t\t\tKeep your <b>Getting Started</b> session and <b>Math Minion News</b> session up to date by\n\t\t\treloading them with these links:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><span class=\"link\" onClick=\"mmpost({}, {mm_loadurl: '../help/Getting%20Started.txt', mm_view: 'Welcome'});\">Reload Getting Started</span></li>\n\t\t\t<li><span class=\"link\" onClick=\"mmpost({}, {mm_loadurl: '../news/MM_News.txt', mm_view: 'Welcome'});\">Reload MM_News</span></li>\n\t\t</ul>\n\t\t<p>\n\t\t\tIf you have any questions, you can always use the <b><a href=\"http://www.redtree.com/contact.html\" target=\"_blank\">Contact Me</a></b> link in the <b>Help Contents</b> to send them to me.\n\t\t</p>\n\t\t<p>Craig</p>\n\t\t</div>\n\t</body>\n</html>"
				}
			},
			{
				"name": "Examples",
				"Notes": "",
				"DiagramX": 145,
				"DiagramY": 75,
				"HideInfo": "y",
				"DiagramNotes": "n",
				"Type": "HTML Form",
				"Formula": {
					"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t\t.example {\n\t\t\tborder-bottom: 1px solid black;\n\t\t\tpadding-bottom: 10px;\n\t\t\tmargin-bottom: 2em;\n\t\t}\n\t\t.extitle {\n\t\t\tfont-size: 1em;\n\t\t\tfont-family: \"Verdana\";\n\t\t\tfont-style: italic;\n\t\t\tfont-weight: bold;\n\t\t}\n\n\t\t.exsubtitle {\n\t\t\tborder-bottom: 1px dashed black;\n\t\t\tmargin-bottom: 0.75em;\n\t\t\tpadding-bottom: 0.5em;\n\t\t}\n\t\t.hiddenalert {\n\t\t\tcolor: #F00;\n\t\t}\t\n\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t\t<h3>A Few Interesting<br> Uses of Math Minion</h3>\n\t\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<div id=\"examples\">\n\t\t\t<div id=\"indexof\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tUsing Indexof to Look Up Table Values\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exsubtitle\"><span class=\"excat\">\n\t\t\t\t\t\tData Handling\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t\t<p>Illustrates using the indexof function to do table look ups.\n\t\t\t\t\t\t\tIn this case looking up names and share holdings in one table by\n\t\t\t\t\t\t\tusing the company symbols in a second table.\n\t\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/indexof.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"predator\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tODE Example - Predator/Prey\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exsubtitle\"><span class=\"excat\">\n\t\t\t\t\t\tDynamic Modeling\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThis example illustrates the use of the ODE solver simulate the classic\n\t\t\t\t\t\t\tpredator/prey relationship as characterized by the Lotka-Volterra model.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tSee <a href=\"http://wikipedia.org/wiki/Lotka-Volterra_equation\">\n\t\t\t\t\t\t\t\twikipedia.org/wiki/Lotka-Volterra_equation</a>.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThe calculation is contained in the Population model, with the results\n\t\t\t\t\t\t\tillustrated in the two Plot objects.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tMathworks has a published demonstration of this problem (look for\n\t\t\t\t\t\t\t\"Numerical Integration of Differential Equations\" in the demos section\n\t\t\t\t\t\t\tof the mathworks.com website).  The Math Minion solution to this problem\n\t\t\t\t\t\t\tis reproduced in the MatlabExample model.\n\t\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/Predator.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"orbits\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\tOrbits\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exsubtitle\"><span class=\"excat\">\n\t\t\t\t\t\tDynamic Modeling\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis models the orbital motion of 2 or more planets around a sun.\n\t\t\t\t\t\tIt is a simplification of one of Marco M's wonderful models and as such,\n\t\t\t\t\t\tany mistakes are almost certainly once again mine.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tFor simplicity all of the planet masses are assumed to be equal,\n\t\t\t\t\t\talthough this could be relaxed at the expense of slightly more complicated equations.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\t\n\t\t\t\t\t\tAs set up, there are only two massive planets in close orbits.\n\t\t\t\t\t\tThe large mass 1000 ME (earth mass) was chosen in order to have visible\n\t\t\t\t\t\teffects very quickly and their initial positions and velocities result in\n\t\t\t\t\t\tthem orbiting around each other while orbiting the central sun.  Small changes\n\t\t\t\t\t\tto their orbital velocities will result in significant changes.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\t\n\t\t\t\t\t\tNote that two custom units ME (earth mass) and AU (astronomical unit) are used\n\t\t\t\t\t\tin this session.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\t\n\t\t\t\t\t\tTo run the simulation, Tap on the ode icon and tap the reset and then run buttons.\n\t\t\t\t\t\tAfter the calculations complete, have a look at the Plot_xy and Plot_local_xy graphs.\n\t\t\t\t\t\tTry zooming in on interesting features and viewing the graph full screen if you are\n\t\t\t\t\t\ton an iPad.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\t\n\t\t\t\t\t\tThen try changing the leading 1.0 in the  InitialVx expression to 1.1 and rerun the\n\t\t\t\t\t\tsimulation.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/orbits.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"friction\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tFriction Factor vs Reynolds\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exsubtitle\"><span class=\"excat\">\n\t\t\t\t\t\tEngineering\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tFriction factors are determined by solving the Colebrook equation for a\n\t\t\t\t\t\trange of Reynolds numbers and roughness over diameter factors.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tTo calculate and view the plot, go to the Friction_Factor plot and tap the plot button.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIf you want an operating point displayed, enter the appropriate values in\n\t\t\t\t\t\tOperatingF and OperatingRe.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe friction factors are determined by solving the Colebrook equation for a\n\t\t\t\t\t\trange of Reynolds numbers and roughness over diameter factors.\n\t\t\t\t\t</p>\t\t\t\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/FrictionFactor.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"mccabe\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tMcCabe Thiele\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exsubtitle\"><span class=\"excat\">\n\t\t\t\t\t\tEngineering\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis is a partial port of a McCabe Thiele Excel spreadsheet written by my\n\t\t\t\t\t\tgood friend, Marco Satyro, for teaching purposes.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe spreadsheet made extensive use of the VBA programming language and my\n\t\t\t\t\t\tpurpose was to see if Math Minion could implement the key aspects of the\n\t\t\t\t\t\tcalculations just using its formulas.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe math and science behind this are all Marco's and the errors and omissions\n\t\t\t\t\t\tI undoubtedly introduced are all mine.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/McCabe_Thiele.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"steamturbine\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tSteam Turbine\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exsubtitle\"><span class=\"excat\">\n\t\t\t\t\t\tEngineering\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>Given:</p>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>inlet temperature</li>\n\t\t\t\t\t\t<li>inlet pressure</li>\n\t\t\t\t\t\t<li>outlet pressure</li>\n\t\t\t\t\t\t<li>mass flow</li>\n\t\t\t\t\t\t<li>isentropic efficiency</li>\n\t\t\t\t\t</ul> \n\t\t\t\t\t<p>\n\t\t\t\t\t\tthis model calculates the power, outlet temperature and polytropic\n\t\t\t\t\t\tefficiency of a steam turbine.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIt uses  steam correlations taken from the\n\t\t\t\t\t\t<a href=\"http://www.iapws.org/relguide/IF97-Rev.pdf\">\n\t\t\t\t\t\t\t\"IAPWS Industrial Formulation 1997 for the Thermodynamic Properties of Water and Steam\" document</a>.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tOf course and as always, there are zero guarantees of correct implementation.\n\t\t\t\t\t</p>\n\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/Turbine.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"financialfunc\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tFinancial Functions\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exsubtitle\"><span class=\"excat\">\n\t\t\t\t\t\tFinancial\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis session contains a number of financial functions implemented as MM models.\n\t\t\t\t\t\tThese are the types of things (present value, internal rate of return, depreciation etc.)\n\t\t\t\t\t\tthat are often found in spreadsheet function libraries, but I thought it might be more\n\t\t\t\t\t\tuseful and instructive to just construct them from Minion objects.  Your thoughts and\n\t\t\t\t\t\tsuggestions on this are of course welcome.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tSome also have HTML form objects to illustrate how to create user interface objects\n\t\t\t\t\t\tfor common calculations.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/Financial.txt'});\">Import</button>\n\t\t\t\t</div>\t\t\n\t\t\t</div>\t\n\n\t\t\t<div id=\"taylor\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tTaylor Series Expansion\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exsubtitle\"><span class=\"excat\">\n\t\t\t\t\t\tMath\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tSeries expansion is a common mathematical tool for approximating functions\n\t\t\t\t\t\tthat cannot be directly calculated.  This example will show how Math Minion's\n\t\t\t\t\t\tmatrix object can be used to easily implement a series expansion, specifically\n\t\t\t\t\t\ta Taylor series to calculate e^x and sin(x).\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tSee the notes for each of the objects.\n\t\t\t\t\t</p>\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/Taylor_Series_Expansion.txt'});\">Import</button>\n\t\t\t\t</div>\t\t\n\t\t\t</div>\t\t\t\t\t\n\t\t\t<div id=\"triangulate\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\tTriangulate with Optimizer\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exsubtitle\"><span class=\"excat\">\n\t\t\t\t\tOptimizing\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis example uses the optimizer to calculate the best estimate of the\n\t\t\t\t\t\tlocation of a receiver, given approximate distances to a number of transmitters\n\t\t\t\t\t\tof known location.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tFor simplicity, everything is assumed to be on a single 2D surface.\n\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/Triangulate.txt'});\">Import</button>\n\t\t\t\t</div>\t\t\n\t\t\t</div>\n\n\t\t\t<div id=\"footinch\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\tFoot Inch Calculator\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exsubtitle\"><span class=\"excat\">\n\t\t\t\t\tString Handling\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tImplements a four function calculator for foot, inch fraction format.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis uses the javascript bridge feature introduce in 2.5.3 to allow a\n\t\t\t\t\t\tsmooth connection between the form and the underlying Math Minion calculations.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tBoth the Math Minion models and the form code are heavily commented.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tNote that is intended for use on iOS.  If you want to use it on a Mac,\n\t\t\t\t\t\tyou should change all the onTouchStart calls in the <b>Form</b> html code to onClick instead.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/Foot_Inch_Calculator.txt'});\">Import</button>\n\t\t\t\t</div>\t\t\n\t\t\t</div>\n\n\t\t\t<div id=\"formattime\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\tFormat Time\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exsubtitle\"><span class=\"excat\">\n\t\t\t\t\tString Handling\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis example contains a model that accepts a time value, in seconds since\n\t\t\t\t\t\tthe beginning of 1970, and calculates integer values for the different date\n\t\t\t\t\t\tand time parts as well as formatted date and time strings.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tYou can create sessions from models like these and keep them in a session\n\t\t\t\t\t\tfolder to copy and paste into models as needed.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/FormatTime.txt'});\">Import</button>\n\t\t\t\t</div>\t\t\n\t\t\t</div>\n\n\t\t\t<div id=\"commas\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\tNumbers with Commas\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exsubtitle\"><span class=\"excat\">\n\t\t\t\t\tString Handling\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIllustrates a formula that formats numbers with comma separators for thousands.\n\t\t\t\t\t\tOnly for numbers less than one billion, but could be extended.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/number_commas.txt'});\">Import</button>\n\t\t\t\t</div>\t\t\n\t\t\t</div>\t\t\t\t\t\t\t\t\n\t\t</div>\n\t\t</div>\n\t</body>\n</html>"
				}
			},
			{
				"name": "CoolMM",
				"Notes": "Tap the icon above for information on CoolProp in Math Minion",
				"DiagramX": 70,
				"DiagramY": 100,
				"HideInfo": "n",
				"DiagramNotes": "y",
				"Type": "Model",
				"diagramScale": 1,
				"indexTool": "overview",
				"Objects": [
					{
						"name": "Overview",
						"Notes": "Math Minion + CoolProp",
						"DiagramX": 90,
						"DiagramY": -25,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "HTML Form",
						"Formula": {
							"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h4>Math Minion with CoolProp</h4>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis version of Math Minion has incorporates some of the capabilities of the <a href=\"http://coolprop.org\" target=\"_blank\">CoolProp property package</a> in a <b><a href=\"../help/flash.html\" target=\"_blank\">flash tool</a></b> using CoolProp's HEOS backend. The flash tool also allows a range of properties to be evaluated.\n\t\t</p>\n\t\t<p>\n\t\t\tCoolProp is an open source property package that aims to emulate RefProp from NIST. While written in C++, it can be compiled into web assembly, which allows it to run directly in the browser and incorporated in Math Minion.\n\t\t</p>\n\t\t<p>\n\t\t\tOtherwise this version is identical to the normal version of Math Minion, but the CoolProp code does add to the initial download time.\n\t\t</p>\n\t\t<p>\n\t\t\tTo learn more about using the flash tool, tap on the <b>ToolBox</b> icon and then the <b>refrigeration</b> model for an example of doing some simple calculations with the flash tool.\n\t\t</p>\n\t\t<p>\n\t\t\tPeruse the other models in the <b>ToolBox</b>, including the <b>SelectThermo</b> model which makes it easy to create the thermo definition and where you can list the components and additional properties available from its drop down menus.\n\t\t</p>\n\t\t<p>\n\t\t\tThere are more examples and widgets in the <b>ToolBox</b> model and the <b>Examples</b> Html page will let you load additional examples from the server.  Most models and examples have an html overview page of explanations. \n\t\t</p>\n\t\t<p>\n\t\t\tAt some point you will probably need to read over the <b><a href=\"../help/flash.html\" target=\"_blank\">flash tool help</a></b> for details on how to use it.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
						}
					},
					{
						"name": "ToolBox",
						"Notes": "",
						"DiagramX": 170,
						"DiagramY": -25,
						"HideInfo": "n",
						"DiagramNotes": "n",
						"Type": "Model",
						"diagramScale": 1,
						"Objects": [
							{
								"name": "Mix2",
								"Notes": "Takes two flash results and produces thermo, p, f, h and x values for the combined fluid.",
								"DiagramX": 155,
								"DiagramY": 250,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "overview",
								"Objects": [
									{
										"name": "Feed1",
										"DiagramX": 100,
										"DiagramY": 70,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "Feed2",
										"DiagramX": 100,
										"DiagramY": 105,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "P",
										"DiagramX": 200,
										"DiagramY": 55,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{min feed1.p, feed2.p}"
										},
										"isOutput": "y"
									},
									{
										"name": "F",
										"DiagramX": 200,
										"DiagramY": 80,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "Feed1.f + feed2.f"
										},
										"isOutput": "y"
									},
									{
										"name": "H",
										"DiagramX": 200,
										"DiagramY": 105,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "(Feed1.h * feed1.f + Feed2.h * feed2.f)/F"
										},
										"isOutput": "y"
									},
									{
										"name": "X",
										"DiagramX": 200,
										"DiagramY": 130,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "(feed1.x * feed1.f +\nfeed2.x * feed2.f) / f"
										},
										"isOutput": "y"
									},
									{
										"name": "thermo",
										"Notes": "",
										"DiagramX": 200,
										"DiagramY": 30,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "Feed1.thermo"
										},
										"isOutput": "y"
									},
									{
										"name": "Overview",
										"Notes": "Mix2 Overview",
										"DiagramX": 100,
										"DiagramY": 35,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Mix2 Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tFrom the mixing of two fluids this model calculates the properties required as <b>flash tool</b> inputs.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>feed1</b> - a flash result or similar representing the inlet fluid. Must have thermo, pressure, flow and mole fraction properties.</li>\n\t\t\t<li><b>feed2</b> - second feed with same requirements as feed1, except thermo is not used.</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>thermo</b> - thermo definition copied from feed1</li>\n\t\t\t<li><b>p</b> - the outlet pressure, which is assumed to be the lessor of the two feed pressures</li>\n  \t\t<li><b>f</b> - the combined molar flow</li>\n  \t\t<li><b>h</b> - the mixture enthalpy</li>\n  \t\t<li><b>x</b> - the mixture mole fraction</li>\n\t\t</ul>\n\t\t</div>\n\t</body>\n</html>"
										}
									}
								]
							},
							{
								"name": "HeatExch",
								"Notes": "Simple counter current heat exchanger",
								"DiagramX": 235,
								"DiagramY": 185,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "overview",
								"Objects": [
									{
										"name": "Side1In",
										"Notes": "Side 1 inlet\n(should be a flash result)",
										"DiagramX": 155,
										"DiagramY": 180,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "Side1DP",
										"Notes": "Side 1 pressure drop",
										"DiagramX": 155,
										"DiagramY": 215,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "10 kpa"
										},
										"isInput": "y"
									},
									{
										"name": "Side2In",
										"Notes": "Side 2 inlet\n(should be a flash result)",
										"DiagramX": 155,
										"DiagramY": 245,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "Side2DP",
										"Notes": "Side 2 pressure drop",
										"DiagramX": 155,
										"DiagramY": 280,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "10 kpa"
										},
										"isInput": "y"
									},
									{
										"name": "T2Out",
										"Notes": "Side 2 outlet temperature",
										"DiagramX": 155,
										"DiagramY": 310,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y",
										"displayUnit": "degC"
									},
									{
										"name": "dt",
										"Notes": "Temperature difference between side 1 inlet and side 2 outlet.\nOnly used if T2Out is blank",
										"DiagramX": 155,
										"DiagramY": 340,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "10 deltac"
										},
										"isInput": "y",
										"displayUnit": "deltaC"
									},
									{
										"name": "Duty",
										"Notes": "Calculated exchanger duty",
										"DiagramX": 370,
										"DiagramY": 215,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(side1flash.h - side1in.h) * side1In.f"
										},
										"isOutput": "y"
									},
									{
										"name": "lmtd",
										"Notes": "Log mean temperature difference",
										"DiagramX": 370,
										"DiagramY": 250,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "LMTD_Calc.lmtd"
										},
										"isOutput": "y",
										"displayUnit": "deltaC"
									},
									{
										"name": "Side1Flash",
										"Notes": "Flash representing the side 1 outlet.\n\nThe pressure is determined by the inlet pressure and the pressure drop.\n\nThe second property is the fluid enthalpy, determined by a heat balance on the inlets and outlets.",
										"DiagramX": 265,
										"DiagramY": 275,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Flash",
										"thermo": {
											"Formula": "Side1In.thermo"
										},
										"firstprop": {
											"Formula": "side1in.p - side1dp"
										},
										"secondprop": {
											"Formula": "(side1in.h * side1in.f\n + side2in.h * side2in.f\n - side2flash.h * side2flash.f\n) / side1In.f"
										},
										"molefrac": {
											"Formula": "side1In.x"
										},
										"massfrac": {
											"Formula": ""
										},
										"flow": {
											"Formula": "side1in.f"
										}
									},
									{
										"name": "Side2Flash",
										"Notes": "Flash representing the side s outlet.\n\nThe pressure is determined by the inlet pressure and the pressure drop.\n\nThe second property is the temperature determined by either the value of T2Out or if it is missing, the side one inlet temperature and the value of dt.",
										"DiagramX": 265,
										"DiagramY": 310,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Flash",
										"thermo": {
											"Formula": "side2in.thermo"
										},
										"firstprop": {
											"Formula": "{if t2out.hasvalue, t2out, side1in.t - dt}"
										},
										"secondprop": {
											"Formula": "side2in.p - side2dp"
										},
										"molefrac": {
											"Formula": "side2in.x"
										},
										"massfrac": {
											"Formula": ""
										},
										"flow": {
											"Formula": "side2in.f"
										}
									},
									{
										"name": "Side1Out",
										"Notes": "Side 1 outlet fluid",
										"DiagramX": 370,
										"DiagramY": 280,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "Side1Flash"
										},
										"isOutput": "y"
									},
									{
										"name": "Side2Out",
										"Notes": "Side 2 outlet fluid",
										"DiagramX": 370,
										"DiagramY": 310,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "side2flash"
										},
										"isOutput": "y"
									},
									{
										"name": "Overview",
										"Notes": "Heat Exchanger Overview",
										"DiagramX": 265,
										"DiagramY": 180,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Heat Exchanger Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model represents a thermodynamic heat balance on a simple counter current <a href=\"https://en.wikipedia.org/wiki/Heat_exchanger\" target=\"_blank\">heat exchanger</a>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>side1In</b> - a flash result or similar representing the inlet fluid on side 1.</li>\n\t\t\t<li><b>side1Dp</b> - pressure drop across side 1, (inlet pressure - outlet pressure).</li>\n\t\t\t<li><b>side2In</b> - a flash result or similar representing the inlet fluid on side 2.</li>\n\t\t\t<li><b>side1Dp</b> - pressure drop across side 2, (inlet pressure - outlet pressure).</li>\n\t\t\t<li><b>T2Out</b> - outlet temperature of side 2. Can be empty.</li>\n\t\t\t<li><b>dt</b> - temperature difference between side 1 inlet and side 2 outlet. This is only used if T2Out is empty.</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>duty</b> - the energy flow from side 2 to side 1.</li>\n\t\t\t<li><b>lmtd</b> - the log mean temperature difference.</li>\n  \t\t<li><b>side1Out</b> - the flash result for the side 1 outlet fluid.</li>\n  \t\t<li><b>side2Out</b> - the flash result for the side 2 outlet fluid.</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tIt is assumed that both inlet fluids are completely known. This of course means the flow and compositions of the outlets are also known and because the pressure drops are also inputs, the outlet pressures are known.\n\t\t</p>\n\t\t<p>\n\t\t\tThe temperature of the side 2 outlet is either directly supplied by input expression <b>T2Out</b> or can be calculated from the side 1 inlet temperature and the supplied temperature approach from inlet expression <b>dt</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tThis allows the conditions of the side 2 outlet to be evaluated, leaving only the side 1 outlet unknown. However it only needs one additional intensive variable and that can be supplied by doing an energy balance around the exchanger to give the side 1 outlet enthalpy.  This calculation is perform right in the formula for the 2nd property of <b>Side1Flash</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe exchanger duty is calculated by subtracting the side 1 outlet energy flow from the inlet.\n\t\t</p>\n\t\t<p>\n\t\t\tFinally the <a href=\"https://en.wikipedia.org/wiki/Logarithmic_mean_temperature_difference\" target=\"_blank\">log mean temperature difference</a> is calculated in expression <b>lmtd</b>.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										}
									},
									{
										"name": "LMTD_Calc",
										"Notes": "Log Mean Temperature Difference",
										"DiagramX": 265,
										"DiagramY": 240,
										"HideInfo": "n",
										"DiagramNotes": "y",
										"Type": "Model",
										"diagramScale": 1,
										"indexTool": "overview",
										"Objects": [
											{
												"name": "side1Tin",
												"Notes": "",
												"DiagramX": 200,
												"DiagramY": 330,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "side1in.t"
												},
												"isInput": "y"
											},
											{
												"name": "side1Tout",
												"Notes": "",
												"DiagramX": 200,
												"DiagramY": 355,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "side1flash.t"
												},
												"isInput": "y"
											},
											{
												"name": "side2Tin",
												"Notes": "",
												"DiagramX": 200,
												"DiagramY": 380,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "side2in.t"
												},
												"isInput": "y"
											},
											{
												"name": "side2Tout",
												"Notes": "",
												"DiagramX": 200,
												"DiagramY": 405,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "side2flash.t"
												},
												"isInput": "y"
											},
											{
												"name": "dta",
												"Notes": "Calculated temperature difference between side 1 inlet and side 2 outlet.",
												"DiagramX": 305,
												"DiagramY": 300,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "side1Tin - side2Tout"
												},
												"displayUnit": "deltaC"
											},
											{
												"name": "dtb",
												"Notes": "Temperature difference between side 2 inlet and side 1 outlet.",
												"DiagramX": 305,
												"DiagramY": 340,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "side1Tout - side2Tin"
												},
												"displayUnit": "deltaC"
											},
											{
												"name": "lmtd",
												"Notes": "Log mean temperature difference",
												"DiagramX": 305,
												"DiagramY": 380,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "(dta - dtb) / {ln dta / dtb}"
												},
												"isOutput": "y",
												"displayUnit": "deltaC"
											},
											{
												"name": "Overview",
												"Notes": "LMTD Overview",
												"DiagramX": 200,
												"DiagramY": 300,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "HTML Form",
												"Formula": {
													"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Log Mean Temperature Difference</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis convenience model calculates the log mean temperature difference for a counter current heat exchanger.  The inputs are just the inlet and outlet temperatures, while the sole output is the <b>lmtd</b>.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
												},
												"f0": "envplot.svg"
											}
										]
									}
								]
							},
							{
								"name": "McCabe_Thiele",
								"Notes": "Constructs a McCabe Thiele diagram for the distilation of a binary mixture.",
								"DiagramX": 235,
								"DiagramY": 300,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "overview",
								"Objects": [
									{
										"name": "BubblePts",
										"Notes": "calculates bubble point curve",
										"DiagramX": 260,
										"DiagramY": 255,
										"HideInfo": "n",
										"DiagramNotes": "y",
										"Type": "Model",
										"diagramScale": 1,
										"indexTool": "overview",
										"Objects": [
											{
												"name": "nPoints",
												"DiagramX": 200,
												"DiagramY": 210,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "100"
												},
												"isInput": "y"
											},
											{
												"name": "p",
												"DiagramX": 200,
												"DiagramY": 185,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "151.9875 kpa"
												},
												"isInput": "y"
											},
											{
												"name": "iter",
												"Notes": "",
												"DiagramX": 290,
												"DiagramY": 155,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Iterator",
												"whileFormula": {
													"Formula": "{le $.i, nPoints + 1}"
												},
												"initXFormula": {
													"Formula": "0"
												},
												"nextXFormula": {
													"Formula": "$.x + 1/nPoints"
												},
												"recFormulas": [
													{
														"Formula": "$.x'x1"
													},
													{
														"Formula": "1- $.x'x2"
													},
													{
														"Formula": "bubpt.t't"
													},
													{
														"Formula": "bubpt.v.x[1]'y1"
													}
												],
												"AutoRun": "y"
											},
											{
												"name": "bubpt",
												"Notes": "",
												"DiagramX": 290,
												"DiagramY": 125,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Flash",
												"thermo": {
													"Formula": "thermo"
												},
												"firstprop": {
													"Formula": "p"
												},
												"secondprop": {
													"Formula": "0"
												},
												"molefrac": {
													"Formula": "{cc iter.x, 1-iter.x}"
												},
												"massfrac": {
													"Formula": ""
												},
												"flow": {
													"Formula": ""
												}
											},
											{
												"name": "thermo",
												"Notes": "",
												"DiagramX": 200,
												"DiagramY": 160,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "thermo"
												},
												"isInput": "y"
											},
											{
												"name": "x1",
												"DiagramX": 290,
												"DiagramY": 185,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "iter.x1"
												},
												"isOutput": "y"
											},
											{
												"name": "y1",
												"DiagramX": 290,
												"DiagramY": 210,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "iter.y1"
												},
												"isOutput": "y"
											},
											{
												"name": "Overview",
												"Notes": "Bubble Points Overview",
												"DiagramX": 200,
												"DiagramY": 125,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "HTML Form",
												"Formula": {
													"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Bubble Points Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model calculates an x-y bubble point curve for a given binary.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>thermo</b> - the components to use - there must be exactly two.</li>\n\t\t\t<li><b>p</b> - the pressure.</li>\n\t\t\t<li><b>nPoints</b> - the number of points to produce.</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>x1</b> - the first component liquid mole fraction.</li>\n\t\t\t<li><b>y1</b> - the first component vapour mole fraction.</li>\n\t\t\t<li><b>t</b> - the bubble temperature at each point.</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe graph <b>bpPlot</b> plots the bubble point x versus y and also includes an a vs temperature curve.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
												}
											},
											{
												"name": "t",
												"Notes": "",
												"DiagramX": 290,
												"DiagramY": 235,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "iter.t"
												},
												"isOutput": "y"
											},
											{
												"name": "bpPlot",
												"DiagramX": 290,
												"DiagramY": 260,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Graph",
												"X1": {
													"v": "x1",
													"vmin": "",
													"vmax": "",
													"Y1": {
														"v": "y1",
														"vmin": "",
														"vmax": "",
														"lineType": 0
													},
													"Y2": {
														"v": "x1",
														"vmin": "",
														"vmax": "",
														"lineType": 0
													},
													"Y3": {
														"v": "t",
														"vmin": "",
														"vmax": "",
														"lineType": 0
													}
												}
											}
										]
									},
									{
										"name": "xb",
										"Notes": "Component 1 in bottoms",
										"DiagramX": 130,
										"DiagramY": 385,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "0.0001955857"
										},
										"isInput": "y"
									},
									{
										"name": "xd",
										"Notes": "Component 1 in distillate",
										"DiagramX": 130,
										"DiagramY": 420,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": ".8385901792"
										},
										"isInput": "y"
									},
									{
										"name": "rr",
										"Notes": "Reflux ratio",
										"DiagramX": 130,
										"DiagramY": 355,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "4.61"
										},
										"isInput": "y"
									},
									{
										"name": "lov",
										"Notes": "L/V ratio",
										"DiagramX": 125,
										"DiagramY": 480,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "rr/(rr+1)"
										}
									},
									{
										"name": "arect",
										"Notes": "The x=0 intercept of the rectification line",
										"DiagramX": 125,
										"DiagramY": 510,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "xd - lov * xd"
										}
									},
									{
										"name": "yf",
										"Notes": "Compound 1 feed mole fraction",
										"DiagramX": 130,
										"DiagramY": 315,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": ".20679087"
										},
										"isInput": "y"
									},
									{
										"name": "xf",
										"Notes": "Intersection of feed line and rectification line",
										"DiagramX": 260,
										"DiagramY": 405,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(yf - arect)/lov"
										}
									},
									{
										"name": "lbovb",
										"Notes": "L/V for stripping section",
										"DiagramX": 260,
										"DiagramY": 315,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(yf - xb) / (xf - xb)"
										}
									},
									{
										"name": "ast",
										"Notes": "The x=0 intercept of the stripping line",
										"DiagramX": 260,
										"DiagramY": 470,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "yf - lbovb * xf"
										}
									},
									{
										"name": "stgxy",
										"DiagramX": 260,
										"DiagramY": 375,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "0",
											"0_2": "{if {ge {cell -1,-1}, xf},\n  arect + lov * {cell -1, -1},\n  ast + lbovb * {cell -1, -1}\n}",
											"1_2": "xd",
											"0_1": "{lookup {cell 0, 1},\n  bubblepts.y1,\n  bubblepts.x1\n}"
										},
										"rowCount": "nStages",
										"columnCount": "2"
									},
									{
										"name": "stepY",
										"Notes": "y values for plotting steps",
										"DiagramX": 365,
										"DiagramY": 430,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "0",
											"0_1": "stgxy[{int ({row} - 1)/2} + 1,2]"
										},
										"rowCount": "{nrows stgxy}*2",
										"columnCount": "1"
									},
									{
										"name": "stepX",
										"Notes": "X values for plotting steps",
										"DiagramX": 365,
										"DiagramY": 470,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "0",
											"0_1": "stgxy[ {int {row}/2},1]",
											"1_1": "stgxy[1,2]"
										},
										"rowCount": "{nrows stgxy}*2+1",
										"columnCount": "1"
									},
									{
										"name": "McCabe_Thiele",
										"Notes": "",
										"DiagramX": 365,
										"DiagramY": 395,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Graph",
										"X1": {
											"v": "bubblepts.x1'x1",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "bubblepts.y1'y1",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											},
											"Y2": {
												"v": "bubblepts.x1'x1",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											}
										},
										"X2": {
											"v": "qline[1:2,1]",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "qline[1:2,2]",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											}
										},
										"X3": {
											"v": "rectline[1:2,1]",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "rectline[1:2,2]",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											}
										},
										"X4": {
											"v": "stripLine[1:2,1]",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "stripLine[1:2,2]",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											}
										},
										"X5": {
											"v": "stepX",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "stepY",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											}
										}
									},
									{
										"name": "rectline",
										"DiagramX": 260,
										"DiagramY": 510,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "0",
											"1_0": "xd",
											"2_2": "arect"
										},
										"rowCount": "2",
										"columnCount": "2"
									},
									{
										"name": "qline",
										"Notes": "",
										"DiagramX": 260,
										"DiagramY": 345,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "yf",
											"2_1": "yf -.2",
											"2_2": "yf"
										},
										"rowCount": "2",
										"columnCount": "2"
									},
									{
										"name": "stripLine",
										"DiagramX": 260,
										"DiagramY": 440,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Matrix",
										"CellInputs": {
											"0_0": "0",
											"2_1": "0",
											"1_2": "yf",
											"2_2": "ast",
											"1_1": "xf"
										},
										"rowCount": "2",
										"columnCount": "2"
									},
									{
										"name": "feedStage",
										"DiagramX": 125,
										"DiagramY": 455,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{int\n  {lookup -xf,\n    -stgxy[(1:nStages), 1],\n    1:nStages\n  } + 1\n}"
										},
										"isOutput": "y"
									},
									{
										"name": "nStages",
										"Notes": "Number of ideal stages",
										"DiagramX": 130,
										"DiagramY": 285,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "20"
										},
										"isInput": "y"
									},
									{
										"name": "minStageIter",
										"Notes": "",
										"DiagramX": 260,
										"DiagramY": 290,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Iterator",
										"whileFormula": {
											"Formula": "{and\n\t{le $.i, 200},\n\t{or\n\t\t{not $.1},\n\t\t{gt $.1, xb}\n\t}\n}"
										},
										"initXFormula": {
											"Formula": "xd"
										},
										"nextXFormula": {
											"Formula": "{lookup $.x, bubblepts.y1, bubblepts.x1}"
										},
										"recFormulas": [
											{
												"Formula": "$.x'x1"
											}
										],
										"AutoRun": "y"
									},
									{
										"name": "minStages",
										"Notes": "Component 1 on each of minimun number of stages",
										"DiagramX": 365,
										"DiagramY": 350,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "minStageIter.x1"
										},
										"isOutput": "y"
									},
									{
										"name": "Overview",
										"Notes": "Overview",
										"DiagramX": 365,
										"DiagramY": 255,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>McCabe Thiele Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model utilizes the <a href=\"https://en.wikipedia.org/wiki/McCabe–Thiele_method\" target=\"_blank\">McCabe Thiele method</a> to represent a binary distillation.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>thermo</b> - the components to use - there must be exactly two and the lighter one must be first.</li>\n\t\t\t<li><b>nStages</b> - the number of ideal stages.</li>\n\t\t\t<li><b>yf</b> - compound 1 feed mole fraction.</li>\n\t\t\t<li><b>rr</b> - the reflux ratio.</li>\n\t\t\t<li><b>xb</b> - mole fraction of component 1 in the bottoms.</li>\n\t\t\t<li><b>xd</b> - mole fraction of component 1 in the distillate.</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>feedstage</b> - Feed stage.</li>\n\t\t\t<li><b>stageCmps</b> - Component 1 x and y mole fractions on each stage</li>\n\t\t\t<li><b>stageTemps</b>- Temperature on each stage.</li>\n\t\t\t<li><b>minstages</b> - Component 1 mole fraction on each of minimun number of stages.</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe McCabe Thiele diagram is displayed in graph <b>McCabe_Thiele</b>.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										}
									},
									{
										"name": "Thermo",
										"Notes": "Light, heavy components",
										"DiagramX": 130,
										"DiagramY": 255,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "'Ethanol,Water"
										},
										"isInput": "y"
									},
									{
										"name": "StageCmps",
										"Notes": "Component 1 x and y mole fractions on each stage",
										"DiagramX": 365,
										"DiagramY": 285,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{table {cc \"x\", \"y\"},\nstgxy[0,1], stgxy[0,2]}"
										},
										"isOutput": "y"
									},
									{
										"name": "StageTemps",
										"Notes": "Stage temperatures",
										"DiagramX": 365,
										"DiagramY": 320,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{lookup stgxy[0,1], bubblepts.x1, bubblepts.t}"
										}
									}
								]
							},
							{
								"name": "FFFPressDrop",
								"Notes": "Fanning Friction Factor pressure drop calculation.",
								"DiagramX": 315,
								"DiagramY": 250,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "overview",
								"Objects": [
									{
										"name": "Diameter",
										"Notes": "Pipe diameter",
										"DiagramX": 55,
										"DiagramY": 55,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "10 in"
										},
										"isInput": "y"
									},
									{
										"name": "Q",
										"Notes": "real volumetric flow rate",
										"DiagramX": 170,
										"DiagramY": 70,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "average.f / average.dmolar"
										},
										"isOutput": "y"
									},
									{
										"name": "A",
										"Notes": "pipe area",
										"DiagramX": 55,
										"DiagramY": 160,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{pi}* (Diameter/2)^2"
										}
									},
									{
										"name": "Velocity",
										"Notes": "Fluid velocity",
										"DiagramX": 170,
										"DiagramY": 135,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "Q / A"
										},
										"isOutput": "y"
									},
									{
										"name": "Re",
										"Notes": "Reynolds number",
										"DiagramX": 170,
										"DiagramY": 165,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "average.dmass * Velocity * Diameter / average.viscosity"
										},
										"isOutput": "y"
									},
									{
										"name": "h",
										"Notes": "head per unit of length",
										"DiagramX": 170,
										"DiagramY": 10,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "2 * f * Velocity^2 * L /\n( g * Diameter)"
										}
									},
									{
										"name": "g",
										"Notes": "",
										"DiagramX": 280,
										"DiagramY": -15,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "9.8 m/s^2"
										}
									},
									{
										"name": "dP",
										"Notes": "Pressure drop",
										"DiagramX": 170,
										"DiagramY": 40,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "h * average.dmass * 1 \"kgf\" / 1 \"kg\""
										},
										"isOutput": "y"
									},
									{
										"name": "L",
										"Notes": "Pipe length",
										"DiagramX": 55,
										"DiagramY": 125,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1 km"
										},
										"isInput": "y"
									},
									{
										"name": "Pout",
										"Notes": "Calculated outlet pressure",
										"DiagramX": 55,
										"DiagramY": 195,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "inlet.p - dp"
										},
										"isOutput": "y"
									},
									{
										"name": "average",
										"Notes": "Flash at average pressure",
										"DiagramX": 55,
										"DiagramY": -5,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Flash",
										"thermo": {
											"Formula": "inlet.thermo"
										},
										"firstprop": {
											"Formula": "inlet.t"
										},
										"secondprop": {
											"Formula": "(inlet.p + estPOut) / 2"
										},
										"molefrac": {
											"Formula": "inlet.x"
										},
										"massfrac": {
											"Formula": ""
										},
										"flow": {
											"Formula": "inlet.f"
										}
									},
									{
										"name": "solver",
										"Notes": "Solver for average pressure and Colebrook equation.",
										"DiagramX": 170,
										"DiagramY": 100,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Equation Solver",
										"f0": "pout - estPOut",
										"c0": "1",
										"f1": "lhs-rhs",
										"c1": "1",
										"maxIter": 200,
										"maxJacobians": 5,
										"Enabled": "y"
									},
									{
										"name": "estPOut",
										"Notes": "estimated outlet pressure.  Average pressure will be adjusted to make this equal to the calculated outlet pressure.",
										"DiagramX": 170,
										"DiagramY": -40,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "inlet.p * (1 + 0.3 * solver.1)"
										}
									},
									{
										"name": "lhs",
										"Notes": "Left hand side of the Colebrook formula",
										"DiagramX": 280,
										"DiagramY": 90,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1/rootf"
										}
									},
									{
										"name": "ed",
										"Notes": "e/D the roughness over diameter factor.",
										"DiagramX": 55,
										"DiagramY": 85,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "0.01"
										},
										"isInput": "y"
									},
									{
										"name": "rhs",
										"Notes": "Right hand side of the Colebrook formula.",
										"DiagramX": 170,
										"DiagramY": 195,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "-4*{log ed/3.7 + 1.256/(re*rootf)}"
										}
									},
									{
										"name": "rootf",
										"Notes": "square root if the friction factor.",
										"DiagramX": 280,
										"DiagramY": 50,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "solver.2+.1+1e-9"
										}
									},
									{
										"name": "f",
										"Notes": "Fanning friction factor",
										"DiagramX": 280,
										"DiagramY": 15,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "rootf^2"
										},
										"isOutput": "y"
									},
									{
										"name": "Inlet",
										"Notes": "Inlet fluid (flash result)",
										"DiagramX": 55,
										"DiagramY": 25,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "Overview",
										"Notes": "Fanning friction factor pressure drop overview",
										"DiagramX": 55,
										"DiagramY": -40,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Fanning Friction Factor Pressure Drop Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t\t<p>\n\t\t\t\tThis model calculates the pressure drop for a <b>single phase turbulent</b> fluid in a pipe using the <a href=\"https://en.wikipedia.org/wiki/Fanning_friction_factor\" target=\"_blank\">Fanning Friction Factor</a> calculation.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe input expressions are:\n\t\t\t</p>\n\t\t\t<ul>\n\t\t\t\t<li><b>Inlet</b> - a flash result or similar representing the inlet fluid.</li>\n\t\t\t\t<li><b>Diameter</b> - the inside diameter of the pipe.</li>\n\t\t\t\t<li><b>ed</b> - e/D the roughness over diameter factor.</li>\n\t\t\t\t<li><b>L</b> - the length of the pipe.</li>\n\t\t\t</ul>\n\t\t\t<p>\n\t\t\t\tThe outlet expressions are:\n\t\t\t</p>\n\t\t\t<ul>\n\t\t\t\t<li><b>Pout</b> - the outlet pressure.</li>\n\t\t\t\t<li><b>dp</b> - the pressure drop (inlet minus outlet pressure).</li>\n\t\t\t\t<li><b>Q</b> - the volumentric flow rate.</li>\n\t\t\t\t<li><b>Velocity</b> - the fluid velocity.</li>\n\t\t\t\t<li><b>Re</b> - the Reynolds number.</li>\n\t\t\t\t<li><b>f</b> - the Fanning Friction Factor.</li>\n\t\t\t</ul>\n\t\t\t<p>\n\t\t\t\tA flash tool (<b>average</b>) is used to calculate the fluid properties at the average pressure. Since the outlet pressure is not initially known, the <b>solver</b> tool is used to adjust the estimated outlet pressure (<b>estPOut</b>) until it matches the calculated one (<b>Pout</b>).  It simultaneously adjusts the root of the friction factor (<b>rootf</b>) until both sides of the <a href=\"https://en.wikipedia.org/wiki/Fanning_friction_factor#General_expression\" target=\"_blank\">Colebrook equation</a> match (<b>lhs</b> and <b>rhs</b>).\n\t\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										}
									}
								]
							},
							{
								"name": "SelectThermo",
								"Notes": "Use this model to easily create the component list and additional properties that comprise the thermo definition for flash tools.\n\nAfter clicking the apply button on this page, the definition will be available as parameter thermo for this model.\n\nThus in a flash tool in a model that also contains the model, you could define its thermo as just\n\nselectthermo.thermo",
								"DiagramX": 155,
								"DiagramY": 185,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "thermoselection",
								"Objects": [
									{
										"name": "ThermoSelection",
										"Notes": "Thermo selection page",
										"DiagramX": 130,
										"DiagramY": 45,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t\t<script>\n\t\t\twindow.onload = () => {\n\t\t\t\tconst fluidList = document.getElementById('fluid-list');\n\t\t\t\tconst fluids = '<mm>{join listFlash.fluids, \",\"}</mm>'.split(',');\n\t\t\t\tconst fluidsHtml = fluids.map((name) => {\n\t\t\t\t\treturn `<option value=${name}>${name}</option>`;\n\t\t\t\t})\n\t\t\t\tfluidList.innerHTML = '<option value=\"\">Components</option>' + fluidsHtml.join('\\n');\n\t\t\t\tmmpost({}, {thermo: 'thermo'}, (result) => {\n\t\t\t\t\tconsole.log(`current ${result.thermo}`);\n\t\t\t\t\tif (result && result.thermo) {\n\t\t\t\t\tconst textArea = document.getElementById('thermo-string');\n\t\t\t\t\ttextArea.value = result.thermo;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tconst fluidSelected = (name) => {\n\t\t\t\tconst textArea = document.getElementById('thermo-string');\n\t\t\t\tif (textArea.value.length) {\n\t\t\t\t\ttextArea.value += ',\\n'\n\t\t\t\t}\n\t\t\t\ttextArea.value += `${name}`;\n\t\t\t\ttextArea.scrollTop = 99999;\n\t\t\t}\n\t\t\tconst propSelected = (name) => {\n\t\t\t\tconst textArea = document.getElementById('thermo-string');\n\t\t\t\tlet value = textArea.value;\n\t\t\t\tif (name && value.length) {\n\t\t\t\t\tif (!value.match(/;/)) {\n\t\t\t\t\t\tvalue += `\\n;\\n${name}`;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\tvalue += `,\\n${name}`;\n\t\t\t\t\ttextArea.value = value;\n\t\t\t\t\ttextArea.scrollTop = 99999;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst apply = () => {\n\t\t\t\tconst textArea = document.getElementById('thermo-string');\n\t\t\t\tmmpost({thermo: textArea.value}, {});\n\t\t\t}\n\t\t</script>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Thermo Selection</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<div>\n\t\t\t<textarea id=\"thermo-string\" rows=\"5\"></textarea>\n\t\t\t<p>\n\t\t\t\tFirst select the components you from the dropdown below. They will be added to the text box above.\n\t\t\t</p>\n\t\t\t<select id=\"fluid-list\" onChange=\"fluidSelected(this.value);\">\n\t\t\t</select>\n\t\t\t<p>\n\t\t\t\tIf you want additional properties besides the default (q, t, p, f, h, s, dmolar, mwt, x), select them from the drop down below to have them added to the thermo definition,\n\t\t\t</p>\n\t\t\t<select id=\"prop-list\" onChange=\"propSelected(this.value);\">\n\t\t\t\t<option value=\"\">Properties</option>\n\t\t\t\t<option value=\"massf\">massf</option>\n\t\t\t\t<option value=\"massx\">massx</option>\n\t\t\t\t<option value=\"hflow\">hflow</option>\n\t\t\t\t<option value=\"cpmolar\">cpmolar</option>\n\t\t\t\t<option value=\"cp0molar\">cp0molar</option>\n\t\t\t\t<option value=\"cvmolar\">cvmolar</option>\n\t\t\t\t<option value=\"umolar\">umolar</option>\n\t\t\t\t<option value=\"gmolar\">gmolar</option>\n\t\t\t\t<option value=\"cpmass\">cpmass</option>\n\t\t\t\t<option value=\"cp0mass\">cp0mass</option>\n\t\t\t\t<option value=\"cvmass\">cvmass</option>\n\t\t\t\t<option value=\"dmass\">dmass</option>\n\t\t\t\t<option value=\"umass\">umass</option>\n\t\t\t\t<option value=\"gmass\">gmass</option>\n\t\t\t\t<option value=\"tmin\">tmin</option>\n\t\t\t\t<option value=\"tmax\">tmax</option>\n\t\t\t\t<option value=\"pmin\">pmin</option>\n\t\t\t\t<option value=\"viscosity\">viscosity</option>\n\t\t\t\t<option value=\"conductivity\">conductivity</option>\n\t\t\t\t<option value=\"surfacetension\">surfacetension</option>\n\t\t\t\t<option value=\"prandtl\">prandtl</option>\n\t\t\t</select>\n\t\t\t<p>\n\t\t\t\t<button onClick=\"apply()\">Apply</button>\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tWhen done, edit the text box if necessary and then click the <b>Apply</b> button above. This will make the list available as property <b>thermo</b> for both this html page and the enclosing model.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tYou can return to this page and edit the thermo definition and click <b>Apply</b> again when done.\n\t\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										},
										"inputs": {
											"thermo": ""
										},
										"f0": "{join listFlash.fluids, \",\"}",
										"f1": "thermo"
									},
									{
										"name": "listFlash",
										"Notes": "Empty flash to get fluid list from",
										"DiagramX": 210,
										"DiagramY": 45,
										"HideInfo": "n",
										"DiagramNotes": "y",
										"Type": "Flash",
										"thermo": {
											"Formula": ""
										},
										"firstprop": {
											"Formula": ""
										},
										"secondprop": {
											"Formula": ""
										},
										"molefrac": {
											"Formula": ""
										},
										"massfrac": {
											"Formula": ""
										},
										"flow": {
											"Formula": ""
										}
									},
									{
										"name": "thermo",
										"Notes": "Outlet expression with thermo definition",
										"DiagramX": 210,
										"DiagramY": 85,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "ThermoSelection.thermo"
										},
										"isOutput": "y"
									}
								]
							},
							{
								"name": "LMTD",
								"Notes": "Log Mean Temperature Difference",
								"DiagramX": 315,
								"DiagramY": 220,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "overview",
								"Objects": [
									{
										"name": "side1Tin",
										"Notes": "",
										"DiagramX": 200,
										"DiagramY": 330,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "side1Tout",
										"Notes": "",
										"DiagramX": 200,
										"DiagramY": 355,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "side2Tin",
										"Notes": "",
										"DiagramX": 200,
										"DiagramY": 380,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "side2Tout",
										"Notes": "",
										"DiagramX": 200,
										"DiagramY": 405,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "dta",
										"Notes": "Calculated temperature difference between side 1 inlet and side 2 outlet.",
										"DiagramX": 305,
										"DiagramY": 300,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "side1Tin - side2Tout"
										},
										"displayUnit": "deltaC"
									},
									{
										"name": "dtb",
										"Notes": "Temperature difference between side 2 inlet and side 1 outlet.",
										"DiagramX": 305,
										"DiagramY": 340,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "side1Tout - side2Tin"
										},
										"displayUnit": "deltaC"
									},
									{
										"name": "lmtd",
										"Notes": "Log mean temperature difference",
										"DiagramX": 305,
										"DiagramY": 380,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(dta - dtb) / {ln dta / dtb}"
										},
										"isOutput": "y",
										"displayUnit": "deltaC"
									},
									{
										"name": "Overview",
										"Notes": "LMTD Overview",
										"DiagramX": 200,
										"DiagramY": 300,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Log Mean Temperature Difference</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis convenience model calculates the log mean temperature difference for a counter current heat exchanger.  The inputs are just the inlet and outlet temperatures, while the sole output is the <b>lmtd</b>.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										},
										"f0": "envplot.svg"
									}
								]
							},
							{
								"name": "refrigeration",
								"Notes": "A simple single state refrigeration calculation",
								"DiagramX": 155,
								"DiagramY": 300,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "refrigeration",
								"Objects": [
									{
										"name": "InletQ",
										"Notes": "the cooling duty",
										"DiagramX": 235,
										"DiagramY": 345,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "300 kw"
										},
										"isInput": "y"
									},
									{
										"name": "condT",
										"Notes": "condensing temperature",
										"DiagramX": 235,
										"DiagramY": 375,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "40 degc"
										},
										"isInput": "y"
									},
									{
										"name": "ColdT",
										"Notes": "required coolant temperature",
										"DiagramX": 235,
										"DiagramY": 315,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "-10 degC"
										},
										"isInput": "y"
									},
									{
										"name": "envelope",
										"Notes": "",
										"DiagramX": 315,
										"DiagramY": 400,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "coolerOut.envelope"
										}
									},
									{
										"name": "envPlot",
										"Notes": "Plot of the T - P phase envelope\nAll of the flashes will be on this line",
										"DiagramX": 315,
										"DiagramY": 430,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Graph",
										"X1": {
											"v": "envelope.t",
											"vmin": "-150 degc",
											"vmax": "100 degc",
											"Y1": {
												"v": "envelope.p",
												"vmin": "0 kpa",
												"vmax": "6000 kpa",
												"lineType": 0
											}
										},
										"X2": {
											"v": "{cc coolerOut.t,\n\tcompressor.outfluid.t,\n\tcondenserOut.t,\n\tvalveOut.t\n}'Path T",
											"vmin": "",
											"vmax": "",
											"Y1": {
												"v": "{cc coolerOut.p.b,\n\tcompressor.outfluid.p.b,\n\tcondenserOut.p.b,\n\tvalveOut.p.b\n}'Path P",
												"vmin": "",
												"vmax": "",
												"lineType": 0
											}
										}
									},
									{
										"name": "condenserOut",
										"Notes": "Similar to the cooler, we know the condenser outlet temperature (presumably from available cooling) and since it is condensed, it will be at the bubble point. We can designate this by setting the second property to 0.\n\nThis will determine the condensing pressure and other properties.",
										"DiagramX": 315,
										"DiagramY": 310,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Flash",
										"thermo": {
											"Formula": "coolerOut.thermo"
										},
										"firstprop": {
											"Formula": "condT"
										},
										"secondprop": {
											"Formula": "0"
										},
										"molefrac": {
											"Formula": "coolerOut.x"
										},
										"massfrac": {
											"Formula": ""
										},
										"flow": {
											"Formula": "coolerOut.f"
										}
									},
									{
										"name": "CondInT",
										"Notes": "Compressor outlet temperature\n=\nCondenser inlet temperature",
										"DiagramX": 415,
										"DiagramY": 340,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "compressor.out.t"
										},
										"isOutput": "y"
									},
									{
										"name": "compPower",
										"Notes": "Required compressor power",
										"DiagramX": 415,
										"DiagramY": 280,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "compressor.power"
										},
										"isOutput": "y"
									},
									{
										"name": "CoolerDp",
										"Notes": "",
										"DiagramX": 235,
										"DiagramY": 405,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "20 kpa"
										},
										"isInput": "y"
									},
									{
										"name": "CondDp",
										"Notes": "",
										"DiagramX": 235,
										"DiagramY": 430,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "35 kpa"
										},
										"isInput": "y"
									},
									{
										"name": "CondDuty",
										"Notes": "Condenser Duty",
										"DiagramX": 415,
										"DiagramY": 310,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(condenserOut.h - compressor.Out.h)*coolerOut.f"
										},
										"isOutput": "y"
									},
									{
										"name": "coolerOut",
										"Notes": "We know the required coolant temperature and we know that the coolant will be boiling. THus we can set the second property to 1, which will be taken as q, the vapour fraction.\n\nThis allows the pressure and other properties to be calculated.\n\nWe know the cooling load from InletQ and once the\nenthalpy of the entering fluid, namely valveOut\nis known, the flow can be calculated by dividing the duty by the enthalpy difference in and out.\n\nThe refrigerant can be changed in the thermo designation (R whatever, Propane, Ammonia, etc). If multiple components are used, the mole fraction spec will have to change accordingly.",
										"DiagramX": 315,
										"DiagramY": 280,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Flash",
										"thermo": {
											"Formula": "'R32;massf"
										},
										"firstprop": {
											"Formula": "ColdT"
										},
										"secondprop": {
											"Formula": "1"
										},
										"molefrac": {
											"Formula": "1"
										},
										"massfrac": {
											"Formula": ""
										},
										"flow": {
											"Formula": "InletQ / ($.h - condenserOut.h)"
										}
									},
									{
										"name": "CoolerOutlet",
										"Notes": "Cooler outlet fluid\n(same as compressor inlet)",
										"DiagramX": 415,
										"DiagramY": 385,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "CoolerOut"
										},
										"isOutput": "y"
									},
									{
										"name": "CoolerInlet",
										"Notes": "Cooler inlet fluid\n(same as valve outlet)",
										"DiagramX": 415,
										"DiagramY": 420,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "valveOut"
										},
										"isOutput": "y"
									},
									{
										"name": "CompressorOutlet",
										"Notes": "Compressor outlet fluid\n(same as condenser inlet)",
										"DiagramX": 415,
										"DiagramY": 455,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "compressor.out"
										},
										"isOutput": "y"
									},
									{
										"name": "valveOut",
										"Notes": "We know the pressure coming out of the valve will\nbe the cooler inlet pressure. I am ignoring pressure drops for simplicity, but they could be easily added.\n\nSince valves are isenthalpic, we also know the valve outlet enthalpy and can set it as the second property.\n\nThe resulting flash will have a significant amount of vapour.",
										"DiagramX": 315,
										"DiagramY": 340,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Flash",
										"thermo": {
											"Formula": "condenserOut.thermo"
										},
										"firstprop": {
											"Formula": "coolerOut.p + coolerDp"
										},
										"secondprop": {
											"Formula": "condenserOut.h"
										},
										"molefrac": {
											"Formula": "coolerOut.x"
										},
										"massfrac": {
											"Formula": ""
										},
										"flow": {
											"Formula": "condenserOut.f"
										}
									},
									{
										"name": "Refrigeration",
										"Notes": "Overview",
										"DiagramX": 235,
										"DiagramY": 280,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h4>Simple Single Stage Refrigeration </h4>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model shows how the properties of a simple single stage refrigeration loop can be calculated using basic thermodynamics.\n\t\t</p>\n\t\t<p>\n\t\t\tThe refrigeration loop looks like this:\n\t\t</p>\n<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 1024 650\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" xmlns:serif=\"http://www.serif.com/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\">\n    <g id=\"Cooler\" transform=\"matrix(1,0,0,1,-30.5113,85.8962)\">\n        <g transform=\"matrix(1.36733,0,0,1.36733,-255.523,145.782)\">\n            <circle cx=\"735.181\" cy=\"167.587\" r=\"69.251\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-369.122,167.346)\">\n            <path d=\"M799.807,119.07L719.951,198.427\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-369.122,167.346)\">\n            <path d=\"M838.062,180.07L799.807,119.07\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-369.122,167.346)\">\n            <path d=\"M920.578,98.174L838.052,179.677\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(0.720399,0.720399,-1.05258,1.05258,311.159,-421.885)\">\n            <path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:0.78px;\"/>\n        </g>\n        <g transform=\"matrix(1.57389e-16,-1.05628,1.54333,3.14777e-16,671.041,981.596)\">\n            <path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:0.76px;\"/>\n        </g>\n        <g transform=\"matrix(1.51804e-16,-1.0188,1.48857,3.03608e-16,379.896,1023.27)\">\n            <path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:0.78px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-209.284,-307.928)\">\n            <path d=\"M671.848,300.131L521.605,300.131\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(7.59019e-17,1.0188,-1.48857,0,758.006,-544.194)\">\n            <path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:0.78px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-209.284,-307.928)\">\n            <path d=\"M413.681,500.652L616.726,500.652\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(7.59019e-17,1.0188,-1.48857,0,307.925,-545.726)\">\n            <path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:0.78px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-209.284,-307.928)\">\n            <path d=\"M305.077,299.515L249.989,299.078\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-209.284,-307.928)\">\n            <path d=\"M249.989,299.078L249.989,500.15\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-209.284,-307.928)\">\n            <path d=\"M249.989,500.15L287.042,500.15\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-205.141,-284.519)\">\n            <text x=\"340.411px\" y=\"342.58px\" style=\"font-family:'Arial-BoldMT', 'Arial', sans-serif;font-weight:700;font-size:24px;\">Condenser</text>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-239.696,-280.387)\">\n            <text x=\"670.252px\" y=\"365.729px\" style=\"font-family:'Arial-BoldMT', 'Arial', sans-serif;font-weight:700;font-size:24px;\">Compressor</text>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-198.083,-292.803)\">\n            <text x=\"653.088px\" y=\"585.843px\" style=\"font-family:'Arial-BoldMT', 'Arial', sans-serif;font-weight:700;font-size:24px;\">Cooler</text>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-234.271,-284.603)\">\n            <text x=\"328.159px\" y=\"540.958px\" style=\"font-family:'Arial-BoldMT', 'Arial', sans-serif;font-weight:700;font-size:24px;\">JT V<tspan x=\"377.518px 390.866px \" y=\"540.958px 540.958px \">al</tspan>ve</text>\n        </g>\n        <g transform=\"matrix(1,0,0,1,30.5113,-85.8962)\">\n            <path d=\"M935.658,185.82L935.658,112.288\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n        </g>\n        <g transform=\"matrix(1,0,0,1,-22.4075,-47.1565)\">\n            <text x=\"393.526px\" y=\"32.893px\" style=\"font-family:'Arial-BoldMT', 'Arial', sans-serif;font-weight:700;font-size:30px;\">Single Stage Refrigeration</text>\n        </g>\n    </g>\n    <g id=\"air-cooler\" serif:id=\"air cooler\" transform=\"matrix(1,0,0,1,-395.102,-130.07)\">\n        <g transform=\"matrix(1.36733,0,0,1.36733,-384.927,-269.81)\">\n            <rect x=\"699.629\" y=\"400.285\" width=\"201.945\" height=\"59.617\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.21154,0,0,1.36733,-271.746,-282.141)\">\n            <ellipse cx=\"760.291\" cy=\"437.768\" rx=\"49.85\" ry=\"8.668\" style=\"fill:none;stroke:black;stroke-width:0.77px;\"/>\n        </g>\n        <g transform=\"matrix(-1.21154,-1.48371e-16,1.67449e-16,-1.36733,1691.29,915.004)\">\n            <ellipse cx=\"760.291\" cy=\"437.768\" rx=\"49.85\" ry=\"8.668\" style=\"fill:none;stroke:black;stroke-width:0.77px;\"/>\n        </g>\n    </g>\n    <g id=\"Expander\" transform=\"matrix(0.524246,0,0,0.524246,463.577,141.935)\">\n        <g transform=\"matrix(-1.36733,-1.67449e-16,1.67449e-16,-1.36733,956.369,493.079)\">\n            <path d=\"M303.232,196.136L303.232,401.492L398.208,340.215L398.208,259.875L303.232,196.136Z\" style=\"fill:none;stroke:black;stroke-width:1.4px;\"/>\n        </g>\n        <g transform=\"matrix(2.60818,0,0,2.60818,-1341.68,-694.267)\">\n            <path d=\"M771.686,499.722L859.838,499.722L859.838,298.722\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(2.60818,0,0,2.60818,-1341.68,-834.638)\">\n            <path d=\"M859.42,298.722L723.199,298.722\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n    </g>\n    <g id=\"valve\" transform=\"matrix(1,0,0,1,11.6746,366.757)\">\n        <g transform=\"matrix(8.42037e-17,1.36733,-1.36733,8.42037e-17,382.049,-341.754)\">\n            <path d=\"M318.772,105.125L347.185,160.635L290.359,160.635L318.772,105.125Z\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(8.32456e-17,-1.36733,1.36733,8.32456e-17,94.5681,529.978)\">\n            <path d=\"M318.772,105.125L347.185,160.635L290.359,160.635L318.772,105.125Z\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n    </g>\n</svg>\n\t\t<p>\n\t\t\tThe heat removed in the cooler boiling the refrigerant and the resulting vapour is compressed to a higher pressure and hence temperature. It is then condensed by an available coolant, here assumed to be air.\n\t\t</p>\n\t\t<p>\n\t\t\tThe condensed high pressure liquid is then let down to a lower pressure through a valve.  The lower pressure causes some of the liquid to vapourize and the phase rule dictates that for a given pressure a two phase fluid's temperature is determined from its phase envelope.\n\t\t</p>\n\t\t<p>\n\t\t\tJumping ahead a bit, the graph below shows the phase envelope for the refrigerant we will use. It is just a line since we will use a pure component. The triangle represents the refrigerant conditions as it moves around the loop. The cooler conditions are at the lower left.  Compressing the vapour raise both the temperature and pressure to the upper right point, while condensing moves it horizontally to the valve inlet condition at the upper left. Passing through the valve\n\t\t\tdrops both temperature and pressure back to the cooler conditions.\n\t\t</p>\n\t\t<mm>envplot.svg</mm>\n\t\t<p>\n\t\t\tWhat we need to determine is:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li>the pressures required for a required coolant temperature and available condensing temperature</li>\n\t\t\t<li>the flow rate of the refrigerant</li>\n\t\t\t<li>the duty of the condenser</li>\n\t\t\t<li>the power required for the compressor</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tWe will start with the refrigerant side of the cooler, represented by the <a href=\"../help/flash.html\" target=\"_blank\">flash tool</a> called <b>coolerOut</b>. In this case we will assume a single component refrigerant <a href=\"https://en.wikipedia.org/wiki/Difluoromethane\" target=\"blank\">difluormethane</a>, commonly called <b>R32</b> and so we will define the thermo parameter as:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\t'R32;massf\n\t\t</p>\n\t\t<p>\n\t\t\twhich is simply as string with the component name(s). Here we have followed it with a double colon and the name(s) of the properties we want included in addition to the default ones. In this case, just the mass flow. The mole fractions input can simply be set to 1 as there is only one component.\n\t\t</p>\n\t\t<p>\t\n\t\t\tWe know the required coolant temperature and will set the first property to that. We also know that the coolant will be boiling, so we can set the second property to 1, which because it has a \"Fraction\" conversion unit type, will be taken as q, the vapour fraction. This means the vapour\n\t\t\tleaving the cooler should be a its dew point.\n\t\t</p>\n\t\t<p>\n\t\t\tThis allows the pressure and other properties to be calculated, but the flow rate is still unknown. We will come back to that.\n\t\t</p>\n\t\t<p>\n\t\t\tSimilar to the cooler, we know the condenser outlet temperature (presumably from available cooling) and can thus set the first property of the <b>condenserOut</b> flash tool. Since it is condensed, we can assume it will be at the bubble point and designate the second property to be 0.\n\t\t</p>\n\t\t\t\tThis will determine the condensing pressure and other properties.\n\t\t</p>\n\t\t<p>\n\t\t\tSince a valve has no heat inputs or outputs, it is isenthalpic, so we know the enthalpy of the fluid leaving the value and going to the cooler is the same as the liquid leaving the condenser.\n\t\t</p>\n\t\t<p>\n\t\t\tBack at the coolerOut Flash, we know the cooling load from InletQ and now that we know the enthalpy of the entering fluid, namely that of <b>valveOut</b> which is the same as that of <b>condenserOut</b>, the flow can be calculated by dividing the duty by the enthalpy difference in and out.\n\t\t</p>\n\t\t<p>\n\t\t\tWith the flow rate known, we can calculate the condenser duty by multiplying the difference between its inlet and outlet enthalpy by the flow rate.\n\t\t</p>\n\t\t<p>\n\t\t\tAll that remains is to determine the required compressor power. For that we can copy and paste a previously made model representing a compressor from the toolbox example session and filling in the input expressions.\n\t\t</p>\n\t\t<p>\n\t\t\tThat's it.  All the values we wanted are now calculated.\n\t\t</p>\n\t\t<p>\n\t\t\tNote that the refrigerant can be changed in the thermo designation (R whatever, Propane, Ammonia, etc). If multiple components are used, the mole fraction spec will have to change accordingly.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										},
										"f0": "envplot.svg"
									},
									{
										"name": "compressor",
										"Notes": "Basic compressor calculation.",
										"DiagramX": 315,
										"DiagramY": 370,
										"HideInfo": "n",
										"DiagramNotes": "y",
										"Type": "Model",
										"diagramScale": 1,
										"indexTool": "Compressor",
										"Objects": [
											{
												"name": "Feed",
												"DiagramX": 120,
												"DiagramY": 140,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "coolerOut"
												},
												"isInput": "y"
											},
											{
												"name": "e",
												"Notes": "If efficiency is greater than one, assume it is a percentage",
												"DiagramX": 230,
												"DiagramY": 135,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "{if {gt efficiency, 1.0},\n\tefficiency/100,\n\tefficiency\n}"
												}
											},
											{
												"name": "OutletP",
												"DiagramX": 120,
												"DiagramY": 170,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "condenserout.p + condDp"
												},
												"isInput": "y"
											},
											{
												"name": "Efficiency",
												"DiagramX": 120,
												"DiagramY": 195,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": ".75"
												},
												"isInput": "y"
											},
											{
												"name": "H",
												"Notes": "The outlet enthalpy is determined by dividing the difference between the inlet and ideal outlet enthalpies by the efficiency and adding the result to the feed enthalpy.",
												"DiagramX": 345,
												"DiagramY": 190,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "feedH + \n(IdealOut.h - feedH) / e"
												}
											},
											{
												"name": "Power",
												"DiagramX": 345,
												"DiagramY": 165,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "(outfluid.h - feedH)*F"
												},
												"isOutput": "y"
											},
											{
												"name": "OutFluid",
												"Notes": "",
												"DiagramX": 230,
												"DiagramY": 255,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Flash",
												"thermo": {
													"Formula": "IdealOut.thermo"
												},
												"firstprop": {
													"Formula": "OutletP"
												},
												"secondprop": {
													"Formula": "h"
												},
												"molefrac": {
													"Formula": "idealout.x"
												},
												"massfrac": {
													"Formula": ""
												},
												"flow": {
													"Formula": "idealout.f"
												}
											},
											{
												"name": "IdealOut",
												"Notes": "Ideal compression is isentropic",
												"DiagramX": 230,
												"DiagramY": 220,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Flash",
												"thermo": {
													"Formula": "feed.thermo"
												},
												"firstprop": {
													"Formula": "OutletP"
												},
												"secondprop": {
													"Formula": "feedS"
												},
												"molefrac": {
													"Formula": "X"
												},
												"massfrac": {
													"Formula": ""
												},
												"flow": {
													"Formula": "F"
												}
											},
											{
												"name": "Out",
												"Notes": "",
												"DiagramX": 345,
												"DiagramY": 140,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "OutFluid"
												},
												"isOutput": "y"
											},
											{
												"name": "polyEff",
												"Notes": "",
												"DiagramX": 345,
												"DiagramY": 280,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "polytropic.polyeff"
												},
												"isOutput": "y"
											},
											{
												"name": "feedH",
												"Notes": "",
												"DiagramX": 230,
												"DiagramY": 110,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "feed.h"
												}
											},
											{
												"name": "feedS",
												"Notes": "",
												"DiagramX": 120,
												"DiagramY": 245,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "feed.s"
												}
											},
											{
												"name": "F",
												"Notes": "",
												"DiagramX": 230,
												"DiagramY": 170,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "feed.f"
												}
											},
											{
												"name": "X",
												"Notes": "",
												"DiagramX": 230,
												"DiagramY": 195,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "feed.x"
												}
											},
											{
												"name": "Pin",
												"Notes": "",
												"DiagramX": 120,
												"DiagramY": 220,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "feed.p"
												}
											},
											{
												"name": "feedV",
												"Notes": "",
												"DiagramX": 120,
												"DiagramY": 270,
												"HideInfo": "y",
												"DiagramNotes": "n",
												"Type": "Expression",
												"Formula": {
													"Formula": "1/feed.dmolar"
												}
											},
											{
												"name": "Compressor",
												"Notes": "Overview",
												"DiagramX": 120,
												"DiagramY": 110,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "HTML Form",
												"Formula": {
													"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Compressor Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model represents a thermodynamic model of a <a href=\"https://en.wikipedia.org/wiki/Compressor\" target=\"_blank\">compressor</a>, although it can also stand in for a pump.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>feed</b> - a flash result or similar representing the inlet fluid</li>\n\t\t\t<li><b>outletP</b> - the outlet pressure to compress to.</li>\n\t\t\t<li><b>efficiency</b> - the ideal power needed divided by the actual power needed</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>out</b> - the outlet fluid flash</li>\n\t\t\t<li><b>power</b> - the power required for the compression</li>\n  \t\t<li><b>polyEff</b> - the calculated polytropic efficiency</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tAn ideal compressor is first modeled by performing an isentropic flash using the outlet pressure and the feed entropy in tool <b>IdealOut</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe efficiency, e, of an non-ideal compressor is taken to be:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\te = (hIout - hin) / (hAout - hin)\n\t\t</p>\n\t\t<p>\n\t\t\twhere:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li>hin is the enthalpy of the inlet fluid</li>\n\t\t\t<li>hIOut is the enthalpy of the outlet for the ideal (isentropic) process</li>\n\t\t\t<li>hAout is the enthalpy of the outlet for tne nonideal process</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe desired efficiency is supplied in the input expression <b>Efficiency</b> so by rearranging, the expression <b>H</b> can calculate the nonideal outlet enthalpy, which is used with the outlet pressure to perform an isenthalpic flash in <b>OutFluid</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe power required for the compressor can then be calculated in expression <b>Power</b> by multiplying the flow by the difference between the outlet fluid enthalpy and the inlet fluid enthalpy.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
												}
											},
											{
												"name": "polytropic",
												"Notes": "",
												"DiagramX": 230,
												"DiagramY": 280,
												"HideInfo": "n",
												"DiagramNotes": "n",
												"Type": "Model",
												"diagramScale": 1,
												"indexTool": "overview",
												"Objects": [
													{
														"name": "n",
														"Notes": "n - polytropic path exponent",
														"DiagramX": 280,
														"DiagramY": 255,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "Expression",
														"Formula": {
															"Formula": "logpratio / {ln InletV / OutletV}"
														}
													},
													{
														"name": "logPRatio",
														"Notes": "Log pressure ratio",
														"DiagramX": 280,
														"DiagramY": 195,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "Expression",
														"Formula": {
															"Formula": "{ln outlet.p / inletP}"
														}
													},
													{
														"name": "ns",
														"Notes": "ns - isentropic path exponent",
														"DiagramX": 280,
														"DiagramY": 225,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "Expression",
														"Formula": {
															"Formula": "logpratio / {ln InletV / IdealV}"
														}
													},
													{
														"name": "IdealV",
														"Notes": "vs - Isentropic outlet molar volume",
														"DiagramX": 280,
														"DiagramY": 130,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "Expression",
														"Formula": {
															"Formula": "1/Ideal.dmolar"
														}
													},
													{
														"name": "InletV",
														"Notes": "v1 - Inlet molar volume",
														"DiagramX": 180,
														"DiagramY": 165,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "Expression",
														"Formula": {
															"Formula": "feedV"
														},
														"isInput": "y"
													},
													{
														"name": "OutletV",
														"Notes": "va - Actual outlet molar volume",
														"DiagramX": 280,
														"DiagramY": 165,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "Expression",
														"Formula": {
															"Formula": "1/Outlet.dmolar"
														}
													},
													{
														"name": "Ideal",
														"Notes": "Isetropic outlet fluid",
														"DiagramX": 180,
														"DiagramY": 255,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "Expression",
														"Formula": {
															"Formula": "IdealOut"
														},
														"isInput": "y"
													},
													{
														"name": "Outlet",
														"Notes": "Actual outlet fluid",
														"DiagramX": 180,
														"DiagramY": 285,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "Expression",
														"Formula": {
															"Formula": "OutFluid"
														},
														"isInput": "y"
													},
													{
														"name": "inletP",
														"Notes": "p1 - Inlet Pressure",
														"DiagramX": 180,
														"DiagramY": 195,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "Expression",
														"Formula": {
															"Formula": "Pin"
														},
														"isInput": "y"
													},
													{
														"name": "InletH",
														"Notes": "hin - Inlet molar enthalpy",
														"DiagramX": 180,
														"DiagramY": 225,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "Expression",
														"Formula": {
															"Formula": "feedH"
														},
														"isInput": "y"
													},
													{
														"name": "adEff",
														"Notes": "Ea - Adiabatic efficiency",
														"DiagramX": 280,
														"DiagramY": 285,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "Expression",
														"Formula": {
															"Formula": "(ideal.h - inletH)/(outlet.h - inletH)"
														}
													},
													{
														"name": "polyEff",
														"Notes": "Ep - Polytropic Efficiency",
														"DiagramX": 280,
														"DiagramY": 315,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "Expression",
														"Formula": {
															"Formula": "adEff *\n(\n\tn / (n - 1) *\n\t(\n\t\t(\n\t\t\tOutlet.p\n\t\t\t/\n\t\t\tinletP\n\t\t)^((n-1)/n)\n\t\t - 1\n\t)\n)\n/\n(\n\tns/ (ns - 1) *\n\t(\n\t\t(\n\t\t\tOutlet.p\n\t\t\t/\n\t\t\tinletP\n\t\t)^((ns-1)/ns)\n\t\t- 1\n\t)\n)"
														},
														"isOutput": "y"
													},
													{
														"name": "Overview",
														"Notes": "Polytropic efficiency overview",
														"DiagramX": 180,
														"DiagramY": 130,
														"HideInfo": "y",
														"DiagramNotes": "y",
														"Type": "HTML Form",
														"Formula": {
															"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Polytropic Efficiency</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model calculates the polytropic efficiency for a <a href=\"https://en.wikipedia.org/wiki/Compressor\" target=\"_blank\">compressor</a>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>InletV</b> - the molar volume of the inlet fluid</li>\n\t\t\t<li><b>inletP</b> - the pressure of the inlet fluid</li>\n\t\t\t<li><b>inletH</b> - the molar enthalpy of the inlet fluid</li>\n\t\t\t<li><b>Ideal</b> - the flash results for the outlet fluid assuming isentropic compression.</li>\n\t\t\t<li><b>Outlet</b> - the flash results for the actual outlet fluid</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expression is <b>polyEff</b>, the polytropic efficiency.\n\t\t</p>\n\t\t<p>\n\t\t\tThe other expressions implement the calculation outlined below and where the expression calculates a variable mentioned here the the variable's symbol is listed in the expression notes.\n\t\t</p>\n\t\t<h4>Calculation overview</h4>\n\t\t<p>\n\t\t\tPolytropic efficiency can be defined as:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEp = Wp / Wa\n\t\t</p>\n\t\t<p>where:</p>\n\t\t<ul>\n\t\t\t<li>Ep = polytropic efficiency</li>\n\t\t\t<li>Wp = polytropic work</li>\n\t\t\t<li>Wa = actual work</li>\n\t\t</ul>\n\t\t<p>\n\t\t\twhere the actual work <b>Wa</b> is:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tWa = Ws / Ea\n\t\t</p>\n\t\t<p>where:</p>\n\t\t<ul>\n\t\t\t<li>Ea = adiabatic efficiency</li>\n\t\t\t<li>Ws = isentropic work</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tand the adiabatic efficiency <b>Eq</b> can be calculated from:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEa = (hIout - hin) / (hAout - hin)\n\t\t</p>\n\t\t<p>\n\t\t\twhere:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li>hin is the enthalpy of the inlet fluid</li>\n\t\t\t<li>hIOut is the enthalpy of the outlet for the ideal (isentropic) process</li>\n\t\t\t<li>hAout is the enthalpy of the outlet for tne nonideal process</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tBack substituting Wa into the polytropic efficiency formula becomes:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEp = Ea * Wp / Ws\n\t\t</p>\n\t\t<p>\n\t\t\tThe formulas for <b>Wp</b> and <b>Ws</b> are of the same form and after eliminating common terms from the numerator and denominator, we get\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEp = Ea * (<br>\n\t\t\t&nbsp;&nbsp;&nbsp;n/(n-1) * ((p2/p1)^((n-1)/n) - 1)<br>\n\t\t\t/<br>\n\t\t\t&nbsp;&nbsp;&nbsp;ns/(ns-1) * ((p2/p1)^((ns-1)/ns) - 1)<br>\n\t\t\t)\n\t\t</p>\n\t\t<p>\n\t\t\twhere:\n\t\t</p>\n\t\t<ul class=\"formula\">\n\t\t\t<li>n = ln(p2/p1) / ln(v1/vs)</li>\n\t\t\t<li>ns = ln(p2/p1) / ln(v1/va)</li>\n\t\t\t<li>p1 = inlet pressure, p2 = outlet pressure</li>\n\t\t\t<li>v1 = inlet molar volume</li>\n\t\t\t<li>vs = isentropic outlet molar volume</li>\n\t\t\t<li>va = actual outlet molar volume</li>\n\t\t</ul>\n\n\t\t</div>\n\t</body>\n</html>"
														}
													}
												]
											}
										]
									}
								]
							},
							{
								"name": "Splitter",
								"Notes": "Component Splitter",
								"DiagramX": 315,
								"DiagramY": 185,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "overview",
								"Objects": [
									{
										"name": "topFractions",
										"Notes": "",
										"DiagramX": 235,
										"DiagramY": 190,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc 1, 1, 1, .9, .8, .5, .4, .1, 0, 0,}"
										},
										"isInput": "y"
									},
									{
										"name": "Composition",
										"Notes": "",
										"DiagramX": 235,
										"DiagramY": 160,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{cc 70, 20, 10, 9, 8, 7, 6, 7, 4, 3}"
										},
										"isInput": "y"
									},
									{
										"name": "top",
										"Notes": "",
										"DiagramX": 325,
										"DiagramY": 160,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "composition * topFractions\n/\n{sum composition * topFractions}"
										},
										"isOutput": "y"
									},
									{
										"name": "btm",
										"Notes": "",
										"DiagramX": 325,
										"DiagramY": 190,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "composition * (1 - topFractions)\n/\n{sum composition * (1 - topFractions)}"
										},
										"isOutput": "y"
									},
									{
										"name": "Overview",
										"Notes": "Component Splitter Overview",
										"DiagramX": 235,
										"DiagramY": 130,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Component Splitter</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model simply apportions an array, presumably a <b>composition</b>, into a <b>top</b> and a <b>btm</b> array according to a supplied array of fractions <b>topFractions</b>.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										}
									}
								]
							},
							{
								"name": "Compressor",
								"Notes": "Basic compressor calculation.",
								"DiagramX": 155,
								"DiagramY": 220,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "Compressor",
								"Objects": [
									{
										"name": "Feed",
										"DiagramX": 120,
										"DiagramY": 140,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "e",
										"Notes": "If efficiency is greater than one, assume it is a percentage",
										"DiagramX": 230,
										"DiagramY": 135,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{if {gt efficiency, 1.0},\n\tefficiency/100,\n\tefficiency\n}"
										}
									},
									{
										"name": "OutletP",
										"DiagramX": 120,
										"DiagramY": 170,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "Efficiency",
										"DiagramX": 120,
										"DiagramY": 195,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ".75"
										},
										"isInput": "y"
									},
									{
										"name": "H",
										"Notes": "The outlet enthalpy is determined by dividing the difference between the inlet and ideal outlet enthalpies by the efficiency and adding the result to the feed enthalpy.",
										"DiagramX": 345,
										"DiagramY": 190,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "feedH + \n(IdealOut.h - feedH) / e"
										}
									},
									{
										"name": "Power",
										"DiagramX": 345,
										"DiagramY": 165,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "(outfluid.h - feedH)*F"
										},
										"isOutput": "y"
									},
									{
										"name": "OutFluid",
										"Notes": "",
										"DiagramX": 230,
										"DiagramY": 255,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Flash",
										"thermo": {
											"Formula": "IdealOut.thermo"
										},
										"firstprop": {
											"Formula": "OutletP"
										},
										"secondprop": {
											"Formula": "h"
										},
										"molefrac": {
											"Formula": "idealout.x"
										},
										"massfrac": {
											"Formula": ""
										},
										"flow": {
											"Formula": "idealout.f"
										}
									},
									{
										"name": "IdealOut",
										"Notes": "Ideal compression is isentropic",
										"DiagramX": 230,
										"DiagramY": 220,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Flash",
										"thermo": {
											"Formula": "feed.thermo"
										},
										"firstprop": {
											"Formula": "OutletP"
										},
										"secondprop": {
											"Formula": "feedS"
										},
										"molefrac": {
											"Formula": "X"
										},
										"massfrac": {
											"Formula": ""
										},
										"flow": {
											"Formula": "F"
										}
									},
									{
										"name": "Out",
										"Notes": "",
										"DiagramX": 345,
										"DiagramY": 140,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "OutFluid"
										},
										"isOutput": "y"
									},
									{
										"name": "polyEff",
										"Notes": "",
										"DiagramX": 345,
										"DiagramY": 280,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "polytropic.polyeff"
										},
										"isOutput": "y"
									},
									{
										"name": "feedH",
										"Notes": "",
										"DiagramX": 230,
										"DiagramY": 110,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "feed.h"
										}
									},
									{
										"name": "feedS",
										"Notes": "",
										"DiagramX": 120,
										"DiagramY": 245,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "feed.s"
										}
									},
									{
										"name": "F",
										"Notes": "",
										"DiagramX": 230,
										"DiagramY": 170,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "feed.f"
										}
									},
									{
										"name": "X",
										"Notes": "",
										"DiagramX": 230,
										"DiagramY": 195,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "feed.x"
										}
									},
									{
										"name": "Pin",
										"Notes": "",
										"DiagramX": 120,
										"DiagramY": 220,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "feed.p"
										}
									},
									{
										"name": "feedV",
										"Notes": "",
										"DiagramX": 120,
										"DiagramY": 270,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "1/feed.dmolar"
										}
									},
									{
										"name": "Compressor",
										"Notes": "Overview",
										"DiagramX": 120,
										"DiagramY": 110,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Compressor Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model represents a thermodynamic model of a <a href=\"https://en.wikipedia.org/wiki/Compressor\" target=\"_blank\">compressor</a>, although it can also stand in for a pump.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>feed</b> - a flash result or similar representing the inlet fluid</li>\n\t\t\t<li><b>outletP</b> - the outlet pressure to compress to.</li>\n\t\t\t<li><b>efficiency</b> - the ideal power needed divided by the actual power needed</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>out</b> - the outlet fluid flash</li>\n\t\t\t<li><b>power</b> - the power required for the compression</li>\n  \t\t<li><b>polyEff</b> - the calculated polytropic efficiency</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tAn ideal compressor is first modeled by performing an isentropic flash using the outlet pressure and the feed entropy in tool <b>IdealOut</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe efficiency, e, of an non-ideal compressor is taken to be:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\te = (hIout - hin) / (hAout - hin)\n\t\t</p>\n\t\t<p>\n\t\t\twhere:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li>hin is the enthalpy of the inlet fluid</li>\n\t\t\t<li>hIOut is the enthalpy of the outlet for the ideal (isentropic) process</li>\n\t\t\t<li>hAout is the enthalpy of the outlet for tne nonideal process</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe desired efficiency is supplied in the input expression <b>Efficiency</b> so by rearranging, the expression <b>H</b> can calculate the nonideal outlet enthalpy, which is used with the outlet pressure to perform an isenthalpic flash in <b>OutFluid</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe power required for the compressor can then be calculated in expression <b>Power</b> by multiplying the flow by the difference between the outlet fluid enthalpy and the inlet fluid enthalpy.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										}
									},
									{
										"name": "polytropic",
										"Notes": "",
										"DiagramX": 230,
										"DiagramY": 280,
										"HideInfo": "n",
										"DiagramNotes": "n",
										"Type": "Model",
										"diagramScale": 1,
										"indexTool": "overview",
										"Objects": [
											{
												"name": "n",
												"Notes": "n - polytropic path exponent",
												"DiagramX": 280,
												"DiagramY": 255,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "logpratio / {ln InletV / OutletV}"
												}
											},
											{
												"name": "logPRatio",
												"Notes": "Log pressure ratio",
												"DiagramX": 280,
												"DiagramY": 195,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "{ln outlet.p / inletP}"
												}
											},
											{
												"name": "ns",
												"Notes": "ns - isentropic path exponent",
												"DiagramX": 280,
												"DiagramY": 225,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "logpratio / {ln InletV / IdealV}"
												}
											},
											{
												"name": "IdealV",
												"Notes": "vs - Isentropic outlet molar volume",
												"DiagramX": 280,
												"DiagramY": 130,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "1/Ideal.dmolar"
												}
											},
											{
												"name": "InletV",
												"Notes": "v1 - Inlet molar volume",
												"DiagramX": 180,
												"DiagramY": 165,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "feedV"
												},
												"isInput": "y"
											},
											{
												"name": "OutletV",
												"Notes": "va - Actual outlet molar volume",
												"DiagramX": 280,
												"DiagramY": 165,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "1/Outlet.dmolar"
												}
											},
											{
												"name": "Ideal",
												"Notes": "Isetropic outlet fluid",
												"DiagramX": 180,
												"DiagramY": 255,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "IdealOut"
												},
												"isInput": "y"
											},
											{
												"name": "Outlet",
												"Notes": "Actual outlet fluid",
												"DiagramX": 180,
												"DiagramY": 285,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "OutFluid"
												},
												"isInput": "y"
											},
											{
												"name": "inletP",
												"Notes": "p1 - Inlet Pressure",
												"DiagramX": 180,
												"DiagramY": 195,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "Pin"
												},
												"isInput": "y"
											},
											{
												"name": "InletH",
												"Notes": "hin - Inlet molar enthalpy",
												"DiagramX": 180,
												"DiagramY": 225,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "feedH"
												},
												"isInput": "y"
											},
											{
												"name": "adEff",
												"Notes": "Ea - Adiabatic efficiency",
												"DiagramX": 280,
												"DiagramY": 285,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "(ideal.h - inletH)/(outlet.h - inletH)"
												}
											},
											{
												"name": "polyEff",
												"Notes": "Ep - Polytropic Efficiency",
												"DiagramX": 280,
												"DiagramY": 315,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "adEff *\n(\n\tn / (n - 1) *\n\t(\n\t\t(\n\t\t\tOutlet.p\n\t\t\t/\n\t\t\tinletP\n\t\t)^((n-1)/n)\n\t\t - 1\n\t)\n)\n/\n(\n\tns/ (ns - 1) *\n\t(\n\t\t(\n\t\t\tOutlet.p\n\t\t\t/\n\t\t\tinletP\n\t\t)^((ns-1)/ns)\n\t\t- 1\n\t)\n)"
												},
												"isOutput": "y"
											},
											{
												"name": "Overview",
												"Notes": "Polytropic efficiency overview",
												"DiagramX": 180,
												"DiagramY": 130,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "HTML Form",
												"Formula": {
													"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Polytropic Efficiency</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model calculates the polytropic efficiency for a <a href=\"https://en.wikipedia.org/wiki/Compressor\" target=\"_blank\">compressor</a>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>InletV</b> - the molar volume of the inlet fluid</li>\n\t\t\t<li><b>inletP</b> - the pressure of the inlet fluid</li>\n\t\t\t<li><b>inletH</b> - the molar enthalpy of the inlet fluid</li>\n\t\t\t<li><b>Ideal</b> - the flash results for the outlet fluid assuming isentropic compression.</li>\n\t\t\t<li><b>Outlet</b> - the flash results for the actual outlet fluid</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expression is <b>polyEff</b>, the polytropic efficiency.\n\t\t</p>\n\t\t<p>\n\t\t\tThe other expressions implement the calculation outlined below and where the expression calculates a variable mentioned here the the variable's symbol is listed in the expression notes.\n\t\t</p>\n\t\t<h4>Calculation overview</h4>\n\t\t<p>\n\t\t\tPolytropic efficiency can be defined as:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEp = Wp / Wa\n\t\t</p>\n\t\t<p>where:</p>\n\t\t<ul>\n\t\t\t<li>Ep = polytropic efficiency</li>\n\t\t\t<li>Wp = polytropic work</li>\n\t\t\t<li>Wa = actual work</li>\n\t\t</ul>\n\t\t<p>\n\t\t\twhere the actual work <b>Wa</b> is:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tWa = Ws / Ea\n\t\t</p>\n\t\t<p>where:</p>\n\t\t<ul>\n\t\t\t<li>Ea = adiabatic efficiency</li>\n\t\t\t<li>Ws = isentropic work</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tand the adiabatic efficiency <b>Eq</b> can be calculated from:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEa = (hIout - hin) / (hAout - hin)\n\t\t</p>\n\t\t<p>\n\t\t\twhere:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li>hin is the enthalpy of the inlet fluid</li>\n\t\t\t<li>hIOut is the enthalpy of the outlet for the ideal (isentropic) process</li>\n\t\t\t<li>hAout is the enthalpy of the outlet for tne nonideal process</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tBack substituting Wa into the polytropic efficiency formula becomes:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEp = Ea * Wp / Ws\n\t\t</p>\n\t\t<p>\n\t\t\tThe formulas for <b>Wp</b> and <b>Ws</b> are of the same form and after eliminating common terms from the numerator and denominator, we get\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEp = Ea * (<br>\n\t\t\t&nbsp;&nbsp;&nbsp;n/(n-1) * ((p2/p1)^((n-1)/n) - 1)<br>\n\t\t\t/<br>\n\t\t\t&nbsp;&nbsp;&nbsp;ns/(ns-1) * ((p2/p1)^((ns-1)/ns) - 1)<br>\n\t\t\t)\n\t\t</p>\n\t\t<p>\n\t\t\twhere:\n\t\t</p>\n\t\t<ul class=\"formula\">\n\t\t\t<li>n = ln(p2/p1) / ln(v1/vs)</li>\n\t\t\t<li>ns = ln(p2/p1) / ln(v1/va)</li>\n\t\t\t<li>p1 = inlet pressure, p2 = outlet pressure</li>\n\t\t\t<li>v1 = inlet molar volume</li>\n\t\t\t<li>vs = isentropic outlet molar volume</li>\n\t\t\t<li>va = actual outlet molar volume</li>\n\t\t</ul>\n\n\t\t</div>\n\t</body>\n</html>"
												}
											}
										]
									}
								]
							},
							{
								"name": "Expander",
								"Notes": "Basic expander calculation.",
								"DiagramX": 235,
								"DiagramY": 220,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "expander",
								"Objects": [
									{
										"name": "Feed",
										"DiagramX": 120,
										"DiagramY": 140,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "e",
										"Notes": "If efficiency is greater than one, assume it is a percentage",
										"DiagramX": 230,
										"DiagramY": 135,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{if {gt efficiency, 1.0},\n\tefficiency/100,\n\tefficiency\n}"
										}
									},
									{
										"name": "OutletP",
										"DiagramX": 120,
										"DiagramY": 170,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "Efficiency",
										"DiagramX": 120,
										"DiagramY": 195,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ".75"
										},
										"isInput": "y"
									},
									{
										"name": "H",
										"Notes": "The outlet enthalpy is determined by dividing the difference between the inlet and ideal outlet enthalpies by the efficiency and adding the result to the feed enthalpy.",
										"DiagramX": 345,
										"DiagramY": 215,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "feedH + \n(IdealOut.h - feedH) * e"
										}
									},
									{
										"name": "Power",
										"DiagramX": 345,
										"DiagramY": 165,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "(feedH - outfluid.h)*F"
										},
										"isOutput": "y"
									},
									{
										"name": "OutFluid",
										"Notes": "",
										"DiagramX": 230,
										"DiagramY": 255,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Flash",
										"thermo": {
											"Formula": "IdealOut.thermo"
										},
										"firstprop": {
											"Formula": "OutletP"
										},
										"secondprop": {
											"Formula": "h"
										},
										"molefrac": {
											"Formula": "idealout.x"
										},
										"massfrac": {
											"Formula": ""
										},
										"flow": {
											"Formula": "idealout.f"
										}
									},
									{
										"name": "IdealOut",
										"Notes": "Ideal expansion is isentropic",
										"DiagramX": 230,
										"DiagramY": 225,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Flash",
										"thermo": {
											"Formula": "feed.thermo"
										},
										"firstprop": {
											"Formula": "OutletP"
										},
										"secondprop": {
											"Formula": "feedS"
										},
										"molefrac": {
											"Formula": "X"
										},
										"massfrac": {
											"Formula": ""
										},
										"flow": {
											"Formula": "F"
										}
									},
									{
										"name": "Out",
										"Notes": "",
										"DiagramX": 345,
										"DiagramY": 140,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "OutFluid"
										},
										"isOutput": "y"
									},
									{
										"name": "polyEff",
										"Notes": "",
										"DiagramX": 345,
										"DiagramY": 190,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "polytropic.polyeff"
										},
										"isOutput": "y"
									},
									{
										"name": "feedH",
										"Notes": "",
										"DiagramX": 230,
										"DiagramY": 110,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "feed.h"
										}
									},
									{
										"name": "feedS",
										"Notes": "",
										"DiagramX": 120,
										"DiagramY": 245,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "feed.s"
										}
									},
									{
										"name": "F",
										"Notes": "",
										"DiagramX": 230,
										"DiagramY": 175,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "feed.f"
										}
									},
									{
										"name": "X",
										"Notes": "",
										"DiagramX": 230,
										"DiagramY": 200,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "feed.x"
										}
									},
									{
										"name": "Pin",
										"Notes": "",
										"DiagramX": 120,
										"DiagramY": 220,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "feed.p"
										}
									},
									{
										"name": "feedV",
										"Notes": "",
										"DiagramX": 120,
										"DiagramY": 270,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "1/feed.dmolar"
										}
									},
									{
										"name": "Expander",
										"Notes": "Overview",
										"DiagramX": 120,
										"DiagramY": 110,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Expander Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model represents a thermodynamic model of an expander, which is a device that extracts work from the expansion of a fluid.  It is essentially a compressor in reverse.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>feed</b> - a flash result or similar representing the inlet fluid</li>\n\t\t\t<li><b>feedPhase</b> - the phase of feed to use. It should be one of the following strings;\n\t\t\t\t<ul>\n\t\t\t\t\t<li><b>\"b\"</b> - the bulk fluid</li>\n\t\t\t\t\t<li><b>\"v\"</b> - the vapour phase</li>\n\t\t\t\t\t<li><b>\t\"l\"</b> - the liquid phase</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li><b>outletP</b> - the outlet pressure that the fluid will be reduced to.</li>\n\t\t\t<li><b>efficiency</b> - the actual power produced divided by the ideal power produced</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>out</b> - the outlet fluid flash</li>\n\t\t\t<li><b>power</b> - the power produced by the expansion</li>\n  \t\t<li><b>polyEff</b> - the calculated polytropic efficiency</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tAn ideal expander is first modeled by performing an isentropic flash using the outlet pressure and the feed entropy in tool <b>IdealOut</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe efficiency, e, of an non-ideal expander is taken to be:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\te = (hAout - hin) / (hIout - hin)\n\t\t</p>\n\t\t<p>\n\t\t\twhere:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li>hin is the enthalpy of the inlet fluid</li>\n\t\t\t<li>hIOut is the enthalpy of the outlet for the ideal (isentropic) process</li>\n\t\t\t<li>hAout is the enthalpy of the outlet for tne nonideal process</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe desired efficiency is supplied in the input expression <b>Efficiency</b> so by rearranging, the expression <b>H</b> can calculate the nonideal outlet enthalpy, which is used with the outlet pressure to perform an isenthalpic flash in <b>OutFluid</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe power produced by the expander can then be calculated in expression <b>Power</b> by multiplying the flow by the difference between the inlet fluid enthalpy and the outlet fluid enthalpy.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
										}
									},
									{
										"name": "polytropic",
										"Notes": "",
										"DiagramX": 230,
										"DiagramY": 285,
										"HideInfo": "n",
										"DiagramNotes": "n",
										"Type": "Model",
										"diagramScale": 1,
										"indexTool": "overview",
										"Objects": [
											{
												"name": "n",
												"Notes": "n - polytropic path exponent",
												"DiagramX": 280,
												"DiagramY": 255,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "logpratio / {ln InletV / OutletV}"
												}
											},
											{
												"name": "logPRatio",
												"Notes": "Log pressure ratio",
												"DiagramX": 280,
												"DiagramY": 195,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "{ln outlet.p / inletP}"
												}
											},
											{
												"name": "ns",
												"Notes": "ns - isentropic path exponent",
												"DiagramX": 280,
												"DiagramY": 225,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "logpratio / {ln InletV / IdealV}"
												}
											},
											{
												"name": "IdealV",
												"Notes": "vs - Isentropic outlet molar volume",
												"DiagramX": 280,
												"DiagramY": 130,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "1/Ideal.dmolar"
												}
											},
											{
												"name": "InletV",
												"Notes": "v1 - Inlet molar volume",
												"DiagramX": 180,
												"DiagramY": 165,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "feedV"
												},
												"isInput": "y"
											},
											{
												"name": "OutletV",
												"Notes": "va - Actual outlet molar volume",
												"DiagramX": 280,
												"DiagramY": 165,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "1/Outlet.dmolar"
												}
											},
											{
												"name": "Ideal",
												"Notes": "Isetropic outlet fluid",
												"DiagramX": 180,
												"DiagramY": 255,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "IdealOut"
												},
												"isInput": "y"
											},
											{
												"name": "Outlet",
												"Notes": "Actual outlet fluid",
												"DiagramX": 180,
												"DiagramY": 285,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "OutFluid"
												},
												"isInput": "y"
											},
											{
												"name": "inletP",
												"Notes": "p1 - Inlet Pressure",
												"DiagramX": 180,
												"DiagramY": 195,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "Pin"
												},
												"isInput": "y"
											},
											{
												"name": "InletH",
												"Notes": "hin - Inlet molar enthalpy",
												"DiagramX": 180,
												"DiagramY": 225,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "feedH"
												},
												"isInput": "y"
											},
											{
												"name": "adEff",
												"Notes": "Ea - Adiabatic efficiency",
												"DiagramX": 280,
												"DiagramY": 285,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "(ideal.h - inletH)/(outlet.h - inletH)"
												}
											},
											{
												"name": "polyEff",
												"Notes": "Ep - Polytropic Efficiency",
												"DiagramX": 280,
												"DiagramY": 315,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "Expression",
												"Formula": {
													"Formula": "adEff *\n(\n\tn / (n - 1) *\n\t(\n\t\t(\n\t\t\tOutlet.p\n\t\t\t/\n\t\t\tinletP\n\t\t)^((n-1)/n)\n\t\t - 1\n\t)\n)\n/\n(\n\tns/ (ns - 1) *\n\t(\n\t\t(\n\t\t\tOutlet.p\n\t\t\t/\n\t\t\tinletP\n\t\t)^((ns-1)/ns)\n\t\t- 1\n\t)\n)"
												},
												"isOutput": "y"
											},
											{
												"name": "Overview",
												"Notes": "Polytropic efficiency overview",
												"DiagramX": 180,
												"DiagramY": 130,
												"HideInfo": "y",
												"DiagramNotes": "y",
												"Type": "HTML Form",
												"Formula": {
													"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Polytropic Efficiency</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model calculates the polytropic efficiency for a <a href=\"https://en.wikipedia.org/wiki/Compressor\" target=\"_blank\">compressor</a>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>InletV</b> - the molar volume of the inlet fluid</li>\n\t\t\t<li><b>inletP</b> - the pressure of the inlet fluid</li>\n\t\t\t<li><b>inletH</b> - the molar enthalpy of the inlet fluid</li>\n\t\t\t<li><b>Ideal</b> - the flash results for the outlet fluid assuming isentropic compression.</li>\n\t\t\t<li><b>Outlet</b> - the flash results for the actual outlet fluid</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expression is <b>polyEff</b>, the polytropic efficiency.\n\t\t</p>\n\t\t<p>\n\t\t\tThe other expressions implement the calculation outlined below and where the expression calculates a variable mentioned here the the variable's symbol is listed in the expression notes.\n\t\t</p>\n\t\t<h4>Calculation overview</h4>\n\t\t<p>\n\t\t\tPolytropic efficiency can be defined as:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEp = Wp / Wa\n\t\t</p>\n\t\t<p>where:</p>\n\t\t<ul>\n\t\t\t<li>Ep = polytropic efficiency</li>\n\t\t\t<li>Wp = polytropic work</li>\n\t\t\t<li>Wa = actual work</li>\n\t\t</ul>\n\t\t<p>\n\t\t\twhere the actual work <b>Wa</b> is:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tWa = Ws / Ea\n\t\t</p>\n\t\t<p>where:</p>\n\t\t<ul>\n\t\t\t<li>Ea = adiabatic efficiency</li>\n\t\t\t<li>Ws = isentropic work</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tand the adiabatic efficiency <b>Eq</b> can be calculated from:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEa = (hIout - hin) / (hAout - hin)\n\t\t</p>\n\t\t<p>\n\t\t\twhere:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li>hin is the enthalpy of the inlet fluid</li>\n\t\t\t<li>hIOut is the enthalpy of the outlet for the ideal (isentropic) process</li>\n\t\t\t<li>hAout is the enthalpy of the outlet for tne nonideal process</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tBack substituting Wa into the polytropic efficiency formula becomes:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEp = Ea * Wp / Ws\n\t\t</p>\n\t\t<p>\n\t\t\tThe formulas for <b>Wp</b> and <b>Ws</b> are of the same form and after eliminating common terms from the numerator and denominator, we get\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEp = Ea * (<br>\n\t\t\t&nbsp;&nbsp;&nbsp;n/(n-1) * ((p2/p1)^((n-1)/n) - 1)<br>\n\t\t\t/<br>\n\t\t\t&nbsp;&nbsp;&nbsp;ns/(ns-1) * ((p2/p1)^((ns-1)/ns) - 1)<br>\n\t\t\t)\n\t\t</p>\n\t\t<p>\n\t\t\twhere:\n\t\t</p>\n\t\t<ul class=\"formula\">\n\t\t\t<li>n = ln(p2/p1) / ln(v1/vs)</li>\n\t\t\t<li>ns = ln(p2/p1) / ln(v1/va)</li>\n\t\t\t<li>p1 = inlet pressure, p2 = outlet pressure</li>\n\t\t\t<li>v1 = inlet molar volume</li>\n\t\t\t<li>vs = isentropic outlet molar volume</li>\n\t\t\t<li>va = actual outlet molar volume</li>\n\t\t</ul>\n\n\t\t</div>\n\t</body>\n</html>"
												}
											}
										]
									}
								]
							},
							{
								"name": "Mix3",
								"Notes": "Takes three flash results and produces thermo, p, f, h and x values for the combined fluid.",
								"DiagramX": 235,
								"DiagramY": 250,
								"HideInfo": "n",
								"DiagramNotes": "y",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "overview",
								"Objects": [
									{
										"name": "Feed1",
										"DiagramX": 100,
										"DiagramY": 70,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "Feed2",
										"DiagramX": 100,
										"DiagramY": 105,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									},
									{
										"name": "P",
										"DiagramX": 200,
										"DiagramY": 55,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "{min feed1.p, feed2.p, feed3.p}"
										},
										"isOutput": "y"
									},
									{
										"name": "F",
										"DiagramX": 200,
										"DiagramY": 80,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "Feed1.f + feed2.f + feed3.f"
										},
										"isOutput": "y"
									},
									{
										"name": "H",
										"DiagramX": 200,
										"DiagramY": 105,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "(feed1.hflow + feed2.hflow + feed3.hflow)\n/\nF"
										},
										"isOutput": "y"
									},
									{
										"name": "X",
										"DiagramX": 200,
										"DiagramY": 130,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "(\n\tfeed1.x * feed1.f +\n\tfeed2.x * feed2.f +\n\tfeed3.x * feed3.f\n)\n/\nf"
										},
										"isOutput": "y"
									},
									{
										"name": "thermo",
										"Notes": "",
										"DiagramX": 200,
										"DiagramY": 30,
										"HideInfo": "y",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": "Feed1.thermo"
										},
										"isOutput": "y"
									},
									{
										"name": "Overview",
										"Notes": "Mix2 Overview",
										"DiagramX": 100,
										"DiagramY": 35,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Mix3 Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tFrom the mixing of three fluids this model calculates the properties required as <b>flash tool</b> inputs.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>feed1</b> - a flash result or similar representing the inlet fluid. Must have thermo, pressure, flow and mole fraction properties.</li>\n\t\t\t<li><b>feed2</b> - second feed with same requirements as feed1, except thermo is not used.</li>\n\t\t\t<li><b>feed3</b> - third feed with same requirements as feed1, except thermo is not used.</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>thermo</b> - thermo definition copied from feed1</li>\n\t\t\t<li><b>p</b> - the outlet pressure, which is assumed to be the lessor of the two feed pressures</li>\n  \t\t<li><b>f</b> - the combined molar flow</li>\n  \t\t<li><b>h</b> - the mixture enthalpy</li>\n  \t\t<li><b>x</b> - the mixture mole fraction</li>\n\t\t</ul>\n\t\t</div>\n\t</body>\n</html>"
										}
									},
									{
										"name": "Feed3",
										"Notes": "",
										"DiagramX": 100,
										"DiagramY": 140,
										"HideInfo": "n",
										"DiagramNotes": "n",
										"Type": "Expression",
										"Formula": {
											"Formula": ""
										},
										"isInput": "y"
									}
								]
							}
						]
					},
					{
						"name": "Examples",
						"Notes": "",
						"DiagramX": 170,
						"DiagramY": 5,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"Type": "HTML Form",
						"Formula": {
							"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t\t.example {\n\t\t\tborder-bottom: 1px solid black;\n\t\t\tpadding-bottom: 10px;\n\t\t\tmargin-bottom: 2em;\n\t\t}\n\t\t.extitle {\n\t\t\tfont-size: 1em;\n\t\t\tfont-family: \"Verdana\";\n\t\t\tfont-style: italic;\n\t\t\tfont-weight: bold;\n\t\t}\n\n\t\t.exsubtitle {\n\t\t\tborder-bottom: 1px dashed black;\n\t\t\tmargin-bottom: 0.75em;\n\t\t\tpadding-bottom: 0.5em;\n\t\t}\n\t\t.hiddenalert {\n\t\t\tcolor: #F00;\n\t\t}\t\n\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t\t<h3>Math Minion CoolProp Examples</h3>\n\t\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<div id=\"preface\">\n\t\t\t<p>\n\t\t\t\tBelow are a few examples of using the CoolProp based <a href=\"./help/flash.html\" target=\"_blank\">flash tool</a>. They are all pretty idealized, but they illustrate the principles and have hopefully decent explanations.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tAdditional suggestions are most \t\t\t<a href=\"http://redtree.com/contact.html\" target=\"_blank\">welcome</a>.\n\t\t\t</p>\n\t\t</div>\n\t\t<div id=\"examples\">\n\t\t\t<div id=\"cascaderefrig\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tCascade Refrigeration\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIllustrates a cascade refrigeration system with a high temperature loop and a low temperature one having different refrigerants.\n\t\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/coolmm/cascade refrig.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"azeo\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tAzeotrope\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tThis model uses an Optimizer tool to determine the well known azeotrope of the ethanol water mixture at 1 atmosphere.\n\n\t\t\t\t\t\t\tSeparately an Interator tool is used to prepare the input for Graph tools that plot the bubble point temperature for the mixture against the ethanol mass fraction and the vapour-liquid equilibrium of the mixture.\t\t\t\t\t\t\t\n\t\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/coolmm/EtOH Azeotrope.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"liqair\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\tHampson-Linde Air Liquification\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe Hampson-Linde cycle is one of the first and simplest processes for liquifying air.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/coolmm/liqair.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"gasplant\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tGas Plant HC Dewpoint Control\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAn attempt to model a very fictitious dew point control gas plant front end. The techniques might be of interest, but read to the end to see why this isn't a good idea with CoolProp.\n\t\t\t\t\t</p>\t\t\t\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/coolmm/gasplant.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"steamturbine\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tCondensing Steam Turbine\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis is a model of a simplified condensing steam turbine system for a power plant.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/coolmm/steam turbine.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"boiler\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tSteam Boiler Dynamics\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis looks at the dynamics of an extremely simplified and stylized steam boiler using the ODE tool and a density/enthalpy flash.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/coolmm/boiler.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div id=\"toolbox\" class=\"example\">\n\t\t\t\t<div class=\"extitle\">\n\t\t\t\t\t\tTool Box\n\t\t\t\t</div>\n\t\t\t\t<div class=\"exdesc\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis model is contained in the <b>Getting Started</b> session of the <b>CoolMM</b> version of Math Minion, but it is also included here to make it easy to add to your library of sessions. It can be handy to quickly copy the session and past it temporarily into a session you are working on and the copy and paste tools out of it.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIt also has a couple of examples (refrigeration loop and McCabe Thiele) for added justification in including it here.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"link\">\n\t\t\t\t\t<button onClick=\"mmpost({}, {mm_loadurl: '../examples/coolmm/ToolBox.txt'});\">Import</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t</body>\n</html>"
						}
					}
				]
			}
		]
	}
}