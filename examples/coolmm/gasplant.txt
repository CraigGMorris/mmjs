{
	"Program": "Rtm",
	"Version": 3,
	"DetailWidth": 320,
	"DeviceWidth": 1024,
	"UserUnitSets": {},
	"UserUnits": [],
	"CaseName": "gasplant",
	"DefaultUnitSet": "SI",
	"SelectedObject": "Overview",
	"ModelPath": "/.root",
	"RootModel": {
		"name": "root",
		"Notes": "",
		"DiagramX": 0,
		"DiagramY": 0,
		"HideInfo": "n",
		"DiagramNotes": "n",
		"Type": "Model",
		"diagramScale": 1,
		"Objects": [
			{
				"name": "lts",
				"Notes": "Low Temperature Separator",
				"DiagramX": 145,
				"DiagramY": 115,
				"HideInfo": "y",
				"DiagramNotes": "y",
				"Type": "Flash",
				"thermo": {
					"Formula": "feed.thermo"
				},
				"firstprop": {
					"Formula": "feed.p - 120 kpa"
				},
				"secondprop": {
					"Formula": "-25 degc - dewsolve.1 * 5 deltac"
				},
				"molefrac": {
					"Formula": "feed.v.x"
				},
				"massfrac": {
					"Formula": ""
				},
				"flow": {
					"Formula": "feed.v.f"
				}
			},
			{
				"name": "dewpt",
				"Notes": "",
				"DiagramX": 50,
				"DiagramY": 170,
				"HideInfo": "y",
				"DiagramNotes": "n",
				"Type": "Flash",
				"thermo": {
					"Formula": "lts.thermo"
				},
				"firstprop": {
					"Formula": "800 psia"
				},
				"secondprop": {
					"Formula": "1"
				},
				"molefrac": {
					"Formula": "lts.v.x"
				},
				"massfrac": {
					"Formula": ""
				},
				"flow": {
					"Formula": "lts.v.f"
				}
			},
			{
				"name": "dewSolve",
				"Notes": "",
				"DiagramX": 50,
				"DiagramY": 195,
				"HideInfo": "y",
				"DiagramNotes": "n",
				"Type": "Equation Solver",
				"f0": "(dewpt.t - -10. degf)/1 deltac",
				"c0": "1",
				"maxIter": 200,
				"maxJacobians": 5,
				"Enabled": "y"
			},
			{
				"name": "envelope",
				"Notes": "",
				"DiagramX": 50,
				"DiagramY": 220,
				"HideInfo": "y",
				"DiagramNotes": "n",
				"Type": "Expression",
				"Formula": {
					"Formula": "lts.envelope"
				}
			},
			{
				"name": "envPlot",
				"Notes": "",
				"DiagramX": 50,
				"DiagramY": 245,
				"HideInfo": "y",
				"DiagramNotes": "n",
				"Type": "Graph",
				"X1": {
					"v": "envelope.t",
					"vmin": "",
					"vmax": "",
					"Y1": {
						"v": "envelope.p",
						"vmin": "0 kpa",
						"vmax": "",
						"lineType": 0
					}
				}
			},
			{
				"name": "ChillerDuty",
				"Notes": "",
				"DiagramX": 145,
				"DiagramY": 180,
				"HideInfo": "y",
				"DiagramNotes": "n",
				"Type": "Expression",
				"Formula": {
					"Formula": "(GasGasExch.side1out.h - lts.h)\n* lts.f"
				}
			},
			{
				"name": "refrigPower",
				"Notes": "",
				"DiagramX": 145,
				"DiagramY": 245,
				"HideInfo": "y",
				"DiagramNotes": "n",
				"Type": "Expression",
				"Formula": {
					"Formula": "refrigeration.comppower"
				},
				"displayUnit": "horsepower"
			},
			{
				"name": "feed",
				"Notes": "Feed - Inlet Separator",
				"DiagramX": 50,
				"DiagramY": 140,
				"HideInfo": "y",
				"DiagramNotes": "y",
				"Type": "Flash",
				"thermo": {
					"Formula": "'Methane,\nEthane,\nPropane,\nIsobutane,\nn-Butane,\nIsopentane,\nn-Pentane,\nn-Hexane,\nn-Heptane,\nn-Octane\n;\ndmass"
				},
				"firstprop": {
					"Formula": "10 degc"
				},
				"secondprop": {
					"Formula": "3000 kpa"
				},
				"molefrac": {
					"Formula": "{cc 70, 20, 10, 9, 8, 7, 6, 5, 4, 3}"
				},
				"massfrac": {
					"Formula": ""
				},
				"flow": {
					"Formula": "10 mmscf/d"
				}
			},
			{
				"name": "GasGasExch",
				"Notes": "Simple counter current heat exchanger",
				"DiagramX": 145,
				"DiagramY": 145,
				"HideInfo": "n",
				"DiagramNotes": "y",
				"Type": "Model",
				"diagramScale": 1,
				"indexTool": "overview",
				"Objects": [
					{
						"name": "Side1In",
						"Notes": "Side 1 inlet\n(should be a flash result)",
						"DiagramX": 155,
						"DiagramY": 180,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "feed.v"
						},
						"isInput": "y"
					},
					{
						"name": "Side1DP",
						"Notes": "Side 1 pressure drop",
						"DiagramX": 155,
						"DiagramY": 215,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "60 kpa"
						},
						"isInput": "y"
					},
					{
						"name": "Side2In",
						"Notes": "Side 2 inlet\n(should be a flash result)",
						"DiagramX": 155,
						"DiagramY": 245,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "lts.v"
						},
						"isInput": "y"
					},
					{
						"name": "Side2DP",
						"Notes": "Side 2 pressure drop",
						"DiagramX": 155,
						"DiagramY": 280,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "60 kpa"
						},
						"isInput": "y"
					},
					{
						"name": "T2Out",
						"Notes": "Side 2 outlet temperature",
						"DiagramX": 155,
						"DiagramY": 310,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": ""
						},
						"isInput": "y",
						"displayUnit": "degC"
					},
					{
						"name": "dt",
						"Notes": "Temperature difference between side 1 inlet and side 2 outlet.\nOnly used if T2Out is blank",
						"DiagramX": 155,
						"DiagramY": 340,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "5 deltac"
						},
						"isInput": "y",
						"displayUnit": "deltaC"
					},
					{
						"name": "Duty",
						"Notes": "Calculated exchanger duty",
						"DiagramX": 370,
						"DiagramY": 215,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "(side1flash.h - side1in.h) * side1In.f"
						},
						"isOutput": "y"
					},
					{
						"name": "lmtd",
						"Notes": "Log mean temperature difference",
						"DiagramX": 370,
						"DiagramY": 250,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "LMTD_Calc.lmtd"
						},
						"isOutput": "y",
						"displayUnit": "deltaC"
					},
					{
						"name": "Side1Flash",
						"Notes": "Flash representing the side 1 outlet.\n\nThe pressure is determined by the inlet pressure and the pressure drop.\n\nThe second property is the fluid enthalpy, determined by a heat balance on the inlets and outlets.",
						"DiagramX": 265,
						"DiagramY": 275,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"Type": "Flash",
						"thermo": {
							"Formula": "Side1In.thermo"
						},
						"firstprop": {
							"Formula": "side1in.p - side1dp"
						},
						"secondprop": {
							"Formula": "(side1in.h * side1in.f\n + side2in.h * side2in.f\n - side2flash.h * side2flash.f\n) / side1In.f"
						},
						"molefrac": {
							"Formula": "side1In.x"
						},
						"massfrac": {
							"Formula": ""
						},
						"flow": {
							"Formula": "side1in.f"
						}
					},
					{
						"name": "Side2Flash",
						"Notes": "Flash representing the side s outlet.\n\nThe pressure is determined by the inlet pressure and the pressure drop.\n\nThe second property is the temperature determined by either the value of T2Out or if it is missing, the side one inlet temperature and the value of dt.",
						"DiagramX": 265,
						"DiagramY": 310,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"Type": "Flash",
						"thermo": {
							"Formula": "side2in.thermo"
						},
						"firstprop": {
							"Formula": "{if t2out.hasvalue, t2out, side1in.t - dt}"
						},
						"secondprop": {
							"Formula": "side2in.p - side2dp"
						},
						"molefrac": {
							"Formula": "side2in.x"
						},
						"massfrac": {
							"Formula": ""
						},
						"flow": {
							"Formula": "side2in.f"
						}
					},
					{
						"name": "Side1Out",
						"Notes": "Side 1 outlet fluid",
						"DiagramX": 370,
						"DiagramY": 280,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "Side1Flash"
						},
						"isOutput": "y"
					},
					{
						"name": "Side2Out",
						"Notes": "Side 2 outlet fluid",
						"DiagramX": 370,
						"DiagramY": 310,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "side2flash"
						},
						"isOutput": "y"
					},
					{
						"name": "Overview",
						"Notes": "Heat Exchanger Overview",
						"DiagramX": 265,
						"DiagramY": 180,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "HTML Form",
						"Formula": {
							"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Heat Exchanger Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model represents a thermodynamic heat balance on a simple counter current <a href=\"https://en.wikipedia.org/wiki/Heat_exchanger\" target=\"_blank\">heat exchanger</a>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>side1In</b> - a flash result or similar representing the inlet fluid on side 1.</li>\n\t\t\t<li><b>side1Dp</b> - pressure drop across side 1, (inlet pressure - outlet pressure).</li>\n\t\t\t<li><b>side2In</b> - a flash result or similar representing the inlet fluid on side 2.</li>\n\t\t\t<li><b>side1Dp</b> - pressure drop across side 2, (inlet pressure - outlet pressure).</li>\n\t\t\t<li><b>T2Out</b> - outlet temperature of side 2. Can be empty.</li>\n\t\t\t<li><b>dt</b> - temperature difference between side 1 inlet and side 2 outlet. This is only used if T2Out is empty.</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>duty</b> - the energy flow from side 2 to side 1.</li>\n\t\t\t<li><b>lmtd</b> - the log mean temperature difference.</li>\n  \t\t<li><b>side1Out</b> - the flash result for the side 1 outlet fluid.</li>\n  \t\t<li><b>side2Out</b> - the flash result for the side 2 outlet fluid.</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tIt is assumed that both inlet fluids are completely known. This of course means the flow and compositions of the outlets are also known and because the pressure drops are also inputs, the outlet pressures are known.\n\t\t</p>\n\t\t<p>\n\t\t\tThe temperature of the side 2 outlet is either directly supplied by input expression <b>T2Out</b> or can be calculated from the side 1 inlet temperature and the supplied temperature approach from inlet expression <b>dt</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tThis allows the conditions of the side 2 outlet to be evaluated, leaving only the side 1 outlet unknown. However it only needs one additional intensive variable and that can be supplied by doing an energy balance around the exchanger to give the side 1 outlet enthalpy.  This calculation is perform right in the formula for the 2nd property of <b>Side1Flash</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe exchanger duty is calculated by subtracting the side 1 outlet energy flow from the inlet.\n\t\t</p>\n\t\t<p>\n\t\t\tFinally the <a href=\"https://en.wikipedia.org/wiki/Logarithmic_mean_temperature_difference\" target=\"_blank\">log mean temperature difference</a> is calculated in expression <b>lmtd</b>.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
						}
					},
					{
						"name": "LMTD_Calc",
						"Notes": "Log Mean Temperature Difference",
						"DiagramX": 265,
						"DiagramY": 240,
						"HideInfo": "n",
						"DiagramNotes": "y",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "overview",
						"Objects": [
							{
								"name": "side1Tin",
								"Notes": "",
								"DiagramX": 200,
								"DiagramY": 330,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "side1in.t"
								},
								"isInput": "y"
							},
							{
								"name": "side1Tout",
								"Notes": "",
								"DiagramX": 200,
								"DiagramY": 355,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "side1flash.t"
								},
								"isInput": "y"
							},
							{
								"name": "side2Tin",
								"Notes": "",
								"DiagramX": 200,
								"DiagramY": 380,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "side2in.t"
								},
								"isInput": "y"
							},
							{
								"name": "side2Tout",
								"Notes": "",
								"DiagramX": 200,
								"DiagramY": 405,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "side2flash.t"
								},
								"isInput": "y"
							},
							{
								"name": "dta",
								"Notes": "Calculated temperature difference between side 1 inlet and side 2 outlet.",
								"DiagramX": 305,
								"DiagramY": 300,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "side1Tin - side2Tout"
								},
								"displayUnit": "deltaC"
							},
							{
								"name": "dtb",
								"Notes": "Temperature difference between side 2 inlet and side 1 outlet.",
								"DiagramX": 305,
								"DiagramY": 340,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "side1Tout - side2Tin"
								},
								"displayUnit": "deltaC"
							},
							{
								"name": "lmtd",
								"Notes": "Log mean temperature difference",
								"DiagramX": 305,
								"DiagramY": 380,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "(dta - dtb) / {ln dta / dtb}"
								},
								"isOutput": "y",
								"displayUnit": "deltaC"
							},
							{
								"name": "Overview",
								"Notes": "LMTD Overview",
								"DiagramX": 200,
								"DiagramY": 300,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Log Mean Temperature Difference</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis convenience model calculates the log mean temperature difference for a counter current heat exchanger.  The inputs are just the inlet and outlet temperatures, while the sole output is the <b>lmtd</b>.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
								},
								"f0": "envplot.svg"
							}
						]
					}
				]
			},
			{
				"name": "refrigeration",
				"Notes": "A simple single state refrigeration calculation",
				"DiagramX": 145,
				"DiagramY": 205,
				"HideInfo": "n",
				"DiagramNotes": "y",
				"Type": "Model",
				"diagramScale": 1,
				"indexTool": "refrigeration",
				"Objects": [
					{
						"name": "InletQ",
						"Notes": "the cooling duty",
						"DiagramX": 235,
						"DiagramY": 345,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "ChillerDuty"
						},
						"isInput": "y"
					},
					{
						"name": "condT",
						"Notes": "condensing temperature",
						"DiagramX": 235,
						"DiagramY": 375,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "40 degc"
						},
						"isInput": "y"
					},
					{
						"name": "ColdT",
						"Notes": "required coolant temperature",
						"DiagramX": 235,
						"DiagramY": 315,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "lts.t - 5 deltac"
						},
						"isInput": "y"
					},
					{
						"name": "envelope",
						"Notes": "",
						"DiagramX": 315,
						"DiagramY": 400,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "coolerOut.envelope"
						}
					},
					{
						"name": "envPlot",
						"Notes": "Plot of the T - P phase envelope\nAll of the flashes will be on this line",
						"DiagramX": 315,
						"DiagramY": 430,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Graph",
						"X1": {
							"v": "envelope.t",
							"vmin": "-150 degc",
							"vmax": "100 degc",
							"Y1": {
								"v": "envelope.p",
								"vmin": "0 kpa",
								"vmax": "6000 kpa",
								"lineType": 0
							}
						},
						"X2": {
							"v": "{cc coolerOut.t,\n\tcompressor.outfluid.t,\n\tcondenserOut.t,\n\tvalveOut.t\n}'Path T",
							"vmin": "",
							"vmax": "",
							"Y1": {
								"v": "{cc coolerOut.p.b,\n\tcompressor.outfluid.p.b,\n\tcondenserOut.p.b,\n\tvalveOut.p.b\n}'Path P",
								"vmin": "",
								"vmax": "",
								"lineType": 0
							}
						}
					},
					{
						"name": "condenserOut",
						"Notes": "Similar to the cooler, we know the condenser outlet temperature (presumably from available cooling) and since it is condensed, it will be at the bubble point. We can designate this by setting the second property to 0.\n\nThis will determine the condensing pressure and other properties.",
						"DiagramX": 315,
						"DiagramY": 310,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"Type": "Flash",
						"thermo": {
							"Formula": "coolerOut.thermo"
						},
						"firstprop": {
							"Formula": "condT"
						},
						"secondprop": {
							"Formula": "0"
						},
						"molefrac": {
							"Formula": "coolerOut.x"
						},
						"massfrac": {
							"Formula": ""
						},
						"flow": {
							"Formula": "coolerOut.f"
						}
					},
					{
						"name": "CondInT",
						"Notes": "Compressor outlet temperature\n=\nCondenser inlet temperature",
						"DiagramX": 415,
						"DiagramY": 340,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "compressor.out.t"
						},
						"isOutput": "y"
					},
					{
						"name": "compPower",
						"Notes": "Required compressor power",
						"DiagramX": 415,
						"DiagramY": 280,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "compressor.power"
						},
						"isOutput": "y"
					},
					{
						"name": "CoolerDp",
						"Notes": "",
						"DiagramX": 235,
						"DiagramY": 405,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "gasGasExch.side1Out.p - lts.p"
						},
						"isInput": "y"
					},
					{
						"name": "CondDp",
						"Notes": "",
						"DiagramX": 235,
						"DiagramY": 430,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "35 kpa"
						},
						"isInput": "y"
					},
					{
						"name": "CondDuty",
						"Notes": "Condenser Duty",
						"DiagramX": 415,
						"DiagramY": 310,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "(condenserOut.h - compressor.Out.h)*coolerOut.f"
						},
						"isOutput": "y"
					},
					{
						"name": "coolerOut",
						"Notes": "We know the required coolant temperature and we know that the coolant will be boiling. THus we can set the second property to 1, which will be taken as q, the vapour fraction.\n\nThis allows the pressure and other properties to be calculated.\n\nWe know the cooling load from InletQ and once the\nenthalpy of the entering fluid, namely valveOut\nis known, the flow can be calculated by dividing the duty by the enthalpy difference in and out.\n\nThe refrigerant can be changed in the thermo designation (R whatever, Propane, Ammonia, etc). If multiple components are used, the mole fraction spec will have to change accordingly.",
						"DiagramX": 315,
						"DiagramY": 280,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"Type": "Flash",
						"thermo": {
							"Formula": "'n-Propane;massf"
						},
						"firstprop": {
							"Formula": "ColdT"
						},
						"secondprop": {
							"Formula": "1"
						},
						"molefrac": {
							"Formula": "1"
						},
						"massfrac": {
							"Formula": ""
						},
						"flow": {
							"Formula": "InletQ / ($.h - condenserOut.h)"
						}
					},
					{
						"name": "CoolerOutlet",
						"Notes": "Cooler outlet fluid\n(same as compressor inlet)",
						"DiagramX": 415,
						"DiagramY": 385,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "CoolerOut"
						},
						"isOutput": "y"
					},
					{
						"name": "CoolerInlet",
						"Notes": "Cooler inlet fluid\n(same as valve outlet)",
						"DiagramX": 415,
						"DiagramY": 420,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "valveOut"
						},
						"isOutput": "y"
					},
					{
						"name": "CompressorOutlet",
						"Notes": "Compressor outlet fluid\n(same as condenser inlet)",
						"DiagramX": 415,
						"DiagramY": 455,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "compressor.out"
						},
						"isOutput": "y"
					},
					{
						"name": "valveOut",
						"Notes": "We know the pressure coming out of the valve will\nbe the cooler inlet pressure. I am ignoring pressure drops for simplicity, but they could be easily added.\n\nSince valves are isenthalpic, we also know the valve outlet enthalpy and can set it as the second property.\n\nThe resulting flash will have a significant amount of vapour.",
						"DiagramX": 315,
						"DiagramY": 340,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"Type": "Flash",
						"thermo": {
							"Formula": "condenserOut.thermo"
						},
						"firstprop": {
							"Formula": "coolerOut.p + coolerDp"
						},
						"secondprop": {
							"Formula": "condenserOut.h"
						},
						"molefrac": {
							"Formula": "coolerOut.x"
						},
						"massfrac": {
							"Formula": ""
						},
						"flow": {
							"Formula": "condenserOut.f"
						}
					},
					{
						"name": "Refrigeration",
						"Notes": "Overview",
						"DiagramX": 235,
						"DiagramY": 280,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"Type": "HTML Form",
						"Formula": {
							"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h4>Simple Single Stage Refrigeration </h4>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model shows how the properties of a simple single stage refrigeration loop can be calculated using basic thermodynamics.\n\t\t</p>\n\t\t<p>\n\t\t\tThe refrigeration loop looks like this:\n\t\t</p>\n<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 1024 650\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" xmlns:serif=\"http://www.serif.com/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\">\n    <g id=\"Cooler\" transform=\"matrix(1,0,0,1,-30.5113,85.8962)\">\n        <g transform=\"matrix(1.36733,0,0,1.36733,-255.523,145.782)\">\n            <circle cx=\"735.181\" cy=\"167.587\" r=\"69.251\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-369.122,167.346)\">\n            <path d=\"M799.807,119.07L719.951,198.427\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-369.122,167.346)\">\n            <path d=\"M838.062,180.07L799.807,119.07\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-369.122,167.346)\">\n            <path d=\"M920.578,98.174L838.052,179.677\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(0.720399,0.720399,-1.05258,1.05258,311.159,-421.885)\">\n            <path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:0.78px;\"/>\n        </g>\n        <g transform=\"matrix(1.57389e-16,-1.05628,1.54333,3.14777e-16,671.041,981.596)\">\n            <path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:0.76px;\"/>\n        </g>\n        <g transform=\"matrix(1.51804e-16,-1.0188,1.48857,3.03608e-16,379.896,1023.27)\">\n            <path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:0.78px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-209.284,-307.928)\">\n            <path d=\"M671.848,300.131L521.605,300.131\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(7.59019e-17,1.0188,-1.48857,0,758.006,-544.194)\">\n            <path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:0.78px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-209.284,-307.928)\">\n            <path d=\"M413.681,500.652L616.726,500.652\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(7.59019e-17,1.0188,-1.48857,0,307.925,-545.726)\">\n            <path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:0.78px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-209.284,-307.928)\">\n            <path d=\"M305.077,299.515L249.989,299.078\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-209.284,-307.928)\">\n            <path d=\"M249.989,299.078L249.989,500.15\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-209.284,-307.928)\">\n            <path d=\"M249.989,500.15L287.042,500.15\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-205.141,-284.519)\">\n            <text x=\"340.411px\" y=\"342.58px\" style=\"font-family:'Arial-BoldMT', 'Arial', sans-serif;font-weight:700;font-size:24px;\">Condenser</text>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-239.696,-280.387)\">\n            <text x=\"670.252px\" y=\"365.729px\" style=\"font-family:'Arial-BoldMT', 'Arial', sans-serif;font-weight:700;font-size:24px;\">Compressor</text>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-198.083,-292.803)\">\n            <text x=\"653.088px\" y=\"585.843px\" style=\"font-family:'Arial-BoldMT', 'Arial', sans-serif;font-weight:700;font-size:24px;\">Cooler</text>\n        </g>\n        <g transform=\"matrix(1.36733,0,0,1.36733,-234.271,-284.603)\">\n            <text x=\"328.159px\" y=\"540.958px\" style=\"font-family:'Arial-BoldMT', 'Arial', sans-serif;font-weight:700;font-size:24px;\">JT V<tspan x=\"377.518px 390.866px \" y=\"540.958px 540.958px \">al</tspan>ve</text>\n        </g>\n        <g transform=\"matrix(1,0,0,1,30.5113,-85.8962)\">\n            <path d=\"M935.658,185.82L935.658,112.288\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n        </g>\n        <g transform=\"matrix(1,0,0,1,-22.4075,-47.1565)\">\n            <text x=\"393.526px\" y=\"32.893px\" style=\"font-family:'Arial-BoldMT', 'Arial', sans-serif;font-weight:700;font-size:30px;\">Single Stage Refrigeration</text>\n        </g>\n    </g>\n    <g id=\"air-cooler\" serif:id=\"air cooler\" transform=\"matrix(1,0,0,1,-395.102,-130.07)\">\n        <g transform=\"matrix(1.36733,0,0,1.36733,-384.927,-269.81)\">\n            <rect x=\"699.629\" y=\"400.285\" width=\"201.945\" height=\"59.617\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(1.21154,0,0,1.36733,-271.746,-282.141)\">\n            <ellipse cx=\"760.291\" cy=\"437.768\" rx=\"49.85\" ry=\"8.668\" style=\"fill:none;stroke:black;stroke-width:0.77px;\"/>\n        </g>\n        <g transform=\"matrix(-1.21154,-1.48371e-16,1.67449e-16,-1.36733,1691.29,915.004)\">\n            <ellipse cx=\"760.291\" cy=\"437.768\" rx=\"49.85\" ry=\"8.668\" style=\"fill:none;stroke:black;stroke-width:0.77px;\"/>\n        </g>\n    </g>\n    <g id=\"Expander\" transform=\"matrix(0.524246,0,0,0.524246,463.577,141.935)\">\n        <g transform=\"matrix(-1.36733,-1.67449e-16,1.67449e-16,-1.36733,956.369,493.079)\">\n            <path d=\"M303.232,196.136L303.232,401.492L398.208,340.215L398.208,259.875L303.232,196.136Z\" style=\"fill:none;stroke:black;stroke-width:1.4px;\"/>\n        </g>\n        <g transform=\"matrix(2.60818,0,0,2.60818,-1341.68,-694.267)\">\n            <path d=\"M771.686,499.722L859.838,499.722L859.838,298.722\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(2.60818,0,0,2.60818,-1341.68,-834.638)\">\n            <path d=\"M859.42,298.722L723.199,298.722\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n    </g>\n    <g id=\"valve\" transform=\"matrix(1,0,0,1,11.6746,366.757)\">\n        <g transform=\"matrix(8.42037e-17,1.36733,-1.36733,8.42037e-17,382.049,-341.754)\">\n            <path d=\"M318.772,105.125L347.185,160.635L290.359,160.635L318.772,105.125Z\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n        <g transform=\"matrix(8.32456e-17,-1.36733,1.36733,8.32456e-17,94.5681,529.978)\">\n            <path d=\"M318.772,105.125L347.185,160.635L290.359,160.635L318.772,105.125Z\" style=\"fill:none;stroke:black;stroke-width:0.73px;\"/>\n        </g>\n    </g>\n</svg>\n\t\t<p>\n\t\t\tThe heat removed in the cooler boiling the refrigerant and the resulting vapour is compressed to a higher pressure and hence temperature. It is then condensed by an available coolant, here assumed to be air.\n\t\t</p>\n\t\t<p>\n\t\t\tThe condensed high pressure liquid is then let down to a lower pressure through a valve.  The lower pressure causes some of the liquid to vapourize and the phase rule dictates that for a given pressure a two phase fluid's temperature is determined from its phase envelope.\n\t\t</p>\n\t\t<p>\n\t\t\tJumping ahead a bit, the graph below shows the phase envelope for the refrigerant we will use. It is just a line since we will use a pure component. The triangle represents the refrigerant conditions as it moves around the loop. The cooler conditions are at the lower left.  Compressing the vapour raise both the temperature and pressure to the upper right point, while condensing moves it horizontally to the valve inlet condition at the upper left. Passing through the valve\n\t\t\tdrops both temperature and pressure back to the cooler conditions.\n\t\t</p>\n\t\t<mm>envplot.svg</mm>\n\t\t<p>\n\t\t\tWhat we need to determine is:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li>the pressures required for a required coolant temperature and available condensing temperature</li>\n\t\t\t<li>the flow rate of the refrigerant</li>\n\t\t\t<li>the duty of the condenser</li>\n\t\t\t<li>the power required for the compressor</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tWe will start with the refrigerant side of the cooler, represented by the <a href=\"../help/flash.html\" target=\"_blank\">flash tool</a> called <b>coolerOut</b>. In this case we will assume a single component refrigerant <a href=\"https://en.wikipedia.org/wiki/Difluoromethane\" target=\"blank\">difluormethane</a>, commonly called <b>R32</b> and so we will define the thermo parameter as:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\t'R32;massf\n\t\t</p>\n\t\t<p>\n\t\t\twhich is simply as string with the component name(s). Here we have followed it with a double colon and the name(s) of the properties we want included in addition to the default ones. In this case, just the mass flow. The mole fractions input can simply be set to 1 as there is only one component.\n\t\t</p>\n\t\t<p>\t\n\t\t\tWe know the required coolant temperature and will set the first property to that. We also know that the coolant will be boiling, so we can set the second property to 1, which because it has a \"Fraction\" conversion unit type, will be taken as q, the vapour fraction. This means the vapour\n\t\t\tleaving the cooler should be a its dew point.\n\t\t</p>\n\t\t<p>\n\t\t\tThis allows the pressure and other properties to be calculated, but the flow rate is still unknown. We will come back to that.\n\t\t</p>\n\t\t<p>\n\t\t\tSimilar to the cooler, we know the condenser outlet temperature (presumably from available cooling) and can thus set the first property of the <b>condenserOut</b> flash tool. Since it is condensed, we can assume it will be at the bubble point and designate the second property to be 0.\n\t\t</p>\n\t\t\t\tThis will determine the condensing pressure and other properties.\n\t\t</p>\n\t\t<p>\n\t\t\tSince a valve has no heat inputs or outputs, it is isenthalpic, so we know the enthalpy of the fluid leaving the value and going to the cooler is the same as the liquid leaving the condenser.\n\t\t</p>\n\t\t<p>\n\t\t\tBack at the coolerOut Flash, we know the cooling load from InletQ and now that we know the enthalpy of the entering fluid, namely that of <b>valveOut</b> which is the same as that of <b>condenserOut</b>, the flow can be calculated by dividing the duty by the enthalpy difference in and out.\n\t\t</p>\n\t\t<p>\n\t\t\tWith the flow rate known, we can calculate the condenser duty by multiplying the difference between its inlet and outlet enthalpy by the flow rate.\n\t\t</p>\n\t\t<p>\n\t\t\tAll that remains is to determine the required compressor power. For that we can copy and paste a previously made model representing a compressor from the toolbox example session and filling in the input expressions.\n\t\t</p>\n\t\t<p>\n\t\t\tThat's it.  All the values we wanted are now calculated.\n\t\t</p>\n\t\t<p>\n\t\t\tNote that the refrigerant can be changed in the thermo designation (R whatever, Propane, Ammonia, etc). If multiple components are used, the mole fraction spec will have to change accordingly.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
						},
						"f0": "envplot.svg"
					},
					{
						"name": "compressor",
						"Notes": "Basic compressor calculation.",
						"DiagramX": 315,
						"DiagramY": 370,
						"HideInfo": "n",
						"DiagramNotes": "y",
						"Type": "Model",
						"diagramScale": 1,
						"indexTool": "Compressor",
						"Objects": [
							{
								"name": "Feed",
								"DiagramX": 120,
								"DiagramY": 140,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "coolerOut"
								},
								"isInput": "y"
							},
							{
								"name": "e",
								"Notes": "If efficiency is greater than one, assume it is a percentage",
								"DiagramX": 230,
								"DiagramY": 135,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "{if {gt efficiency, 1.0},\n\tefficiency/100,\n\tefficiency\n}"
								}
							},
							{
								"name": "OutletP",
								"DiagramX": 120,
								"DiagramY": 170,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "condenserout.p + condDp"
								},
								"isInput": "y"
							},
							{
								"name": "Efficiency",
								"DiagramX": 120,
								"DiagramY": 195,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": ".75"
								},
								"isInput": "y"
							},
							{
								"name": "H",
								"Notes": "The outlet enthalpy is determined by dividing the difference between the inlet and ideal outlet enthalpies by the efficiency and adding the result to the feed enthalpy.",
								"DiagramX": 345,
								"DiagramY": 190,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Expression",
								"Formula": {
									"Formula": "feedH + \n(IdealOut.h - feedH) / e"
								}
							},
							{
								"name": "Power",
								"DiagramX": 345,
								"DiagramY": 165,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "(outfluid.h - feedH)*F"
								},
								"isOutput": "y"
							},
							{
								"name": "OutFluid",
								"Notes": "",
								"DiagramX": 230,
								"DiagramY": 255,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Flash",
								"thermo": {
									"Formula": "IdealOut.thermo"
								},
								"firstprop": {
									"Formula": "OutletP"
								},
								"secondprop": {
									"Formula": "h"
								},
								"molefrac": {
									"Formula": "idealout.x"
								},
								"massfrac": {
									"Formula": ""
								},
								"flow": {
									"Formula": "idealout.f"
								}
							},
							{
								"name": "IdealOut",
								"Notes": "Ideal compression is isentropic",
								"DiagramX": 230,
								"DiagramY": 220,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "Flash",
								"thermo": {
									"Formula": "feed.thermo"
								},
								"firstprop": {
									"Formula": "OutletP"
								},
								"secondprop": {
									"Formula": "feedS"
								},
								"molefrac": {
									"Formula": "X"
								},
								"massfrac": {
									"Formula": ""
								},
								"flow": {
									"Formula": "F"
								}
							},
							{
								"name": "Out",
								"Notes": "",
								"DiagramX": 345,
								"DiagramY": 140,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "OutFluid"
								},
								"isOutput": "y"
							},
							{
								"name": "polyEff",
								"Notes": "",
								"DiagramX": 345,
								"DiagramY": 280,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "polytropic.polyeff"
								},
								"isOutput": "y"
							},
							{
								"name": "feedH",
								"Notes": "",
								"DiagramX": 230,
								"DiagramY": 110,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "feed.h"
								}
							},
							{
								"name": "feedS",
								"Notes": "",
								"DiagramX": 120,
								"DiagramY": 245,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "feed.s"
								}
							},
							{
								"name": "F",
								"Notes": "",
								"DiagramX": 230,
								"DiagramY": 170,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "feed.f"
								}
							},
							{
								"name": "X",
								"Notes": "",
								"DiagramX": 230,
								"DiagramY": 195,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "feed.x"
								}
							},
							{
								"name": "Pin",
								"Notes": "",
								"DiagramX": 120,
								"DiagramY": 220,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "feed.p"
								}
							},
							{
								"name": "feedV",
								"Notes": "",
								"DiagramX": 120,
								"DiagramY": 270,
								"HideInfo": "y",
								"DiagramNotes": "n",
								"Type": "Expression",
								"Formula": {
									"Formula": "1/feed.dmolar"
								}
							},
							{
								"name": "Compressor",
								"Notes": "Overview",
								"DiagramX": 120,
								"DiagramY": 110,
								"HideInfo": "y",
								"DiagramNotes": "y",
								"Type": "HTML Form",
								"Formula": {
									"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Compressor Overview</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model represents a thermodynamic model of a <a href=\"https://en.wikipedia.org/wiki/Compressor\" target=\"_blank\">compressor</a>, although it can also stand in for a pump.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>feed</b> - a flash result or similar representing the inlet fluid</li>\n\t\t\t<li><b>outletP</b> - the outlet pressure to compress to.</li>\n\t\t\t<li><b>efficiency</b> - the ideal power needed divided by the actual power needed</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>out</b> - the outlet fluid flash</li>\n\t\t\t<li><b>power</b> - the power required for the compression</li>\n  \t\t<li><b>polyEff</b> - the calculated polytropic efficiency</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tAn ideal compressor is first modeled by performing an isentropic flash using the outlet pressure and the feed entropy in tool <b>IdealOut</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe efficiency, e, of an non-ideal compressor is taken to be:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\te = (hIout - hin) / (hAout - hin)\n\t\t</p>\n\t\t<p>\n\t\t\twhere:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li>hin is the enthalpy of the inlet fluid</li>\n\t\t\t<li>hIOut is the enthalpy of the outlet for the ideal (isentropic) process</li>\n\t\t\t<li>hAout is the enthalpy of the outlet for tne nonideal process</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe desired efficiency is supplied in the input expression <b>Efficiency</b> so by rearranging, the expression <b>H</b> can calculate the nonideal outlet enthalpy, which is used with the outlet pressure to perform an isenthalpic flash in <b>OutFluid</b>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe power required for the compressor can then be calculated in expression <b>Power</b> by multiplying the flow by the difference between the outlet fluid enthalpy and the inlet fluid enthalpy.\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
								}
							},
							{
								"name": "polytropic",
								"Notes": "",
								"DiagramX": 230,
								"DiagramY": 280,
								"HideInfo": "n",
								"DiagramNotes": "n",
								"Type": "Model",
								"diagramScale": 1,
								"indexTool": "overview",
								"Objects": [
									{
										"name": "n",
										"Notes": "n - polytropic path exponent",
										"DiagramX": 280,
										"DiagramY": 255,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "logpratio / {ln InletV / OutletV}"
										}
									},
									{
										"name": "logPRatio",
										"Notes": "Log pressure ratio",
										"DiagramX": 280,
										"DiagramY": 195,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "{ln outlet.p / inletP}"
										}
									},
									{
										"name": "ns",
										"Notes": "ns - isentropic path exponent",
										"DiagramX": 280,
										"DiagramY": 225,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "logpratio / {ln InletV / IdealV}"
										}
									},
									{
										"name": "IdealV",
										"Notes": "vs - Isentropic outlet molar volume",
										"DiagramX": 280,
										"DiagramY": 130,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1/Ideal.dmolar"
										}
									},
									{
										"name": "InletV",
										"Notes": "v1 - Inlet molar volume",
										"DiagramX": 180,
										"DiagramY": 165,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "feedV"
										},
										"isInput": "y"
									},
									{
										"name": "OutletV",
										"Notes": "va - Actual outlet molar volume",
										"DiagramX": 280,
										"DiagramY": 165,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "1/Outlet.dmolar"
										}
									},
									{
										"name": "Ideal",
										"Notes": "Isetropic outlet fluid",
										"DiagramX": 180,
										"DiagramY": 255,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "IdealOut"
										},
										"isInput": "y"
									},
									{
										"name": "Outlet",
										"Notes": "Actual outlet fluid",
										"DiagramX": 180,
										"DiagramY": 285,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "OutFluid"
										},
										"isInput": "y"
									},
									{
										"name": "inletP",
										"Notes": "p1 - Inlet Pressure",
										"DiagramX": 180,
										"DiagramY": 195,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "Pin"
										},
										"isInput": "y"
									},
									{
										"name": "InletH",
										"Notes": "hin - Inlet molar enthalpy",
										"DiagramX": 180,
										"DiagramY": 225,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "feedH"
										},
										"isInput": "y"
									},
									{
										"name": "adEff",
										"Notes": "Ea - Adiabatic efficiency",
										"DiagramX": 280,
										"DiagramY": 285,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "(ideal.h - inletH)/(outlet.h - inletH)"
										}
									},
									{
										"name": "polyEff",
										"Notes": "Ep - Polytropic Efficiency",
										"DiagramX": 280,
										"DiagramY": 315,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "Expression",
										"Formula": {
											"Formula": "adEff *\n(\n\tn / (n - 1) *\n\t(\n\t\t(\n\t\t\tOutlet.p\n\t\t\t/\n\t\t\tinletP\n\t\t)^((n-1)/n)\n\t\t - 1\n\t)\n)\n/\n(\n\tns/ (ns - 1) *\n\t(\n\t\t(\n\t\t\tOutlet.p\n\t\t\t/\n\t\t\tinletP\n\t\t)^((ns-1)/ns)\n\t\t- 1\n\t)\n)"
										},
										"isOutput": "y"
									},
									{
										"name": "Overview",
										"Notes": "Polytropic efficiency overview",
										"DiagramX": 180,
										"DiagramY": 130,
										"HideInfo": "y",
										"DiagramNotes": "y",
										"Type": "HTML Form",
										"Formula": {
											"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Polytropic Efficiency</h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<p>\n\t\t\tThis model calculates the polytropic efficiency for a <a href=\"https://en.wikipedia.org/wiki/Compressor\" target=\"_blank\">compressor</a>.\n\t\t</p>\n\t\t<p>\n\t\t\tThe input expressions are:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li><b>InletV</b> - the molar volume of the inlet fluid</li>\n\t\t\t<li><b>inletP</b> - the pressure of the inlet fluid</li>\n\t\t\t<li><b>inletH</b> - the molar enthalpy of the inlet fluid</li>\n\t\t\t<li><b>Ideal</b> - the flash results for the outlet fluid assuming isentropic compression.</li>\n\t\t\t<li><b>Outlet</b> - the flash results for the actual outlet fluid</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tThe outlet expression is <b>polyEff</b>, the polytropic efficiency.\n\t\t</p>\n\t\t<p>\n\t\t\tThe other expressions implement the calculation outlined below and where the expression calculates a variable mentioned here the the variable's symbol is listed in the expression notes.\n\t\t</p>\n\t\t<h4>Calculation overview</h4>\n\t\t<p>\n\t\t\tPolytropic efficiency can be defined as:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEp = Wp / Wa\n\t\t</p>\n\t\t<p>where:</p>\n\t\t<ul>\n\t\t\t<li>Ep = polytropic efficiency</li>\n\t\t\t<li>Wp = polytropic work</li>\n\t\t\t<li>Wa = actual work</li>\n\t\t</ul>\n\t\t<p>\n\t\t\twhere the actual work <b>Wa</b> is:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tWa = Ws / Ea\n\t\t</p>\n\t\t<p>where:</p>\n\t\t<ul>\n\t\t\t<li>Ea = adiabatic efficiency</li>\n\t\t\t<li>Ws = isentropic work</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tand the adiabatic efficiency <b>Eq</b> can be calculated from:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEa = (hIout - hin) / (hAout - hin)\n\t\t</p>\n\t\t<p>\n\t\t\twhere:\n\t\t</p>\n\t\t<ul>\n\t\t\t<li>hin is the enthalpy of the inlet fluid</li>\n\t\t\t<li>hIOut is the enthalpy of the outlet for the ideal (isentropic) process</li>\n\t\t\t<li>hAout is the enthalpy of the outlet for tne nonideal process</li>\n\t\t</ul>\n\t\t<p>\n\t\t\tBack substituting Wa into the polytropic efficiency formula becomes:\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEp = Ea * Wp / Ws\n\t\t</p>\n\t\t<p>\n\t\t\tThe formulas for <b>Wp</b> and <b>Ws</b> are of the same form and after eliminating common terms from the numerator and denominator, we get\n\t\t</p>\n\t\t<p class=\"formula\">\n\t\t\tEp = Ea * (<br>\n\t\t\t&nbsp;&nbsp;&nbsp;n/(n-1) * ((p2/p1)^((n-1)/n) - 1)<br>\n\t\t\t/<br>\n\t\t\t&nbsp;&nbsp;&nbsp;ns/(ns-1) * ((p2/p1)^((ns-1)/ns) - 1)<br>\n\t\t\t)\n\t\t</p>\n\t\t<p>\n\t\t\twhere:\n\t\t</p>\n\t\t<ul class=\"formula\">\n\t\t\t<li>n = ln(p2/p1) / ln(v1/vs)</li>\n\t\t\t<li>ns = ln(p2/p1) / ln(v1/va)</li>\n\t\t\t<li>p1 = inlet pressure, p2 = outlet pressure</li>\n\t\t\t<li>v1 = inlet molar volume</li>\n\t\t\t<li>vs = isentropic outlet molar volume</li>\n\t\t\t<li>va = actual outlet molar volume</li>\n\t\t</ul>\n\n\t\t</div>\n\t</body>\n</html>"
										}
									}
								]
							}
						]
					}
				]
			},
			{
				"name": "Overview",
				"Notes": "Hydrocarbon Dew Point Overview",
				"DiagramX": 50,
				"DiagramY": 105,
				"HideInfo": "y",
				"DiagramNotes": "y",
				"Type": "HTML Form",
				"Formula": {
					"Formula": "'\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"./help/help.css\" type=\"text/css\">\n\t\t<style>\n\t\t\t#header {\n\t\t\t\tdisplay: grid;\n\t\t\t\tgrid-template-columns: 1fr 65px;\n\t\t\t\tgrid-gap: 10px;\n\t\t\t\tborder-bottom: 1px solid black;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\t\t\t#header img {\n\t\t\t\talign-self: center;\n\t\t\t}\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div id=\"page\">\n\t\t<div id=\"header\">\n\t\t<h3>Gas Plant HC Dewpoint Control </h3>\n\t\t<img src=\"./help/minion64.png\"/>\n\t\t</div>\n\t\t<div class=\"section\">\n\t\t\t<p>\n\t\t\t\tHydrocarbon processing isn't CoolProp's forte, but I thought I would try modelling the front end of a very fictitious dew point control gas plant.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<b>NOTE:</b> be sure and see the last section of this discussion for why this didn't turn out to be a good idea.\n\t\t\t</p>\n\t\t\t<h3>The Process</h3>\n\t\t\t<p>\n\t\t\t\tThe first big idealization is the assumption the inlet gas is dry as CoolProp does not have three phase flash calculations. So for a dry sweet gas, we will assume a flowsheet like this:\n\t\t\t</p>\n\t\t\t<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 900 600\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" xmlns:serif=\"http://www.serif.com/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\">\n\t\t\t\t<g id=\"vertical-separator\" serif:id=\"vertical separator\" transform=\"matrix(0.55064,0,0,0.55064,244.918,418.206)\">\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,0,1.58658,-408.833,-838.042)\">\n\t\t\t\t\t\t\t\t<path d=\"M195.169,347.478C195.169,321.733 174.267,300.83 148.521,300.83C122.775,300.83 101.873,321.733 101.873,347.478L101.873,558.324C101.873,584.07 122.775,604.972 148.521,604.972C174.267,604.972 195.169,584.07 195.169,558.324L195.169,347.478Z\" style=\"fill:none;stroke:black;stroke-width:1.14px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,0,1.58658,-408.833,-838.042)\">\n\t\t\t\t\t\t\t\t<path d=\"M102.521,349.617L195.911,349.479\" style=\"fill:none;stroke:black;stroke-width:1.14px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,0,1.58658,-408.833,-838.042)\">\n\t\t\t\t\t\t\t\t<path d=\"M102.521,560.305L195.911,559.707\" style=\"fill:none;stroke:black;stroke-width:1.14px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.81607,0,0,1.81607,-536.3,-1271.88)\">\n\t\t\t\t\t\t\t\t<path d=\"M159.254,628.718L99.335,628.718\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<g id=\"vertical-separator1\" serif:id=\"vertical separator\" transform=\"matrix(0.55064,0,0,0.55064,842.233,416.903)\">\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,0,1.58658,-408.833,-838.042)\">\n\t\t\t\t\t\t\t\t<path d=\"M195.169,347.478C195.169,321.733 174.267,300.83 148.521,300.83C122.775,300.83 101.873,321.733 101.873,347.478L101.873,558.324C101.873,584.07 122.775,604.972 148.521,604.972C174.267,604.972 195.169,584.07 195.169,558.324L195.169,347.478Z\" style=\"fill:none;stroke:black;stroke-width:1.14px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,0,1.58658,-408.833,-838.042)\">\n\t\t\t\t\t\t\t\t<path d=\"M102.521,349.617L195.911,349.479\" style=\"fill:none;stroke:black;stroke-width:1.14px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,0,1.58658,-408.833,-838.042)\">\n\t\t\t\t\t\t\t\t<path d=\"M102.521,560.305L195.911,559.707\" style=\"fill:none;stroke:black;stroke-width:1.14px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<g id=\"Refrig\" transform=\"matrix(1,0,0,1,-7.4522,13.8165)\">\n\t\t\t\t\t\t<g transform=\"matrix(1,0,0,1,-50.3906,-282.143)\">\n\t\t\t\t\t\t\t\t<rect x=\"418.831\" y=\"700.666\" width=\"177.152\" height=\"78.538\" style=\"fill:white;fill-opacity:0;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1,0,0,1,-42.9384,-295.959)\">\n\t\t\t\t\t\t\t\t<path d=\"M199.779,500.51L199.779,478.612L430.735,478.612L430.735,445.842\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1,0,0,1,-42.9384,-295.959)\">\n\t\t\t\t\t\t\t\t<path d=\"M563.442,445.842L563.442,517.819L495.208,517.819L495.208,549.005\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1,0,0,1,-42.9384,-295.959)\">\n\t\t\t\t\t\t\t\t<path d=\"M495.208,655.88L495.208,677.18L681.588,677.18L681.588,619.748L755.479,619.748\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1,0,0,1,-42.9384,-295.959)\">\n\t\t\t\t\t\t\t\t<path d=\"M795.796,499.379L795.796,410.749L623.242,410.749\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1,0,0,1,-42.9384,-295.959)\">\n\t\t\t\t\t\t\t\t<path d=\"M376.271,410.749L350.227,410.749L350.227,337.6L894.339,337.6\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<g id=\"Heat-Exchanger\" serif:id=\"Heat Exchanger\" transform=\"matrix(-2.55142e-06,0.510645,-0.510645,-2.55142e-06,780.671,436.404)\">\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,3.38813e-21,1.58658,-843.664,-69.5007)\">\n\t\t\t\t\t\t\t\t<path d=\"M195.169,347.478C195.169,321.733 174.267,300.83 148.521,300.83C122.775,300.83 101.873,321.733 101.873,347.478L101.873,558.324C101.873,584.07 122.775,604.972 148.521,604.972C174.267,604.972 195.169,584.07 195.169,558.324L195.169,347.478Z\" style=\"fill:none;stroke:black;stroke-width:1.23px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,3.38813e-21,1.58658,-843.664,-69.5007)\">\n\t\t\t\t\t\t\t\t<path d=\"M102.521,349.617L195.911,349.479\" style=\"fill:none;stroke:black;stroke-width:1.23px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,3.38813e-21,1.58658,-843.664,-69.5007)\">\n\t\t\t\t\t\t\t\t<path d=\"M102.521,560.305L195.911,559.707\" style=\"fill:none;stroke:black;stroke-width:1.23px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(-7.92731e-06,-1.58658,1.58658,-7.92731e-06,-1529.4,1378.22)\">\n\t\t\t\t\t\t\t\t<path d=\"M353.162,549.291L563.103,549.654\" style=\"fill:none;stroke:black;stroke-width:1.23px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(-7.92731e-06,-1.58658,1.58658,-7.92731e-06,-1529.4,1378.22)\">\n\t\t\t\t\t\t\t\t<path d=\"M353.162,569.178L563.103,569.108\" style=\"fill:none;stroke:black;stroke-width:1.23px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(-7.92731e-06,-1.58658,1.58658,-7.92731e-06,-1529.4,1378.22)\">\n\t\t\t\t\t\t\t\t<path d=\"M353.162,589.243L563.103,589.89\" style=\"fill:none;stroke:black;stroke-width:1.23px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(-7.92731e-06,-1.58658,1.58658,-7.92731e-06,-1529.4,1378.22)\">\n\t\t\t\t\t\t\t\t<path d=\"M353.162,609.725L563.103,609.624\" style=\"fill:none;stroke:black;stroke-width:1.23px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t\t<g id=\"Cooler\" transform=\"matrix(0.463706,0,0,0.463706,166.129,571.226)\">\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,0,1.58658,-564.777,-805.138)\">\n\t\t\t\t\t\t\t\t<circle cx=\"735.181\" cy=\"167.587\" r=\"69.251\" style=\"fill:none;stroke:black;stroke-width:1.36px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,0,1.58658,-696.591,-780.116)\">\n\t\t\t\t\t\t\t\t<path d=\"M799.807,119.07L751.025,167.547\" style=\"fill:none;stroke:black;stroke-width:1.36px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,0,1.58658,-696.591,-780.116)\">\n\t\t\t\t\t\t\t\t<path d=\"M838.062,180.07L799.807,119.07\" style=\"fill:none;stroke:black;stroke-width:1.36px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.58658,0,0,1.58658,-696.591,-780.116)\">\n\t\t\t\t\t\t\t\t<path d=\"M885.227,133.087L838.052,179.677\" style=\"fill:none;stroke:black;stroke-width:1.36px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(-1.18217,-2.17161e-16,5.39338e-16,-1.72727,1809.76,-181.509)\">\n\t\t\t\t\t\t\t\t<path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:1.46px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.18217,7.23868e-17,-3.27809e-16,1.72727,-606.609,-997.003)\">\n\t\t\t\t\t\t\t\t<path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:1.46px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(0,1.18217,-1.72727,-2.22045e-16,1283.9,-1572.61)\">\n\t\t\t\t\t\t\t\t<path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:1.46px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(0,1.18217,-1.72727,-2.22045e-16,-4.88043,-1552.68)\">\n\t\t\t\t\t\t\t\t<path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:1.46px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-466.933,-1840.32)\">\n\t\t\t\t\t\t\t\t<path d=\"M445.886,614.892L430.169,614.892\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-466.933,-1840.32)\">\n\t\t\t\t\t\t\t\t<path d=\"M430.169,614.892L430.169,714.431\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-466.933,-1840.32)\">\n\t\t\t\t\t\t\t\t<path d=\"M545.111,589.235L560.163,589.235L560.163,668.518\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-466.933,-1840.32)\">\n\t\t\t\t\t\t\t\t<path d=\"M560.163,686.051L560.163,714.004\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-466.933,-1840.32)\">\n\t\t\t\t\t\t\t\t<path d=\"M199.854,767.654L199.854,849.565L899.286,849.565\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-466.933,-1840.32)\">\n\t\t\t\t\t\t\t\t<path d=\"M799.172,767.654L799.172,798.639L899.603,798.639\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(0,1.18217,-1.72727,-2.22045e-16,613.554,-1582.9)\">\n\t\t\t\t\t\t\t\t<path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:1.46px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(0,1.18217,-1.72727,-2.22045e-16,1593.27,-1186.4)\">\n\t\t\t\t\t\t\t\t<path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:1.46px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(0,1.18217,-1.72727,-2.22045e-16,1591.65,-1077.14)\">\n\t\t\t\t\t\t\t\t<path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:1.46px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(0,1.18217,-1.72727,-2.22045e-16,1581.98,-2180.84)\">\n\t\t\t\t\t\t\t\t<path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:1.46px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.44774e-16,-1.18217,1.72727,4.33574e-16,757.322,113.839)\">\n\t\t\t\t\t\t\t\t<path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:1.46px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(1.18217,7.23868e-17,-3.27809e-16,1.72727,-466.784,-548.456)\">\n\t\t\t\t\t\t\t\t<path d=\"M903.829,69.599L911.659,83.318L896.016,83.318L903.829,69.599Z\" style=\"fill:rgb(19,6,6);stroke:black;stroke-width:1.46px;\"/>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-442.479,-1969.13)\">\n\t\t\t\t\t\t\t\t<text x=\"418.487px\" y=\"808.037px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">Refrigeration</text>\n\t\t\t\t\t\t\t\t<text x=\"465.848px\" y=\"832.822px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">Unit</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-319.838,-1824.91)\">\n\t\t\t\t\t\t\t\t<text x=\"311.488px\" y=\"561.005px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">Chiller</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-390.33,-1812.37)\">\n\t\t\t\t\t\t\t\t<text x=\"411.129px\" y=\"457.807px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">Gas/Gas</text>\n\t\t\t\t\t\t\t\t<text x=\"401.11px\" y=\"482.592px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">Exchanger</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-405.061,-1806.69)\">\n\t\t\t\t\t\t\t\t<text x=\"63.723px\" y=\"600.639px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">Feed</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-740.188,-2240.04)\">\n\t\t\t\t\t\t\t\t<text x=\"231.564px\" y=\"657.369px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">Inlet</text>\n\t\t\t\t\t\t\t\t<text x=\"201.547px\" y=\"682.154px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">Separator</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-520.289,-2389.82)\">\n\t\t\t\t\t\t\t\t<text x=\"694.447px\" y=\"750.25px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">Low</text>\n\t\t\t\t\t\t\t\t<text x=\"649.095px\" y=\"775.035px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">T<tspan x=\"661.095px 674.443px \" y=\"775.035px 775.035px \">em</tspan>perature</text>\n\t\t\t\t\t\t\t\t<text x=\"663.761px\" y=\"799.82px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">Separator</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-372.519,-1802.92)\">\n\t\t\t\t\t\t\t\t<text x=\"743.616px\" y=\"354.454px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">Sale Gas</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,-349.314,-1826.33)\">\n\t\t\t\t\t\t\t\t<text x=\"769.916px\" y=\"822.734px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:24px;\">Liquids</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t\t<g transform=\"matrix(2.15654,0,0,2.15654,130.317,-1190.37)\">\n\t\t\t\t\t\t\t\t<text x=\"-3.275px\" y=\"14.083px\" style=\"font-family:'ArialMT', 'Arial', sans-serif;font-size:30px;\">Hydrocarbon Dew Point Control</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t</g>\n\t\t\t</svg>\n\t\t\t<p>\n\t\t\t\tAn inlet stream with a silly, but easy to type, composition is fed to an inlet separator <b>feed</b>, where the liquids are removed.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe remaining gas is cooled, first in a gas/gas exchanger and then by refrigerant in a chiller. It then goes to a low temperature separator where more liquids are removed. The vapour from the low temperature separator is used to provide the cooling for the gas/gas exchanger and is the product sales gas.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThere is usually some specification about the dew point of the sales gas heading for the pipeline. For this example I have assumed it to be -10 degF at 800 psi, just because my foggy memory of such things is in US units. It is thus necessary to calculate temperature needed in the low temperature separator to meet this condition.\n\t\t\t</p>\n\t\t<div class=\"section\">\n\t\t\t<h3>The Solution</h3>\n\t\t\t<p>\n\t\t\t\tThe <b>feed</b> flash represents both the inlet stream and the inlet separator. It is fully specified with arbitrary values.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe flow and composition of the low temperature separator will be that of the vapour from the <b>feed</b>. The pressure is entered as the <b>feed</b> pressure minus 120 kpa to account for the pressure drops across the two exchangers.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe <b>lts</b> temperature is to be calculated and a little trial and error suggested it would be around -25 degC. The <b>lts</b> temperature is thus entered as:\n\t\t\t</p>\n\t\t\t<p class=\"formula\">\n\t\t\t\t-25 degC - dewsolve.1 * 5 deltac\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\twhere <b>dewSolve</b> is the name of the solver tool. Its output will initially be 0 and for a single value solution, will be constrained to -1 to 1. Thus I multiplied that output by 5 deltaC to\n\t\t\t\tmake the solution range -20 to -30 degC.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe <b>dewPoint</b> flash tool calculates the dew point for the vapour from the low temperature separator at the 800 psia specification. The resulting temperature is used to calculate the error for the solver by setting the <b>f1</b> input for <b>dewSolve</b> to:\n\t\t\t</p>\n\t\t\t<p class=\"formula\">\n\t\t\t\t(dewpt.t - -10. degF)/1 deltac\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe solver error must be unitless, so the difference between the calculated dew point and the specification is divided by 1 deltac.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tIt is worth noting the significance of difference between <b>deltac</b> and <b>degC</b>. Converting 1 degC to base units would result in 274 K, which isn't the division you want.  One deltac is equivalent to 1 K, but is used to make it obvious that it is a temperature difference. Changing the above formula to divide by <b>1 K</b> would produce the same result.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe three flash tools and the solver are all that is required to answer the main question.  A <b>lts</b> temperature of about -28.7 degC will give a sales gas dew point of -10 degF at 800 psia.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tHowever the exchanger duties and power required for refrigeration might also be needed, so I have addded some additional calculations, starting with the gas/gas exchanger. I copied a <b>HeatExch</b> model from the <b>ToolBox</b> in the <b>Getting Started</b> session and named it <b>GasGasExch</b>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe <b>Side1In</b> input expression for the exchanger is <b>feed.v</b> representing the vapour from the inlet separator. The <b>Side2In</b> expression is <b>lts.v</b> for the vapour from low temperature separator. Finally the <b>dt</b> input is set to 5 deltaC, indicating the temperature approach between the outlet sales gas and the inlet separator vapour.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tSince the side 2 inlet and outlet and the side 1 inlet now have known enthalpy values and flows, the \n\t\t\t\tside 1 outlet conditions can be calculated by a heat balance and an isenthalpic flash. The side 1 outlet is the feed to the <b>Chiller</b>, so the chiller duty can be calculated in <b>ChillerDuty</b> expression by:\n\t\t\t</p>\n\t\t\t<p class=\"formula\">\n\t\t\t\t(GasGasExch.side1out.h - lts.h) * lts.f\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\twhich is simply the difference between the inlet and outlet enthalpies multiplied by the flow.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe refrigeration unit is modelled by copying the <b>Refrigeration</b> model from the <b>Getting Started</b> session and modifying its inputs. The <b>ColdT</b> input is set with a 5 deltaC approach to the low temperature separator temperature. The <b>InletQ</b> is the calculated <b>ChillerDuty</b> value.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe condenser temperature <b>CondT</b> and pressure drop <b>CondDp</b> are left at 40 degC and 35 kpa respectively, but the CoolerDp is set to:\n\t\t\t</p>\n\t\t\t<p class=\"formula\">\n\t\t\t\tgasGasExch.side1Out.p - lts.p\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tto reflect the previous chosen pressure drops.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tFinally the thermo definition in coolerOut is changed to <b>'n-Propane;massf</b> to reflect the hydrocarbon theme.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe result is a refrigeration compressor power of 65 kW or about 87 hp.\n\t\t\t</p>\n\t\t</div>\n\t\t<div id=\"beware\" class=\"section\">\n\t\t\t<h3>The Problem - Beware Contrived Examples</h3>\n\t\t</div>\n\t\t<p>\n\t\t\tThis is all very nice, but it disguises a problem CoolProp seems to have with this problem. Many modifications, such as a higher feed pressure or temperature, will result in the dew point flash failing. In addition I have included a phase envelope graph for the <b>lts</b> bulk composition, but what I would really like is one for the sales gas, since checking that the two phase envelope will never be encountered at pipeline conditions would be preferable to just a dew point check. However attempting to calculate an envelope for <b>dewpt</b> (which has the sales gas composition) fails.\n\t\t</p>\n\t\t<p>\n\t\t\tDigging deeper, it gets worse. We can see the envelope for the <b>lts</b> bulk composition, so I tried doing some plain T, P flashes around the bubble point and dew point at 800 psia. A bubble point gives a temperature of -61.144 degC, which fits with the envelope. Try a T, P flash at -61.14 degC, i.e. just 0.004 degree above the bubble point and the vapour fraction is reported as almost 10 percent, which seems rather suspicious.\n\t\t</p>\n\t\t<p>\n\t\t\tTry -30 degC and the reported vapour fraction is 0. Definitely not right.  Try -35 degC and the flash fails.\n\t\t</p>\n\t\t<p>\n\t\t\tAsking for a dew temperature yields 15.453 degC. A T, P flash at 15.45 degC yields a vapour fraction of 1.00035. Hmmmm.\n\t\t</p>\n\t\t<p>\n\t\t\tMy first thought was that I had somehow screwed up the CoolProp implementation, but I was able to reproduce the errors using their python interface.\n\t\t</p>\n\t\t<p>\n\t\t\tSo while using Math Minion and CoolProp for any real work isn't recommended in any case, it may be too frustrating even for just playing with this type of problem. The solution method may be interesting, but the actual results are questionable.\n\t\t\t&#128530;\n\t\t</p>\n\t\t<p>\n\t\t\tWhat does this say about other uses of CoolProp in Math Minion?  Not sure.\n\t\t</p>\n\t\t<p>\n\t\t\t<a href=\"http://redtree.com/contact.html\" target=\"_blank\">Craig</a>\n\t\t</p>\n\t\t</div>\n\t</body>\n</html>"
				}
			}
		]
	}
}