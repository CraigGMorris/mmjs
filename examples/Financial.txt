{
	"Program": "Rtm",
	"Version": 3,
	"DetailWidth": 320,
	"DeviceWidth": 1024,
	"UserUnitSets": {},
	"UserUnits": [
		null,
		null
	],
	"CaseName": "Financial",
	"DefaultUnitSet": "SI",
	"SelectedObject": "",
	"ModelPath": "/.root",
	"RootModel": {
		"name": "root",
		"DiagramX": 80,
		"DiagramY": 80,
		"HideInfo": "n",
		"DiagramNotes": "n",
		"HtmlNotes": "n",
		"Type": "Model",
		"diagramScale": 1,
		"Objects": [
			{
				"name": "PeriodicIRR",
				"Notes": "<b>Periodic IRR</b>\nCalculates the internal rate of return for a series of cash flows that occur at regular intervals.",
				"DiagramX": 90,
				"DiagramY": 20,
				"HideInfo": "n",
				"DiagramNotes": "y",
				"HtmlNotes": "y",
				"Type": "Model",
				"diagramScale": 1,
				"Objects": [
					{
						"name": "Payments",
						"Notes": "Cash flows in order of the periods    At least one payment must be negative and one positive.",
						"DiagramX": 20,
						"DiagramY": 45,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"isOutput": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "{cc -70000, 12000, 15000, 18000, 21000, 26000}"
						},
						"isInput": "y",
						"showInput": "y"
					},
					{
						"name": "Guess",
						"Notes": "A guess for the rate of return",
						"DiagramX": 20,
						"DiagramY": 95,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": ".1"
						},
						"isInput": "y",
						"showInput": "y"
					},
					{
						"name": "error",
						"DiagramX": 110,
						"DiagramY": 75,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "{sum Payments / (1 + rate )^(0:({nrows Payments} - 1))}"
						}
					},
					{
						"name": "solver",
						"DiagramX": 110,
						"DiagramY": 45,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Equation Solver",
						"f0": "error * 1e10",
						"c0": "1",
						"maxIter": 200,
						"maxJacobians": 5,
						"Enabled": "y"
					},
					{
						"name": "rate",
						"Notes": "The IRR",
						"DiagramX": 110,
						"DiagramY": 105,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"isOutput": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "solver.1 + guess "
						}
					}
				]
			},
			{
				"name": "Payments",
				"Notes": "<b>Payments</b>\nCalculates the payment made each period for a present value, number of payments and and interest rate giving a defined future value.\n\nThe total payments, interest and principal for each period are also calculated.",
				"DiagramX": 0,
				"DiagramY": 90,
				"HideInfo": "n",
				"DiagramNotes": "y",
				"HtmlNotes": "y",
				"Type": "Model",
				"diagramScale": 1,
				"Objects": [
					{
						"name": "pmt",
						"Notes": "The payment made each period.",
						"DiagramX": 165,
						"DiagramY": -50,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"isOutput": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "(-Present_Value *(1 + rate) ^ Number_Pmts + Future_Value ) /\n(( 1 + rate * Payment_Type ) *\n((1 + rate )^ Number_Pmts - 1) /\nrate)"
						},
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "TotalPaid",
						"Notes": "The total of all payments by period.\n",
						"DiagramX": 165,
						"DiagramY": -20,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "pmt * 1:Number_Pmts"
						},
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "principalPaid",
						"Notes": "     Cumulative principal paid by period",
						"DiagramX": 165,
						"DiagramY": 95,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "-Present_Value +\n((-pmt * ( 1 + rate * Payment_Type ) *\n((1 + rate )^ pmtsLeft- 1) / rate ) + Future_Value) /\n(1 + rate) ^ pmtsLeft"
						},
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "pmtsLeft",
						"Notes": "Number of remaining payments",
						"DiagramX": 165,
						"DiagramY": 175,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "Number_Pmts - 1:Number_Pmts"
						},
						"format": "10.0f"
					},
					{
						"name": "InterestPaid",
						"Notes": "Cumulative Interest Paid by period\n",
						"DiagramX": 165,
						"DiagramY": 20,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "pmt * 1:Number_Pmts + principalPaid"
						},
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "PeriodInterest",
						"Notes": "Amount of interest paid each period\n",
						"DiagramX": 165,
						"DiagramY": 135,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "InterestPaid - {cc 0, InterestPaid[1:(Number_Pmts-1)]}"
						},
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "PeriodPrincipal",
						"Notes": "Amount of principal paid each period\n",
						"DiagramX": 165,
						"DiagramY": 60,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "PrincipalPaid - {cc 0, PrincipalPaid[1:(Number_Pmts-1)]}"
						},
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "Table",
						"DiagramX": 165,
						"DiagramY": 210,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"isOutput": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "{table\n\t{cc\n\t\t\"Pmt No\",\n\t\t\"Total Paid\",\n\t\t\"Principal Paid\",\n\t\t\"interest Paid\",\n\t\t\"Period Principal\",\n\t\t\"Period Interest\"\n\t},\n\t1:Number_Pmts,\n\tTotalPaid,\n\tPrincipalPaid,\n\tInterestPaid,\n\tPeriodPrincipal,\n\tPeriodInterest\n}"
						},
						"tableUnits": {
							"2": "dollar",
							"3": "dollar",
							"4": "dollar",
							"5": "dollar",
							"6": "dollar"
						},
						"tableFormats": [
							null,
							"10.0f",
							"10.2f",
							"10.2f",
							"10.2f",
							"10.2f",
							"10.2f"
						]
					},
					{
						"name": "Present_Value",
						"Notes": "The present value.",
						"DiagramX": 25,
						"DiagramY": -50,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "600000"
						},
						"isInput": "y",
						"showInput": "y",
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "Rate",
						"Notes": "The interest rate per period.",
						"DiagramX": 25,
						"DiagramY": -15,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "1.95 \"%\" / 12"
						},
						"isInput": "y",
						"showInput": "y",
						"displayUnit": "%"
					},
					{
						"name": "Number_Pmts",
						"Notes": "The number of payment periods.",
						"DiagramX": 25,
						"DiagramY": 20,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "30*12"
						},
						"isInput": "y",
						"showInput": "y",
						"format": "10.0f"
					},
					{
						"name": "Payment_Type",
						"Notes": "Payments made at:",
						"DiagramX": 25,
						"DiagramY": 65,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"isOutput": "y",
						"Type": "Menu",
						"optionsFormula": {
							"Formula": "{table {cc \"Label\", \"value\"},\n\t{cc\n\t\t\"End of Period\",\n\t\t\"Start of Period\"\n\t},\n\t{cc 1, 0}\n}"
						},
						"selected": 1
					},
					{
						"name": "Future_Value",
						"Notes": "The future value.  For a loan, this is typically 0.",
						"DiagramX": 25,
						"DiagramY": 100,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "0"
						},
						"isInput": "y",
						"showInput": "y",
						"displayUnit": "dollar",
						"format": "10.2f"
					}
				]
			},
			{
				"name": "PresentValue",
				"Notes": "<b>PresentValue</b>\nCalculates the present value for  a series of payments made at regular intervals with a given interest rate.",
				"DiagramX": 0,
				"DiagramY": -35,
				"HideInfo": "y",
				"DiagramNotes": "y",
				"HtmlNotes": "y",
				"Type": "Model",
				"diagramScale": 1,
				"Objects": [
					{
						"name": "Number_Pmts",
						"Notes": "The number of payment periods.",
						"DiagramX": 25,
						"DiagramY": 20,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "20 * 12"
						},
						"showInput": "y",
						"format": "10.0f"
					},
					{
						"name": "Payment_Amt",
						"Notes": "The payment made each period.",
						"DiagramX": 25,
						"DiagramY": 55,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "500 dollar"
						},
						"showInput": "y",
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "Future_Value",
						"Notes": "The future value.  That is the remaining value of after all the payments have been made.  For a loan, this would typically be 0.",
						"DiagramX": 115,
						"DiagramY": -15,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "0"
						},
						"showInput": "y",
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "Present_Value",
						"Notes": "The present value.",
						"DiagramX": 115,
						"DiagramY": 55,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"isOutput": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "(-payment_amt *\n\t(1 + rate * payment_type )\n\t* ((1 + rate )^Number_Pmts - 1)\n\t/ rate\n\t+ future_value\n) /\n(1 + rate) ^ Number_Pmts"
						},
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "Payment_Type",
						"Notes": "Payments made at:",
						"DiagramX": 115,
						"DiagramY": 20,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"isOutput": "y",
						"Type": "Menu",
						"optionsFormula": {
							"Formula": "{table {cc \"Label\", \"value\"},\n\t{cc\n\t\t\"End of Period\",\n\t\t\"Start of Period\"\n\t},\n\t{cc 1, 0}\n}"
						},
						"selected": 1
					},
					{
						"name": "Rate",
						"Notes": "Calculate the present value for  a series of payments made at regular intervals with a given interest rate.",
						"DiagramX": 25,
						"DiagramY": -15,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "0.08 / 12"
						},
						"showInput": "y",
						"displayUnit": "%"
					}
				]
			},
			{
				"name": "FutureValue",
				"Notes": "<b>FutureValue</b>\nCalculates the future value for  a series of payments made at \nregular intervals with a given interest rate.",
				"DiagramX": 0,
				"DiagramY": 25,
				"HideInfo": "n",
				"DiagramNotes": "y",
				"HtmlNotes": "y",
				"Type": "Model",
				"diagramScale": 1,
				"Objects": [
					{
						"name": "fv",
						"Notes": "The future value.  That is the remaining value of after all the payments have been made.",
						"DiagramX": 145,
						"DiagramY": 45,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"isOutput": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "-Present_Value * (1 + rate) ^ Number_Pmts  -\nPayment_Amt * \n(1 + rate * Payment_Type) *\n((1 + rate )^ Number_Pmts - 1) /\nrate"
						},
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "Payment_Type",
						"Notes": "Payments made at:",
						"DiagramX": 145,
						"DiagramY": 15,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"isOutput": "y",
						"Type": "Menu",
						"optionsFormula": {
							"Formula": "{table {cc \"Label\", \"value\"},\n\t{cc\n\t\t\"End of Period\",\n\t\t\"Start of Period\"\n\t},\n\t{cc 1, 0}\n}"
						},
						"selected": 1
					},
					{
						"name": "Present_Value",
						"Notes": "The present value.",
						"DiagramX": 25,
						"DiagramY": -20,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "0"
						},
						"isInput": "y",
						"showInput": "y",
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "Rate",
						"Notes": "The interest rate per period.",
						"DiagramX": 25,
						"DiagramY": 15,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "12 \"%\" / 12"
						},
						"isInput": "y",
						"showInput": "y",
						"displayUnit": "%",
						"format": "10.2f"
					},
					{
						"name": "Number_Pmts",
						"Notes": "The number of payment periods.",
						"DiagramX": 25,
						"DiagramY": 55,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "12"
						},
						"isInput": "y",
						"showInput": "y",
						"format": "10.0f"
					},
					{
						"name": "Payment_Amt",
						"Notes": "The payment made each period.",
						"DiagramX": 145,
						"DiagramY": -20,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "-1000"
						},
						"isInput": "y",
						"showInput": "y",
						"displayUnit": "dollar",
						"format": "10.2f"
					}
				]
			},
			{
				"name": "IRR",
				"Notes": "<b>IRR</b>\nCalculates the internal rate of return for a series of cash flows at defined dates.",
				"DiagramX": 90,
				"DiagramY": -35,
				"HideInfo": "y",
				"DiagramNotes": "y",
				"HtmlNotes": "y",
				"Type": "Model",
				"diagramScale": 1,
				"Objects": [
					{
						"name": "Dates",
						"Notes": "An array of dates on which payments will be made.",
						"DiagramX": 20,
						"DiagramY": 45,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "CashFlows.date"
						},
						"displayUnit": "date"
					},
					{
						"name": "Payments",
						"Notes": "Payments corresponding to the Dates array.    At least one payment must be negative and one positive.",
						"DiagramX": 20,
						"DiagramY": 85,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "CashFlows.Payment"
						}
					},
					{
						"name": "Guess",
						"Notes": "A guess for the rate of return",
						"DiagramX": 20,
						"DiagramY": 140,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": ".1"
						},
						"showInput": "y"
					},
					{
						"name": "error",
						"DiagramX": 110,
						"DiagramY": 70,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "{sum Payments / (1 + rate )^((dates - dates[1])/1 year)}"
						}
					},
					{
						"name": "solver",
						"DiagramX": 110,
						"DiagramY": 45,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Equation Solver",
						"f0": "error * 1e10",
						"c0": "1",
						"maxIter": 200,
						"maxJacobians": 5,
						"Enabled": "y"
					},
					{
						"name": "rate",
						"Notes": "The IRR",
						"DiagramX": 110,
						"DiagramY": 95,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "n",
						"isOutput": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "solver.1/2 + guess"
						}
					},
					{
						"name": "CashFlows",
						"Notes": "Table of cash flows for Internal Rate of Return calculation.  In this case the values are taken from the XIRR example for Excel.",
						"DiagramX": -65,
						"DiagramY": 45,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"isOutput": "y",
						"Type": "Data Table",
						"Columns": [
							{
								"name": "Date",
								"displayUnit": "date",
								"format": "10.0f",
								"nValues": [
									1199145600,
									1204329600,
									1225324800,
									1234656000,
									1238544000
								],
								"unitDimensions": "0 0 1 0 0 0 0",
								"defaultValue": "Payment_Date"
							},
							{
								"name": "Payment",
								"displayUnit": "dollar",
								"format": "10.2f",
								"nValues": [
									-10000,
									2750,
									4250,
									3250,
									2750
								],
								"unitDimensions": "0 0 0 0 0 0 0",
								"defaultValue": "payment_amt"
							}
						],
						"Filter": {
							"Formula": ""
						}
					},
					{
						"name": "Payment_Date",
						"Notes": "",
						"DiagramX": -65,
						"DiagramY": 100,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "20090401 date"
						},
						"showInput": "y",
						"displayUnit": "date",
						"format": "10.0f"
					},
					{
						"name": "Payment_Amt",
						"Notes": "",
						"DiagramX": -65,
						"DiagramY": 125,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "2750 dollar"
						},
						"showInput": "y",
						"displayUnit": "dollar",
						"format": "10.2f"
					},
					{
						"name": "Add_Payment",
						"Notes": "",
						"DiagramX": -65,
						"DiagramY": 150,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"isOutput": "y",
						"Type": "Button",
						"action": "addrow",
						"targetFormula": {
							"Formula": "'CashFlows"
						},
						"labelFormula": {
							"Formula": "'Add Payment"
						}
					}
				]
			},
			{
				"name": "DBDepreciation",
				"Notes": "<b>DBDepreciation</b>\nCalculates depreciation using the fixed declining balance method.",
				"DiagramX": 175,
				"DiagramY": -35,
				"HideInfo": "n",
				"DiagramNotes": "y",
				"HtmlNotes": "y",
				"Type": "Model",
				"diagramScale": 1,
				"Objects": [
					{
						"name": "Cost",
						"Notes": "Initial cost",
						"DiagramX": 45,
						"DiagramY": 30,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "1e6"
						},
						"isInput": "y",
						"showInput": "y",
						"displayUnit": "dollar",
						"format": "12.2f"
					},
					{
						"name": "Salvage",
						"Notes": "Value at the end of the depreciation",
						"DiagramX": 45,
						"DiagramY": 65,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "100000"
						},
						"isInput": "y",
						"showInput": "y",
						"displayUnit": "dollar",
						"format": "12.2f"
					},
					{
						"name": "Life",
						"Notes": "The number of periods of depreciation.",
						"DiagramX": 45,
						"DiagramY": 105,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "6"
						},
						"isInput": "y",
						"showInput": "y",
						"format": "10.1f"
					},
					{
						"name": "Month",
						"Notes": "The number of months in the first year.",
						"DiagramX": 45,
						"DiagramY": 140,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "7"
						},
						"showInput": "y"
					},
					{
						"name": "iter",
						"DiagramX": 160,
						"DiagramY": 30,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Iterator",
						"whileFormula": {
							"Formula": "{le $.i  life + 1}"
						},
						"initXFormula": {
							"Formula": "1"
						},
						"nextXFormula": {
							"Formula": "$.x + 1"
						},
						"recFormulas": [
							{
								"Formula": "$.i"
							},
							{
								"Formula": "this 'each"
							},
							{
								"Formula": "{sum iter.each}"
							}
						],
						"AutoRun": "y"
					},
					{
						"name": "First",
						"DiagramX": 160,
						"DiagramY": 80,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "cost * rate * month / 12"
						}
					},
					{
						"name": "rate",
						"DiagramX": 160,
						"DiagramY": 155,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "{int (1 - ((salvage / cost) ^ (1 / life)))*10^rValue + 0.5} /  10^rValue"
						}
					},
					{
						"name": "This",
						"DiagramX": 160,
						"DiagramY": 55,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "{if {eq iter.i, 1 }, first,\n\t{if {eq iter.i, life + 1}, last, middle}\n}"
						}
					},
					{
						"name": "middle",
						"DiagramX": 160,
						"DiagramY": 105,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "(cost - {sum iter.each}) * rate"
						}
					},
					{
						"name": "Last",
						"DiagramX": 160,
						"DiagramY": 130,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "(cost - {sum iter.each}) * rate * (12 - month) / 12"
						}
					},
					{
						"name": "depreciation",
						"DiagramX": 255,
						"DiagramY": 30,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"isOutput": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "iter.each"
						},
						"displayUnit": "dollar",
						"format": "12.2f"
					},
					{
						"name": "Round",
						"Notes": "Number of digits rate is rounded to.  Limited to 1 - 8.  Excel DB function uses 3.",
						"DiagramX": 45,
						"DiagramY": 180,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "3"
						},
						"isInput": "y",
						"showInput": "y",
						"format": "10.0f"
					},
					{
						"name": "rValue",
						"DiagramX": 160,
						"DiagramY": 180,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "{max {min round, 8}, 1}"
						}
					}
				]
			},
			{
				"name": "VDBDepreciation",
				"Notes": "<b>VDBDepreciation</b>\nCalculates double declining balance depreciation when factor is 2, but this can be adjusted as necessary.\n\nIf <b>Switch</b> is turned on, then it will switch to straight line depreciation as the declining balance drops lower than straight line depreciation.",
				"DiagramX": 175,
				"DiagramY": 20,
				"HideInfo": "n",
				"DiagramNotes": "y",
				"HtmlNotes": "y",
				"Type": "Model",
				"diagramScale": 1,
				"Objects": [
					{
						"name": "Cost",
						"Notes": "Initial cost",
						"DiagramX": 30,
						"DiagramY": -25,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "2400"
						},
						"isInput": "y",
						"showInput": "y",
						"displayUnit": "dollar",
						"format": "12.2f"
					},
					{
						"name": "Salvage",
						"Notes": "Value at the end of the depreciation",
						"DiagramX": 30,
						"DiagramY": 10,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "300"
						},
						"isInput": "y",
						"showInput": "y",
						"displayUnit": "dollar",
						"format": "12.2f"
					},
					{
						"name": "Life",
						"Notes": "The number of periods of depreciation.",
						"DiagramX": 30,
						"DiagramY": 50,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "10"
						},
						"isInput": "y",
						"showInput": "y",
						"format": "10.0f"
					},
					{
						"name": "iter",
						"DiagramX": 150,
						"DiagramY": 5,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Iterator",
						"whileFormula": {
							"Formula": "{le $.i  life}"
						},
						"initXFormula": {
							"Formula": "1"
						},
						"nextXFormula": {
							"Formula": "$.x + 1"
						},
						"recFormulas": [
							{
								"Formula": "$.i"
							},
							{
								"Formula": "this 'each"
							},
							{
								"Formula": "{sum $.each} 'sum"
							},
							{
								"Formula": "straight"
							}
						],
						"AutoRun": "y"
					},
					{
						"name": "First",
						"DiagramX": 150,
						"DiagramY": 60,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "{min (cost) * (factor/life), (cost - salvage )}"
						}
					},
					{
						"name": "DDB",
						"DiagramX": 250,
						"DiagramY": 60,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "{if {eq iter.i, 1 }, first, middle\n}"
						}
					},
					{
						"name": "middle",
						"DiagramX": 150,
						"DiagramY": 85,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "{min (cost - sum) * (factor/life), (cost - salvage - sum)}"
						}
					},
					{
						"name": "Factor",
						"Notes": "The rate at which the balance declines.",
						"DiagramX": 30,
						"DiagramY": 90,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "2"
						},
						"isInput": "y",
						"showInput": "y",
						"format": "10.0f"
					},
					{
						"name": "this",
						"DiagramX": 150,
						"DiagramY": 35,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "{if {lt ddb, straight} * switch, straight, ddb,}"
						}
					},
					{
						"name": "straight",
						"DiagramX": 150,
						"DiagramY": -25,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "{if {gt iter.i, 1},\n\t (cost - salvage - sum)/{max 1, (life - iter.i +1)},\n\t0\n}"
						}
					},
					{
						"name": "Switch",
						"Notes": "Switch to straight line depreciation when the depreciation is greater than the declining balance depreciation?",
						"DiagramX": 30,
						"DiagramY": 135,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"isOutput": "y",
						"Type": "Menu",
						"optionsFormula": {
							"Formula": "{table {cc \"Label\", \"Value\"}\n\t{cc \"Switch\", \"Don't Switch\"}\n\t{cc 1, 0}\n}"
						},
						"selected": 0
					},
					{
						"name": "Sum",
						"DiagramX": 250,
						"DiagramY": 20,
						"HideInfo": "y",
						"DiagramNotes": "n",
						"HtmlNotes": "n",
						"Type": "Expression",
						"Formula": {
							"Formula": "{sum iter.each}"
						}
					},
					{
						"name": "Depreciation",
						"Notes": "Depreciation by period",
						"DiagramX": 250,
						"DiagramY": -25,
						"HideInfo": "y",
						"DiagramNotes": "y",
						"HtmlNotes": "y",
						"isOutput": "y",
						"Type": "Expression",
						"Formula": {
							"Formula": "iter.each"
						}
					}
				]
			}
		]
	}
}